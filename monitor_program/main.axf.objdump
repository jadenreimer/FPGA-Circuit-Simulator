
C:/Users/Joseph/Documents/2nd_Year/ECE243/243-project/monitor_program/main.axf:     file format elf32-littlearm


Disassembly of section .vectors:

00000000 <__cs3_interrupt_vector>:
   0:	18 f0 9f e5 18 f0 9f e5 18 f0 9f e5 18 f0 9f e5     ................
  10:	18 f0 9f e5 18 f0 9f e5 18 f0 9f e5 18 f0 9f e5     ................
  20:	40 00 00 00 8c 4c 00 00 90 4c 00 00 94 4c 00 00     @....L...L...L..
  30:	98 4c 00 00 88 4c 00 00 9c 4c 00 00 a0 4c 00 00     .L...L...L...L..

Disassembly of section .text:

00000040 <__cs3_reset>:
      40:	ea000026 	b	e0 <__cs3_start_asm_sim>

00000044 <__cs3_start_c>:
      44:	e59f608c 	ldr	r6, [pc, #140]	; d8 <__cs3_start_c+0x94>
      48:	e3560000 	cmp	r6, #0
      4c:	e92d4080 	push	{r7, lr}
      50:	e2466001 	sub	r6, r6, #1
      54:	0a00001e 	beq	d4 <__cs3_start_c+0x90>
      58:	e59f507c 	ldr	r5, [pc, #124]	; dc <__cs3_start_c+0x98>
      5c:	e3a00000 	mov	r0, #0
      60:	e3a01000 	mov	r1, #0
      64:	e515200c 	ldr	r2, [r5, #-12]
      68:	e515e010 	ldr	lr, [r5, #-16]
      6c:	e5154008 	ldr	r4, [r5, #-8]
      70:	e15e0002 	cmp	lr, r2
      74:	00822004 	addeq	r2, r2, r4
      78:	0a000009 	beq	a4 <__cs3_start_c+0x60>
      7c:	e3540000 	cmp	r4, #0
      80:	0a000007 	beq	a4 <__cs3_start_c+0x60>
      84:	e1a07002 	mov	r7, r2
      88:	e1a0c002 	mov	r12, r2
      8c:	e8be000c 	ldm	lr!, {r2, r3}
      90:	e8ac000c 	stmia	r12!, {r2, r3}
      94:	e067300c 	rsb	r3, r7, r12
      98:	e1540003 	cmp	r4, r3
      9c:	e1a0200c 	mov	r2, r12
      a0:	1afffff9 	bne	8c <__cs3_start_c+0x48>
      a4:	e515e004 	ldr	lr, [r5, #-4]
      a8:	e35e0000 	cmp	lr, #0
      ac:	11a03002 	movne	r3, r2
      b0:	0a000003 	beq	c4 <__cs3_start_c+0x80>
      b4:	e8a30003 	stmia	r3!, {r0, r1}
      b8:	e062c003 	rsb	r12, r2, r3
      bc:	e15e000c 	cmp	lr, r12
      c0:	1afffffb 	bne	b4 <__cs3_start_c+0x70>
      c4:	e2466001 	sub	r6, r6, #1
      c8:	e3760001 	cmn	r6, #1
      cc:	e2855014 	add	r5, r5, #20
      d0:	1affffe3 	bne	64 <__cs3_start_c+0x20>
      d4:	eb0012d2 	bl	4c24 <__cs3_premain>
      d8:	00000001 	.word	0x00000001
      dc:	00004f98 	.word	0x00004f98

000000e0 <__cs3_start_asm_sim>:
      e0:	e28f103c 	add	r1, pc, #60	; 0x3c
      e4:	e3a00016 	mov	r0, #22
      e8:	ef123456 	svc	0x00123456
      ec:	e3500000 	cmp	r0, #0
      f0:	ba000008 	blt	118 <__cs3_start_asm_sim+0x38>
      f4:	e59f2028 	ldr	r2, [pc, #40]	; 124 <__cs3_heap_start_ptr>
      f8:	e59fd01c 	ldr	sp, [pc, #28]	; 11c <__cs3_start_asm_sim+0x3c>
      fc:	e5920008 	ldr	r0, [r2, #8]
     100:	e3500000 	cmp	r0, #0
     104:	11a0d000 	movne	sp, r0
     108:	e59f1010 	ldr	r1, [pc, #16]	; 120 <__cs3_start_asm_sim+0x40>
     10c:	e5920004 	ldr	r0, [r2, #4]
     110:	e3500000 	cmp	r0, #0
     114:	15810000 	strne	r0, [r1]
     118:	eaffffc9 	b	44 <__cs3_start_c>
     11c:	3ffffff8 	.word	0x3ffffff8
     120:	000053d8 	.word	0x000053d8

00000124 <__cs3_heap_start_ptr>:
     124:	00005400 	.word	0x00005400

00000128 <_start>:
     128:	e51fd000 	ldr	sp, [pc, #-0]	; 130 <_start+0x8>
     12c:	eaffffc4 	b	44 <__cs3_start_c>
     130:	3ffffff8 	.word	0x3ffffff8

00000134 <deregister_tm_clones>:
     134:	e92d4008 	push	{r3, lr}
     138:	e59f002c 	ldr	r0, [pc, #44]	; 16c <deregister_tm_clones+0x38>
     13c:	e59f302c 	ldr	r3, [pc, #44]	; 170 <deregister_tm_clones+0x3c>
     140:	e0603003 	rsb	r3, r0, r3
     144:	e3530006 	cmp	r3, #6
     148:	8a000001 	bhi	154 <deregister_tm_clones+0x20>
     14c:	e8bd4008 	pop	{r3, lr}
     150:	e12fff1e 	bx	lr
     154:	e59f3018 	ldr	r3, [pc, #24]	; 174 <deregister_tm_clones+0x40>
     158:	e3530000 	cmp	r3, #0
     15c:	0afffffa 	beq	14c <deregister_tm_clones+0x18>
     160:	e1a0e00f 	mov	lr, pc
     164:	e12fff13 	bx	r3
     168:	eafffff7 	b	14c <deregister_tm_clones+0x18>
     16c:	000053e0 	.word	0x000053e0
     170:	000053e3 	.word	0x000053e3
     174:	00000000 	.word	0x00000000

00000178 <register_tm_clones>:
     178:	e92d4008 	push	{r3, lr}
     17c:	e59f0034 	ldr	r0, [pc, #52]	; 1b8 <register_tm_clones+0x40>
     180:	e59f3034 	ldr	r3, [pc, #52]	; 1bc <register_tm_clones+0x44>
     184:	e0603003 	rsb	r3, r0, r3
     188:	e1a03143 	asr	r3, r3, #2
     18c:	e0833fa3 	add	r3, r3, r3, lsr #31
     190:	e1b010c3 	asrs	r1, r3, #1
     194:	1a000001 	bne	1a0 <register_tm_clones+0x28>
     198:	e8bd4008 	pop	{r3, lr}
     19c:	e12fff1e 	bx	lr
     1a0:	e59f2018 	ldr	r2, [pc, #24]	; 1c0 <register_tm_clones+0x48>
     1a4:	e3520000 	cmp	r2, #0
     1a8:	0afffffa 	beq	198 <register_tm_clones+0x20>
     1ac:	e1a0e00f 	mov	lr, pc
     1b0:	e12fff12 	bx	r2
     1b4:	eafffff7 	b	198 <register_tm_clones+0x20>
     1b8:	000053e0 	.word	0x000053e0
     1bc:	000053e0 	.word	0x000053e0
     1c0:	00000000 	.word	0x00000000

000001c4 <__do_global_dtors_aux>:
     1c4:	e92d4010 	push	{r4, lr}
     1c8:	e59f402c 	ldr	r4, [pc, #44]	; 1fc <__do_global_dtors_aux+0x38>
     1cc:	e5d43000 	ldrb	r3, [r4]
     1d0:	e3530000 	cmp	r3, #0
     1d4:	1a000006 	bne	1f4 <__do_global_dtors_aux+0x30>
     1d8:	ebffffd5 	bl	134 <deregister_tm_clones>
     1dc:	e59f301c 	ldr	r3, [pc, #28]	; 200 <__do_global_dtors_aux+0x3c>
     1e0:	e3530000 	cmp	r3, #0
     1e4:	159f0018 	ldrne	r0, [pc, #24]	; 204 <__do_global_dtors_aux+0x40>
     1e8:	1320f000 	nopne	{0}
     1ec:	e3a03001 	mov	r3, #1
     1f0:	e5c43000 	strb	r3, [r4]
     1f4:	e8bd4010 	pop	{r4, lr}
     1f8:	e12fff1e 	bx	lr
     1fc:	000053e0 	.word	0x000053e0
     200:	00000000 	.word	0x00000000
     204:	00004d2c 	.word	0x00004d2c

00000208 <frame_dummy>:
     208:	e92d4008 	push	{r3, lr}
     20c:	e59f3034 	ldr	r3, [pc, #52]	; 248 <frame_dummy+0x40>
     210:	e3530000 	cmp	r3, #0
     214:	159f0030 	ldrne	r0, [pc, #48]	; 24c <frame_dummy+0x44>
     218:	159f1030 	ldrne	r1, [pc, #48]	; 250 <frame_dummy+0x48>
     21c:	1320f000 	nopne	{0}
     220:	e59f002c 	ldr	r0, [pc, #44]	; 254 <frame_dummy+0x4c>
     224:	e5903000 	ldr	r3, [r0]
     228:	e3530000 	cmp	r3, #0
     22c:	0a000003 	beq	240 <frame_dummy+0x38>
     230:	e59f3020 	ldr	r3, [pc, #32]	; 258 <frame_dummy+0x50>
     234:	e3530000 	cmp	r3, #0
     238:	11a0e00f 	movne	lr, pc
     23c:	112fff13 	bxne	r3
     240:	e8bd4008 	pop	{r3, lr}
     244:	eaffffcb 	b	178 <register_tm_clones>
     248:	00000000 	.word	0x00000000
     24c:	00004d2c 	.word	0x00004d2c
     250:	000053e4 	.word	0x000053e4
     254:	00004f98 	.word	0x00004f98
     258:	00000000 	.word	0x00000000

0000025c <write_char>:
    }
}

void write_char(int x, int y, char c) {
  // VGA character buffer
  volatile char * character_buffer = (char *) (0xC9000000 + (y<<7) + x);
     25c:	e28004c9 	add	r0, r0, #-922746880	; 0xc9000000
  *character_buffer = c;
     260:	e7c02381 	strb	r2, [r0, r1, lsl #7]
     264:	e12fff1e 	bx	lr

00000268 <write_string>:
}

void write_string(int x, int y, int size, char string[size]){
     268:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
     26c:	e1a06001 	mov	r6, r1
    if(y<60){
     270:	e351003b 	cmp	r1, #59	; 0x3b
     274:	c8bd80f8 	popgt	{r3, r4, r5, r6, r7, pc}
        for (int i = 0; i < size; i++) {
     278:	e3520000 	cmp	r2, #0
     27c:	d8bd80f8 	pople	{r3, r4, r5, r6, r7, pc}
  // VGA character buffer
  volatile char * character_buffer = (char *) (0xC9000000 + (y<<7) + x);
  *character_buffer = c;
}

void write_string(int x, int y, int size, char string[size]){
     280:	e0825000 	add	r5, r2, r0
     284:	e1a04000 	mov	r4, r0
     288:	e0607003 	rsb	r7, r0, r3
    if(y<60){
        for (int i = 0; i < size; i++) {
            if((x+i)<79)
     28c:	e354004e 	cmp	r4, #78	; 0x4e
     290:	ca000003 	bgt	2a4 <write_string+0x3c>
                write_char(x + i, y, string[i]);
     294:	e1a00004 	mov	r0, r4
     298:	e1a01006 	mov	r1, r6
     29c:	e7d72004 	ldrb	r2, [r7, r4]
     2a0:	ebffffed 	bl	25c <write_char>
     2a4:	e2844001 	add	r4, r4, #1
  *character_buffer = c;
}

void write_string(int x, int y, int size, char string[size]){
    if(y<60){
        for (int i = 0; i < size; i++) {
     2a8:	e1540005 	cmp	r4, r5
     2ac:	1afffff6 	bne	28c <write_string+0x24>
     2b0:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}

000002b4 <clear_chars>:
                write_char(x + i, y, string[i]);
        }
    }
}

void clear_chars(){
     2b4:	e92d4070 	push	{r4, r5, r6, lr}
    for (int x = 0; x < 79; x++)
     2b8:	e3a05000 	mov	r5, #0
                write_char(x + i, y, string[i]);
        }
    }
}

void clear_chars(){
     2bc:	e1a06005 	mov	r6, r5
     2c0:	ea000009 	b	2ec <clear_chars+0x38>
    for (int x = 0; x < 79; x++)
        for(int y = 0; y < 59; y++)
            write_char(x, y, '\0');
     2c4:	e1a00005 	mov	r0, r5
     2c8:	e1a01004 	mov	r1, r4
     2cc:	e1a02006 	mov	r2, r6
     2d0:	ebffffe1 	bl	25c <write_char>
    }
}

void clear_chars(){
    for (int x = 0; x < 79; x++)
        for(int y = 0; y < 59; y++)
     2d4:	e2844001 	add	r4, r4, #1
     2d8:	e354003b 	cmp	r4, #59	; 0x3b
     2dc:	1afffff8 	bne	2c4 <clear_chars+0x10>
        }
    }
}

void clear_chars(){
    for (int x = 0; x < 79; x++)
     2e0:	e2855001 	add	r5, r5, #1
     2e4:	e355004f 	cmp	r5, #79	; 0x4f
     2e8:	08bd8070 	popeq	{r4, r5, r6, pc}
                write_char(x + i, y, string[i]);
        }
    }
}

void clear_chars(){
     2ec:	e1a04006 	mov	r4, r6
     2f0:	eafffff3 	b	2c4 <clear_chars+0x10>

000002f4 <plot_pixel>:
        }
    }
}

void plot_pixel(int x, int y, short int line_color){
    if(x<X_DIM && x>=0 && y<Y_DIM && y>=0)
     2f4:	e35100ef 	cmp	r1, #239	; 0xef
     2f8:	c3a03000 	movgt	r3, #0
     2fc:	d3a03001 	movle	r3, #1
     300:	e3500d05 	cmp	r0, #320	; 0x140
     304:	23a03000 	movcs	r3, #0
     308:	e3530000 	cmp	r3, #0
     30c:	012fff1e 	bxeq	lr
     310:	e3510000 	cmp	r1, #0
     314:	b12fff1e 	bxlt	lr
        *(short int *)(pixel_buffer_start + (y << 10) + (x << 1)) = line_color;
     318:	e30533fc 	movw	r3, #21500	; 0x53fc
     31c:	e3403000 	movt	r3, #0
     320:	e5933000 	ldr	r3, [r3]
     324:	e1a00080 	lsl	r0, r0, #1
     328:	e0831501 	add	r1, r3, r1, lsl #10
     32c:	e18120b0 	strh	r2, [r1, r0]
     330:	e12fff1e 	bx	lr

00000334 <draw_line>:
    for(int deg=0; deg<360; deg++){
        draw_line(x, y, x + r*cos(deg), y + r*sin(deg), colour);
    }
}

void draw_line(int x0, int y0, int x1, int y1, short int line_colour){
     334:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
     338:	e24dd00c 	sub	sp, sp, #12
     33c:	e1a08002 	mov	r8, r2
     340:	e1dd93f0 	ldrsh	r9, [sp, #48]	; 0x30
    int is_steep = abs(y1 - y0) > abs(x1 - x0);
     344:	e061a003 	rsb	r10, r1, r3
     348:	e35a0000 	cmp	r10, #0
     34c:	b26aa000 	rsblt	r10, r10, #0
     350:	e0602002 	rsb	r2, r0, r2
     354:	e3520000 	cmp	r2, #0
     358:	b2622000 	rsblt	r2, r2, #0
     35c:	e15a0002 	cmp	r10, r2
     360:	d3a0a000 	movle	r10, #0
     364:	c3a0a001 	movgt	r10, #1
    int temp = 0;
    if (is_steep){
     368:	e35a0000 	cmp	r10, #0
     36c:	0a000005 	beq	388 <draw_line+0x54>
     370:	e1a02008 	mov	r2, r8
		temp = x0;
		x0 = y0;
		y0 = temp;
		temp = x1;
		x1 = y1;
     374:	e1a08003 	mov	r8, r3
		y1 = temp;
     378:	e1a03002 	mov	r3, r2
}

void draw_line(int x0, int y0, int x1, int y1, short int line_colour){
    int is_steep = abs(y1 - y0) > abs(x1 - x0);
    int temp = 0;
    if (is_steep){
     37c:	e1a02000 	mov	r2, r0
		temp = x0;
		x0 = y0;
     380:	e1a00001 	mov	r0, r1
		y0 = temp;
     384:	e1a01002 	mov	r1, r2
		temp = x1;
		x1 = y1;
		y1 = temp;
    }
    if (x0 > x1){
     388:	e1500008 	cmp	r0, r8
     38c:	da000005 	ble	3a8 <draw_line+0x74>
     390:	e1a02001 	mov	r2, r1
    	temp = x0;
		x0 = x1;
		x1 = temp;
		temp = y0;
		y0 = y1;
     394:	e1a01003 	mov	r1, r3
		y1 = temp;
     398:	e1a03002 	mov	r3, r2
		y0 = temp;
		temp = x1;
		x1 = y1;
		y1 = temp;
    }
    if (x0 > x1){
     39c:	e1a02000 	mov	r2, r0
    	temp = x0;
		x0 = x1;
     3a0:	e1a00008 	mov	r0, r8
		x1 = temp;
     3a4:	e1a08002 	mov	r8, r2
		temp = y0;
		y0 = y1;
		y1 = temp;
    }

    int deltax = x1 - x0;
     3a8:	e060b008 	rsb	r11, r0, r8
    int deltay = abs(y1 - y0);
     3ac:	e0617003 	rsb	r7, r1, r3
     3b0:	e3570000 	cmp	r7, #0
     3b4:	b2677000 	rsblt	r7, r7, #0
    int error = -(deltax / 2);
     3b8:	e08b4fab 	add	r4, r11, r11, lsr #31
     3bc:	e1a040c4 	asr	r4, r4, #1
     3c0:	e2644000 	rsb	r4, r4, #0
    int y = y0;
    int y_step = -1;
     3c4:	e1510003 	cmp	r1, r3
     3c8:	b3a03001 	movlt	r3, #1
     3cc:	a3e03000 	mvnge	r3, #0
     3d0:	e58d3004 	str	r3, [sp, #4]
    if (y0 < y1){
		y_step = 1;
    }
    int i;
    for (i = x0; i < x1; i++){
     3d4:	e1500008 	cmp	r0, r8
     3d8:	aa00000f 	bge	41c <draw_line+0xe8>
     3dc:	e1a05000 	mov	r5, r0
    }

    int deltax = x1 - x0;
    int deltay = abs(y1 - y0);
    int error = -(deltax / 2);
    int y = y0;
     3e0:	e1a06001 	mov	r6, r1
    if (y0 < y1){
		y_step = 1;
    }
    int i;
    for (i = x0; i < x1; i++){
        if (is_steep){
     3e4:	e35a0000 	cmp	r10, #0
            plot_pixel(y, i, line_colour);
     3e8:	11a00006 	movne	r0, r6
     3ec:	11a01005 	movne	r1, r5
        }
        else{
            plot_pixel(i, y, line_colour);
     3f0:	01a00005 	moveq	r0, r5
     3f4:	01a01006 	moveq	r1, r6
     3f8:	e1a02009 	mov	r2, r9
     3fc:	ebffffbc 	bl	2f4 <plot_pixel>
        }
        error = error + deltay;
        if (error >= 0){
     400:	e0944007 	adds	r4, r4, r7
            y = y + y_step;
     404:	559d3004 	ldrpl	r3, [sp, #4]
     408:	50866003 	addpl	r6, r6, r3
            error = error - deltax;
     40c:	506b4004 	rsbpl	r4, r11, r4
    int y_step = -1;
    if (y0 < y1){
		y_step = 1;
    }
    int i;
    for (i = x0; i < x1; i++){
     410:	e2855001 	add	r5, r5, #1
     414:	e1580005 	cmp	r8, r5
     418:	cafffff1 	bgt	3e4 <draw_line+0xb0>
        if (error >= 0){
            y = y + y_step;
            error = error - deltax;
        }
    }
}
     41c:	e28dd00c 	add	sp, sp, #12
     420:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, r10, r11, pc}

00000424 <draw_circle>:
            plot_pixel(x, y, colour);
        }
    }
}

void draw_circle(int x, int y, int r, short int colour){
     424:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
     428:	e24dd024 	sub	sp, sp, #36	; 0x24
     42c:	e1a09000 	mov	r9, r0
     430:	e1a0b001 	mov	r11, r1
     434:	e58d201c 	str	r2, [sp, #28]
     438:	e1a08003 	mov	r8, r3
    for(int deg=0; deg<360; deg++){
     43c:	e3a0a000 	mov	r10, #0
        draw_line(x, y, x + r*cos(deg), y + r*sin(deg), colour);
     440:	e59d001c 	ldr	r0, [sp, #28]
     444:	eb000d74 	bl	3a1c <__aeabi_i2d>
     448:	e1cd00f8 	strd	r0, [sp, #8]
     44c:	e1a0000a 	mov	r0, r10
     450:	eb000d71 	bl	3a1c <__aeabi_i2d>
     454:	e1a04000 	mov	r4, r0
     458:	e1a05001 	mov	r5, r1
     45c:	eb0003a9 	bl	1308 <cos>
     460:	e1a06000 	mov	r6, r0
     464:	e1a07001 	mov	r7, r1
     468:	e1a00004 	mov	r0, r4
     46c:	e1a01005 	mov	r1, r5
     470:	eb0003e1 	bl	13fc <sin>
     474:	e1cd01f0 	strd	r0, [sp, #16]
     478:	e1a00009 	mov	r0, r9
     47c:	eb000d66 	bl	3a1c <__aeabi_i2d>
     480:	e1a04000 	mov	r4, r0
     484:	e1a05001 	mov	r5, r1
     488:	e1cd00d8 	ldrd	r0, [sp, #8]
     48c:	e1a02006 	mov	r2, r6
     490:	e1a03007 	mov	r3, r7
     494:	eb000d97 	bl	3af8 <__aeabi_dmul>
     498:	e1a02000 	mov	r2, r0
     49c:	e1a03001 	mov	r3, r1
     4a0:	e1a00004 	mov	r0, r4
     4a4:	e1a01005 	mov	r1, r5
     4a8:	eb000c8e 	bl	36e8 <__adddf3>
     4ac:	eb000f09 	bl	40d8 <__aeabi_d2iz>
     4b0:	e1a06000 	mov	r6, r0
     4b4:	e1a0000b 	mov	r0, r11
     4b8:	eb000d57 	bl	3a1c <__aeabi_i2d>
     4bc:	e1a04000 	mov	r4, r0
     4c0:	e1a05001 	mov	r5, r1
     4c4:	e1cd00d8 	ldrd	r0, [sp, #8]
     4c8:	e1cd21d0 	ldrd	r2, [sp, #16]
     4cc:	eb000d89 	bl	3af8 <__aeabi_dmul>
     4d0:	e1a02000 	mov	r2, r0
     4d4:	e1a03001 	mov	r3, r1
     4d8:	e1a00004 	mov	r0, r4
     4dc:	e1a01005 	mov	r1, r5
     4e0:	eb000c80 	bl	36e8 <__adddf3>
     4e4:	eb000efb 	bl	40d8 <__aeabi_d2iz>
     4e8:	e1a03000 	mov	r3, r0
     4ec:	e58d8000 	str	r8, [sp]
     4f0:	e1a00009 	mov	r0, r9
     4f4:	e1a0100b 	mov	r1, r11
     4f8:	e1a02006 	mov	r2, r6
     4fc:	ebffff8c 	bl	334 <draw_line>
        }
    }
}

void draw_circle(int x, int y, int r, short int colour){
    for(int deg=0; deg<360; deg++){
     500:	e28aa001 	add	r10, r10, #1
     504:	e35a0f5a 	cmp	r10, #360	; 0x168
     508:	1affffcc 	bne	440 <draw_circle+0x1c>
        draw_line(x, y, x + r*cos(deg), y + r*sin(deg), colour);
    }
}
     50c:	e28dd024 	add	sp, sp, #36	; 0x24
     510:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, r10, r11, pc}

00000514 <draw_frame>:
    draw_circle(x1, y1, radius-width, BLACK);
    draw_circle(x0+len, y0, radius, colour);//right
    draw_circle(x0+len, y0, radius-width, BLACK);
}

void draw_frame(int x0, int y0, int x1, int y1, short int colour){
     514:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
     518:	e24dd008 	sub	sp, sp, #8
     51c:	e1a07000 	mov	r7, r0
     520:	e1a06001 	mov	r6, r1
     524:	e1a04002 	mov	r4, r2
     528:	e1a08003 	mov	r8, r3
     52c:	e1dd52f0 	ldrsh	r5, [sp, #32]
    draw_line(x0, y0, x0, y1, colour);//down
     530:	e58d5000 	str	r5, [sp]
     534:	e1a02000 	mov	r2, r0
     538:	ebffff7d 	bl	334 <draw_line>
    draw_line(x0, y1, x1, y1, colour);//right
     53c:	e58d5000 	str	r5, [sp]
     540:	e1a00007 	mov	r0, r7
     544:	e1a01008 	mov	r1, r8
     548:	e1a02004 	mov	r2, r4
     54c:	e1a03008 	mov	r3, r8
     550:	ebffff77 	bl	334 <draw_line>
    draw_line(x1, y1, x1, y0, colour);//up
     554:	e58d5000 	str	r5, [sp]
     558:	e1a00004 	mov	r0, r4
     55c:	e1a01008 	mov	r1, r8
     560:	e1a02004 	mov	r2, r4
     564:	e1a03006 	mov	r3, r6
     568:	ebffff71 	bl	334 <draw_line>
    draw_line(x1, y0, x0, y0, colour);//left
     56c:	e58d5000 	str	r5, [sp]
     570:	e1a00004 	mov	r0, r4
     574:	e1a01006 	mov	r1, r6
     578:	e1a02007 	mov	r2, r7
     57c:	e1a03006 	mov	r3, r6
     580:	ebffff6b 	bl	334 <draw_line>
}
     584:	e28dd008 	add	sp, sp, #8
     588:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

0000058c <draw_switches>:
    for (int x = 0; x < 79; x++)
        for(int y = 0; y < 59; y++)
            write_char(x, y, '\0');
}

void draw_switches(int len, int x0, int y0, int x1, int y1, bool sw1, bool sw2, int colour){
     58c:	e92d45f0 	push	{r4, r5, r6, r7, r8, r10, lr}
     590:	e24dd00c 	sub	sp, sp, #12
     594:	e1a05000 	mov	r5, r0
     598:	e1a06001 	mov	r6, r1
     59c:	e1a04002 	mov	r4, r2
     5a0:	e1a0a003 	mov	r10, r3
     5a4:	e59d8028 	ldr	r8, [sp, #40]	; 0x28
     5a8:	e59d7034 	ldr	r7, [sp, #52]	; 0x34
    if(sw1){
     5ac:	e5dd302c 	ldrb	r3, [sp, #44]	; 0x2c
     5b0:	e3530000 	cmp	r3, #0
     5b4:	0a000007 	beq	5d8 <draw_switches+0x4c>
        draw_line(x0, y0, x0 + len, y0, colour);
     5b8:	e6bf3077 	sxth	r3, r7
     5bc:	e58d3000 	str	r3, [sp]
     5c0:	e1a00001 	mov	r0, r1
     5c4:	e1a01002 	mov	r1, r2
     5c8:	e0862005 	add	r2, r6, r5
     5cc:	e1a03004 	mov	r3, r4
     5d0:	ebffff57 	bl	334 <draw_line>
     5d4:	ea000010 	b	61c <draw_switches+0x90>
    }else{
        draw_line(x0, y0, (x0 + len)*4/5, y0 + len/3, colour);
     5d8:	e0813000 	add	r3, r1, r0
     5dc:	e1a03103 	lsl	r3, r3, #2
     5e0:	e3062667 	movw	r2, #26215	; 0x6667
     5e4:	e3462666 	movt	r2, #26214	; 0x6666
     5e8:	e0c21392 	smull	r1, r2, r2, r3
     5ec:	e1a0cfc3 	asr	r12, r3, #31
     5f0:	e3053556 	movw	r3, #21846	; 0x5556
     5f4:	e3453555 	movt	r3, #21845	; 0x5555
     5f8:	e0c31093 	smull	r1, r3, r3, r0
     5fc:	e0433fc0 	sub	r3, r3, r0, asr #31
     600:	e6bf1077 	sxth	r1, r7
     604:	e58d1000 	str	r1, [sp]
     608:	e1a00006 	mov	r0, r6
     60c:	e1a01004 	mov	r1, r4
     610:	e06c20c2 	rsb	r2, r12, r2, asr #1
     614:	e0833004 	add	r3, r3, r4
     618:	ebffff45 	bl	334 <draw_line>
    }

    if(sw2){
     61c:	e5dd3030 	ldrb	r3, [sp, #48]	; 0x30
     620:	e3530000 	cmp	r3, #0
     624:	0a000007 	beq	648 <draw_switches+0xbc>
        draw_line(x1, y1, x1 + len, y1, colour);
     628:	e6bf3077 	sxth	r3, r7
     62c:	e58d3000 	str	r3, [sp]
     630:	e1a0000a 	mov	r0, r10
     634:	e1a01008 	mov	r1, r8
     638:	e08a2005 	add	r2, r10, r5
     63c:	e1a03008 	mov	r3, r8
     640:	ebffff3b 	bl	334 <draw_line>
     644:	ea000010 	b	68c <draw_switches+0x100>
    }else{
        draw_line(x1, y1, (x1 + len)*4/5, y1 + len/3, colour);
     648:	e08a3005 	add	r3, r10, r5
     64c:	e1a03103 	lsl	r3, r3, #2
     650:	e3062667 	movw	r2, #26215	; 0x6667
     654:	e3462666 	movt	r2, #26214	; 0x6666
     658:	e0c21392 	smull	r1, r2, r2, r3
     65c:	e1a0cfc3 	asr	r12, r3, #31
     660:	e3053556 	movw	r3, #21846	; 0x5556
     664:	e3453555 	movt	r3, #21845	; 0x5555
     668:	e0c31593 	smull	r1, r3, r3, r5
     66c:	e0433fc5 	sub	r3, r3, r5, asr #31
     670:	e6bf1077 	sxth	r1, r7
     674:	e58d1000 	str	r1, [sp]
     678:	e1a0000a 	mov	r0, r10
     67c:	e1a01008 	mov	r1, r8
     680:	e06c20c2 	rsb	r2, r12, r2, asr #1
     684:	e0833008 	add	r3, r3, r8
     688:	ebffff29 	bl	334 <draw_line>
    }

    //circle bois 1
    int radius = 5;
    int width = 2;
    draw_circle(x0, y0, radius, colour);//left
     68c:	e6bf7077 	sxth	r7, r7
     690:	e1a00006 	mov	r0, r6
     694:	e1a01004 	mov	r1, r4
     698:	e3a02005 	mov	r2, #5
     69c:	e1a03007 	mov	r3, r7
     6a0:	ebffff5f 	bl	424 <draw_circle>
    draw_circle(x0, y0, radius-width, BLACK);
     6a4:	e1a00006 	mov	r0, r6
     6a8:	e1a01004 	mov	r1, r4
     6ac:	e3a02003 	mov	r2, #3
     6b0:	e3a03000 	mov	r3, #0
     6b4:	ebffff5a 	bl	424 <draw_circle>
    draw_circle(x0+len, y0, radius, colour);//right
     6b8:	e0865005 	add	r5, r6, r5
     6bc:	e1a00005 	mov	r0, r5
     6c0:	e1a01004 	mov	r1, r4
     6c4:	e3a02005 	mov	r2, #5
     6c8:	e1a03007 	mov	r3, r7
     6cc:	ebffff54 	bl	424 <draw_circle>
    draw_circle(x0+len, y0, radius-width, BLACK);
     6d0:	e1a00005 	mov	r0, r5
     6d4:	e1a01004 	mov	r1, r4
     6d8:	e3a02003 	mov	r2, #3
     6dc:	e3a03000 	mov	r3, #0
     6e0:	ebffff4f 	bl	424 <draw_circle>

    //circle bois 2
    draw_circle(x1, y1, radius, colour);//left
     6e4:	e1a0000a 	mov	r0, r10
     6e8:	e1a01008 	mov	r1, r8
     6ec:	e3a02005 	mov	r2, #5
     6f0:	e1a03007 	mov	r3, r7
     6f4:	ebffff4a 	bl	424 <draw_circle>
    draw_circle(x1, y1, radius-width, BLACK);
     6f8:	e1a0000a 	mov	r0, r10
     6fc:	e1a01008 	mov	r1, r8
     700:	e3a02003 	mov	r2, #3
     704:	e3a03000 	mov	r3, #0
     708:	ebffff45 	bl	424 <draw_circle>
    draw_circle(x0+len, y0, radius, colour);//right
     70c:	e1a00005 	mov	r0, r5
     710:	e1a01004 	mov	r1, r4
     714:	e3a02005 	mov	r2, #5
     718:	e1a03007 	mov	r3, r7
     71c:	ebffff40 	bl	424 <draw_circle>
    draw_circle(x0+len, y0, radius-width, BLACK);
     720:	e1a00005 	mov	r0, r5
     724:	e1a01004 	mov	r1, r4
     728:	e3a02003 	mov	r2, #3
     72c:	e3a03000 	mov	r3, #0
     730:	ebffff3b 	bl	424 <draw_circle>
}
     734:	e28dd00c 	add	sp, sp, #12
     738:	e8bd85f0 	pop	{r4, r5, r6, r7, r8, r10, pc}

0000073c <draw_graph>:
    }
    plot_pixel(5, 5, RED);
    return;
}

void draw_graph(int x, int y, int size, float values[size], short int colour){
     73c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
     740:	e24dd024 	sub	sp, sp, #36	; 0x24
     744:	e1a09000 	mov	r9, r0
     748:	e58d1010 	str	r1, [sp, #16]
     74c:	e1a0b002 	mov	r11, r2
     750:	e1a07003 	mov	r7, r3
     754:	e1dd44f8 	ldrsh	r4, [sp, #72]	; 0x48
    //bars of the graph
    draw_line(x, y + GRAPH_LEN, x, y - GRAPH_LEN, colour);//up-down
     758:	e2815032 	add	r5, r1, #50	; 0x32
     75c:	e2418032 	sub	r8, r1, #50	; 0x32
     760:	e58d4000 	str	r4, [sp]
     764:	e1a01005 	mov	r1, r5
     768:	e1a02000 	mov	r2, r0
     76c:	e1a03008 	mov	r3, r8
     770:	ebfffeef 	bl	334 <draw_line>
    draw_line(x, y, x + GRAPH_LEN, y, colour);//horizontal
     774:	e2896032 	add	r6, r9, #50	; 0x32
     778:	e58d4000 	str	r4, [sp]
     77c:	e1a00009 	mov	r0, r9
     780:	e59d1010 	ldr	r1, [sp, #16]
     784:	e1a02006 	mov	r2, r6
     788:	e1a03001 	mov	r3, r1
     78c:	ebfffee8 	bl	334 <draw_line>

    //arrows of the graph
    //top arrow
    draw_line(x, y - GRAPH_LEN, x-ARROW_LEN, y-GRAPH_LEN+ARROW_LEN, colour);
     790:	e2492002 	sub	r2, r9, #2
     794:	e58d2008 	str	r2, [sp, #8]
     798:	e59d3010 	ldr	r3, [sp, #16]
     79c:	e2433030 	sub	r3, r3, #48	; 0x30
     7a0:	e58d300c 	str	r3, [sp, #12]
     7a4:	e58d4000 	str	r4, [sp]
     7a8:	e1a00009 	mov	r0, r9
     7ac:	e1a01008 	mov	r1, r8
     7b0:	ebfffedf 	bl	334 <draw_line>
    draw_line(x, y - GRAPH_LEN, x+ARROW_LEN, y-GRAPH_LEN+ARROW_LEN, colour);
     7b4:	e289a002 	add	r10, r9, #2
     7b8:	e58d4000 	str	r4, [sp]
     7bc:	e1a00009 	mov	r0, r9
     7c0:	e1a01008 	mov	r1, r8
     7c4:	e1a0200a 	mov	r2, r10
     7c8:	e59d300c 	ldr	r3, [sp, #12]
     7cc:	ebfffed8 	bl	334 <draw_line>
    //right arrow
    draw_line(x + GRAPH_LEN, y, x+GRAPH_LEN-ARROW_LEN, y-ARROW_LEN, colour);
     7d0:	e2898030 	add	r8, r9, #48	; 0x30
     7d4:	e58d4000 	str	r4, [sp]
     7d8:	e1a00006 	mov	r0, r6
     7dc:	e59d1010 	ldr	r1, [sp, #16]
     7e0:	e1a02008 	mov	r2, r8
     7e4:	e2413002 	sub	r3, r1, #2
     7e8:	ebfffed1 	bl	334 <draw_line>
    draw_line(x + GRAPH_LEN, y, x+GRAPH_LEN-ARROW_LEN, y+ARROW_LEN, colour);
     7ec:	e58d4000 	str	r4, [sp]
     7f0:	e1a00006 	mov	r0, r6
     7f4:	e59d1010 	ldr	r1, [sp, #16]
     7f8:	e1a02008 	mov	r2, r8
     7fc:	e2813002 	add	r3, r1, #2
     800:	ebfffecb 	bl	334 <draw_line>
    //bottom arrow
    draw_line(x, y + GRAPH_LEN, x-ARROW_LEN, y+GRAPH_LEN-ARROW_LEN, colour);
     804:	e59dc010 	ldr	r12, [sp, #16]
     808:	e28c6030 	add	r6, r12, #48	; 0x30
     80c:	e58d4000 	str	r4, [sp]
     810:	e1a00009 	mov	r0, r9
     814:	e1a01005 	mov	r1, r5
     818:	e59d2008 	ldr	r2, [sp, #8]
     81c:	e1a03006 	mov	r3, r6
     820:	ebfffec3 	bl	334 <draw_line>
    draw_line(x, y + GRAPH_LEN, x+ARROW_LEN, y+GRAPH_LEN-ARROW_LEN, colour);
     824:	e58d4000 	str	r4, [sp]
     828:	e1a00009 	mov	r0, r9
     82c:	e1a01005 	mov	r1, r5
     830:	e1a0200a 	mov	r2, r10
     834:	e1a03006 	mov	r3, r6
     838:	ebfffebd 	bl	334 <draw_line>

    float max = 0.000001;
    //find the max in the array
    for(int i = 0; i < size-1; i++){
     83c:	e24b3001 	sub	r3, r11, #1
     840:	e3530000 	cmp	r3, #0
     844:	da000013 	ble	898 <draw_graph+0x15c>
    }
    plot_pixel(5, 5, RED);
    return;
}

void draw_graph(int x, int y, int size, float values[size], short int colour){
     848:	e1a0a103 	lsl	r10, r3, #2
     84c:	e3a04000 	mov	r4, #0
    draw_line(x + GRAPH_LEN, y, x+GRAPH_LEN-ARROW_LEN, y+ARROW_LEN, colour);
    //bottom arrow
    draw_line(x, y + GRAPH_LEN, x-ARROW_LEN, y+GRAPH_LEN-ARROW_LEN, colour);
    draw_line(x, y + GRAPH_LEN, x+ARROW_LEN, y+GRAPH_LEN-ARROW_LEN, colour);

    float max = 0.000001;
     850:	e30357bd 	movw	r5, #14269	; 0x37bd
     854:	e3435586 	movt	r5, #13702	; 0x3586
    //find the max in the array
    for(int i = 0; i < size-1; i++){
        float check = values[i];
        if(check < 0) check = -check;
     858:	e3a08000 	mov	r8, #0
    draw_line(x, y + GRAPH_LEN, x+ARROW_LEN, y+GRAPH_LEN-ARROW_LEN, colour);

    float max = 0.000001;
    //find the max in the array
    for(int i = 0; i < size-1; i++){
        float check = values[i];
     85c:	e7976004 	ldr	r6, [r7, r4]
        if(check < 0) check = -check;
     860:	e1a00006 	mov	r0, r6
     864:	e1a01008 	mov	r1, r8
     868:	eb000fef 	bl	482c <__aeabi_fcmplt>
     86c:	e3500000 	cmp	r0, #0
     870:	12866102 	addne	r6, r6, #-2147483648	; 0x80000000
        if(max < check) max = check;
     874:	e1a00006 	mov	r0, r6
     878:	e1a01005 	mov	r1, r5
     87c:	eb000ffc 	bl	4874 <__aeabi_fcmpgt>
     880:	e3500000 	cmp	r0, #0
     884:	11a05006 	movne	r5, r6
     888:	e2844004 	add	r4, r4, #4
    draw_line(x, y + GRAPH_LEN, x-ARROW_LEN, y+GRAPH_LEN-ARROW_LEN, colour);
    draw_line(x, y + GRAPH_LEN, x+ARROW_LEN, y+GRAPH_LEN-ARROW_LEN, colour);

    float max = 0.000001;
    //find the max in the array
    for(int i = 0; i < size-1; i++){
     88c:	e154000a 	cmp	r4, r10
     890:	1afffff1 	bne	85c <draw_graph+0x120>
     894:	ea000001 	b	8a0 <draw_graph+0x164>
    draw_line(x + GRAPH_LEN, y, x+GRAPH_LEN-ARROW_LEN, y+ARROW_LEN, colour);
    //bottom arrow
    draw_line(x, y + GRAPH_LEN, x-ARROW_LEN, y+GRAPH_LEN-ARROW_LEN, colour);
    draw_line(x, y + GRAPH_LEN, x+ARROW_LEN, y+GRAPH_LEN-ARROW_LEN, colour);

    float max = 0.000001;
     898:	e30357bd 	movw	r5, #14269	; 0x37bd
     89c:	e3435586 	movt	r5, #13702	; 0x3586
        if(check < 0) check = -check;
        if(max < check) max = check;
    }

    //graph the values
    for(int i = 0; i < size-2; i++){
     8a0:	e24b2002 	sub	r2, r11, #2
     8a4:	e58d2018 	str	r2, [sp, #24]
     8a8:	e3520000 	cmp	r2, #0
     8ac:	da000034 	ble	984 <draw_graph+0x248>
    }
    plot_pixel(5, 5, RED);
    return;
}

void draw_graph(int x, int y, int size, float values[size], short int colour){
     8b0:	e2477004 	sub	r7, r7, #4
     8b4:	e3a04000 	mov	r4, #0
     8b8:	e1a06004 	mov	r6, r4
        if(max < check) max = check;
    }

    //graph the values
    for(int i = 0; i < size-2; i++){
        draw_line((int)(x+i*(GRAPH_LEN-ARROW_LEN)/size), (int)(y-(GRAPH_LEN-ARROW_LEN)*(values[i]/max)),
     8bc:	e3a0a000 	mov	r10, #0
     8c0:	e344a240 	movt	r10, #16960	; 0x4240
     8c4:	e3a03b3e 	mov	r3, #63488	; 0xf800
     8c8:	e34f3fff 	movt	r3, #65535	; 0xffff
     8cc:	e58d301c 	str	r3, [sp, #28]
     8d0:	e1a08005 	mov	r8, r5
     8d4:	e1a00004 	mov	r0, r4
     8d8:	e1a0100b 	mov	r1, r11
     8dc:	eb000b2b 	bl	3590 <__aeabi_idiv>
     8e0:	e0800009 	add	r0, r0, r9
     8e4:	e58d0008 	str	r0, [sp, #8]
     8e8:	e59d0010 	ldr	r0, [sp, #16]
     8ec:	eb000eac 	bl	43a4 <__aeabi_i2f>
     8f0:	e1a05000 	mov	r5, r0
                (int)(x+(i+1)*(GRAPH_LEN-ARROW_LEN)/size), (int)(y-(GRAPH_LEN-ARROW_LEN)*(values[i+1]/max)), RED);
     8f4:	e2866001 	add	r6, r6, #1
    }
    plot_pixel(5, 5, RED);
    return;
}

void draw_graph(int x, int y, int size, float values[size], short int colour){
     8f8:	e2844030 	add	r4, r4, #48	; 0x30
        if(max < check) max = check;
    }

    //graph the values
    for(int i = 0; i < size-2; i++){
        draw_line((int)(x+i*(GRAPH_LEN-ARROW_LEN)/size), (int)(y-(GRAPH_LEN-ARROW_LEN)*(values[i]/max)),
     8fc:	e5b70004 	ldr	r0, [r7, #4]!
     900:	e1a01008 	mov	r1, r8
     904:	eb000f43 	bl	4618 <__aeabi_fdiv>
     908:	e1a0100a 	mov	r1, r10
     90c:	eb000edb 	bl	4480 <__aeabi_fmul>
     910:	e1a01000 	mov	r1, r0
     914:	e1a00005 	mov	r0, r5
     918:	eb000e2f 	bl	41dc <__aeabi_fsub>
     91c:	eb000fda 	bl	488c <__aeabi_f2iz>
     920:	e58d000c 	str	r0, [sp, #12]
                (int)(x+(i+1)*(GRAPH_LEN-ARROW_LEN)/size), (int)(y-(GRAPH_LEN-ARROW_LEN)*(values[i+1]/max)), RED);
     924:	e1a00004 	mov	r0, r4
     928:	e1a0100b 	mov	r1, r11
     92c:	eb000b17 	bl	3590 <__aeabi_idiv>
        if(max < check) max = check;
    }

    //graph the values
    for(int i = 0; i < size-2; i++){
        draw_line((int)(x+i*(GRAPH_LEN-ARROW_LEN)/size), (int)(y-(GRAPH_LEN-ARROW_LEN)*(values[i]/max)),
     930:	e0800009 	add	r0, r0, r9
     934:	e58d0014 	str	r0, [sp, #20]
                (int)(x+(i+1)*(GRAPH_LEN-ARROW_LEN)/size), (int)(y-(GRAPH_LEN-ARROW_LEN)*(values[i+1]/max)), RED);
     938:	e5970004 	ldr	r0, [r7, #4]
     93c:	e1a01008 	mov	r1, r8
     940:	eb000f34 	bl	4618 <__aeabi_fdiv>
     944:	e1a0100a 	mov	r1, r10
     948:	eb000ecc 	bl	4480 <__aeabi_fmul>
     94c:	e1a01000 	mov	r1, r0
     950:	e1a00005 	mov	r0, r5
     954:	eb000e20 	bl	41dc <__aeabi_fsub>
        if(max < check) max = check;
    }

    //graph the values
    for(int i = 0; i < size-2; i++){
        draw_line((int)(x+i*(GRAPH_LEN-ARROW_LEN)/size), (int)(y-(GRAPH_LEN-ARROW_LEN)*(values[i]/max)),
     958:	eb000fcb 	bl	488c <__aeabi_f2iz>
     95c:	e1a03000 	mov	r3, r0
     960:	e59dc01c 	ldr	r12, [sp, #28]
     964:	e58dc000 	str	r12, [sp]
     968:	e59d0008 	ldr	r0, [sp, #8]
     96c:	e59d100c 	ldr	r1, [sp, #12]
     970:	e59d2014 	ldr	r2, [sp, #20]
     974:	ebfffe6e 	bl	334 <draw_line>
        if(check < 0) check = -check;
        if(max < check) max = check;
    }

    //graph the values
    for(int i = 0; i < size-2; i++){
     978:	e59d2018 	ldr	r2, [sp, #24]
     97c:	e1560002 	cmp	r6, r2
     980:	1affffd3 	bne	8d4 <draw_graph+0x198>
        draw_line((int)(x+i*(GRAPH_LEN-ARROW_LEN)/size), (int)(y-(GRAPH_LEN-ARROW_LEN)*(values[i]/max)),
                (int)(x+(i+1)*(GRAPH_LEN-ARROW_LEN)/size), (int)(y-(GRAPH_LEN-ARROW_LEN)*(values[i+1]/max)), RED);
    }
}
     984:	e28dd024 	add	sp, sp, #36	; 0x24
     988:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, r10, r11, pc}

0000098c <draw_rect>:
    draw_line(x0, y1, x1, y1, colour);//right
    draw_line(x1, y1, x1, y0, colour);//up
    draw_line(x1, y0, x0, y0, colour);//left
}

void draw_rect(int x0, int y0, int x1, int y1, short int colour){
     98c:	e92d45f8 	push	{r3, r4, r5, r6, r7, r8, r10, lr}
     990:	e1a08001 	mov	r8, r1
     994:	e1a0a002 	mov	r10, r2
     998:	e1a06003 	mov	r6, r3
     99c:	e1dd72f0 	ldrsh	r7, [sp, #32]
    for(int x = x0; x<=x1; x++){
     9a0:	e1500002 	cmp	r0, r2
     9a4:	c8bd85f8 	popgt	{r3, r4, r5, r6, r7, r8, r10, pc}
     9a8:	ea00000a 	b	9d8 <draw_rect+0x4c>
        for (int y = y0; y<=y1; y++) {
            plot_pixel(x, y, colour);
     9ac:	e1a00005 	mov	r0, r5
     9b0:	e1a01004 	mov	r1, r4
     9b4:	e1a02007 	mov	r2, r7
     9b8:	ebfffe4d 	bl	2f4 <plot_pixel>
    draw_line(x1, y0, x0, y0, colour);//left
}

void draw_rect(int x0, int y0, int x1, int y1, short int colour){
    for(int x = x0; x<=x1; x++){
        for (int y = y0; y<=y1; y++) {
     9bc:	e2844001 	add	r4, r4, #1
     9c0:	e1560004 	cmp	r6, r4
     9c4:	aafffff8 	bge	9ac <draw_rect+0x20>
    draw_line(x1, y1, x1, y0, colour);//up
    draw_line(x1, y0, x0, y0, colour);//left
}

void draw_rect(int x0, int y0, int x1, int y1, short int colour){
    for(int x = x0; x<=x1; x++){
     9c8:	e2855001 	add	r5, r5, #1
     9cc:	e15a0005 	cmp	r10, r5
     9d0:	aa000001 	bge	9dc <draw_rect+0x50>
     9d4:	e8bd85f8 	pop	{r3, r4, r5, r6, r7, r8, r10, pc}
     9d8:	e1a05000 	mov	r5, r0
        for (int y = y0; y<=y1; y++) {
     9dc:	e1580006 	cmp	r8, r6
     9e0:	d1a04008 	movle	r4, r8
     9e4:	dafffff0 	ble	9ac <draw_rect+0x20>
     9e8:	eafffff6 	b	9c8 <draw_rect+0x3c>

000009ec <draw_circuit>:
        wait_for_vsync(); // swap front and back buffers on VGA vertical sync
        pixel_buffer_start = *(pixel_ctrl_ptr + 1); // new back buffer
    }
}

void draw_circuit(int x, int y, short int colour, bool sw1, bool sw2){
     9ec:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
     9f0:	e24dd024 	sub	sp, sp, #36	; 0x24
     9f4:	e1a06000 	mov	r6, r0
     9f8:	e1a05001 	mov	r5, r1
     9fc:	e58d3018 	str	r3, [sp, #24]

    int width = 5;
    int ctr = 80;
    //source
    int radius = 30;
    draw_circle(x, y, radius, WHITE);
     a00:	e3a0201e 	mov	r2, #30
     a04:	e3e03000 	mvn	r3, #0
     a08:	ebfffe85 	bl	424 <draw_circle>
    draw_circle(x, y, radius-width, BLACK);
     a0c:	e1a00006 	mov	r0, r6
     a10:	e1a01005 	mov	r1, r5
     a14:	e3a02019 	mov	r2, #25
     a18:	e3a03000 	mov	r3, #0
     a1c:	ebfffe80 	bl	424 <draw_circle>
    //plus
    draw_rect(x-3, y-20, x+3, y, RED);
     a20:	e3a04b3e 	mov	r4, #63488	; 0xf800
     a24:	e34f4fff 	movt	r4, #65535	; 0xffff
     a28:	e58d4000 	str	r4, [sp]
     a2c:	e2460003 	sub	r0, r6, #3
     a30:	e2451014 	sub	r1, r5, #20
     a34:	e2862003 	add	r2, r6, #3
     a38:	e1a03005 	mov	r3, r5
     a3c:	ebffffd2 	bl	98c <draw_rect>
    draw_rect(x-14, y-13, x+14, y-7, RED);
     a40:	e246800e 	sub	r8, r6, #14
     a44:	e286700e 	add	r7, r6, #14
     a48:	e58d4000 	str	r4, [sp]
     a4c:	e1a00008 	mov	r0, r8
     a50:	e245100d 	sub	r1, r5, #13
     a54:	e1a02007 	mov	r2, r7
     a58:	e2453007 	sub	r3, r5, #7
     a5c:	ebffffca 	bl	98c <draw_rect>
    //minus
    draw_rect(x-14, y+10, x+14, y+16, BLUE);
     a60:	e285400a 	add	r4, r5, #10
     a64:	e3a0301f 	mov	r3, #31
     a68:	e58d3000 	str	r3, [sp]
     a6c:	e1a00008 	mov	r0, r8
     a70:	e1a01004 	mov	r1, r4
     a74:	e1a02007 	mov	r2, r7
     a78:	e2853010 	add	r3, r5, #16
     a7c:	ebffffc2 	bl	98c <draw_rect>

    //capacitor
    int cap_x = (x+ctr -5*width);
     a80:	e2868037 	add	r8, r6, #55	; 0x37
    draw_rect(cap_x, y-2*width, cap_x + 10*width, y-width, WHITE);
     a84:	e2867069 	add	r7, r6, #105	; 0x69
     a88:	e3e0a000 	mvn	r10, #0
     a8c:	e58da000 	str	r10, [sp]
     a90:	e1a00008 	mov	r0, r8
     a94:	e245100a 	sub	r1, r5, #10
     a98:	e1a02007 	mov	r2, r7
     a9c:	e2453005 	sub	r3, r5, #5
     aa0:	ebffffb9 	bl	98c <draw_rect>
    draw_rect(cap_x, y+width, cap_x + 10*width, y+2*width, WHITE);
     aa4:	e58da000 	str	r10, [sp]
     aa8:	e1a00008 	mov	r0, r8
     aac:	e2851005 	add	r1, r5, #5
     ab0:	e1a02007 	mov	r2, r7
     ab4:	e1a03004 	mov	r3, r4
     ab8:	ebffffb3 	bl	98c <draw_rect>

    //resistor
    int diag_x = 15;
    int diag_y = 10;
    int res_x = (x+2*ctr);
     abc:	e28630a0 	add	r3, r6, #160	; 0xa0
    int res_y = y-diag_x;//resistor goes down 40 pixels from here
     ac0:	e245400f 	sub	r4, r5, #15
        wait_for_vsync(); // swap front and back buffers on VGA vertical sync
        pixel_buffer_start = *(pixel_ctrl_ptr + 1); // new back buffer
    }
}

void draw_circuit(int x, int y, short int colour, bool sw1, bool sw2){
     ac4:	e245900c 	sub	r9, r5, #12
    int diag_y = 10;
    int res_x = (x+2*ctr);
    int res_y = y-diag_x;//resistor goes down 40 pixels from here

    for(int dec = 0; dec<5; dec++){//make the resistor lines thicker
        draw_line(res_x, res_y, res_x-diag_x, res_y+diag_y, WHITE);//from the line out: x- y+
     ac8:	e286a091 	add	r10, r6, #145	; 0x91
     acc:	e3e07000 	mvn	r7, #0
        draw_line(res_x-diag_x, res_y+diag_y, res_x+diag_x, res_y+2*diag_y, WHITE);//x+ y+
     ad0:	e28680af 	add	r8, r6, #175	; 0xaf
     ad4:	e1a0b003 	mov	r11, r3
     ad8:	e58d6014 	str	r6, [sp, #20]
     adc:	e58d501c 	str	r5, [sp, #28]
     ae0:	e1a05009 	mov	r5, r9
        wait_for_vsync(); // swap front and back buffers on VGA vertical sync
        pixel_buffer_start = *(pixel_ctrl_ptr + 1); // new back buffer
    }
}

void draw_circuit(int x, int y, short int colour, bool sw1, bool sw2){
     ae4:	e284900a 	add	r9, r4, #10
    int diag_y = 10;
    int res_x = (x+2*ctr);
    int res_y = y-diag_x;//resistor goes down 40 pixels from here

    for(int dec = 0; dec<5; dec++){//make the resistor lines thicker
        draw_line(res_x, res_y, res_x-diag_x, res_y+diag_y, WHITE);//from the line out: x- y+
     ae8:	e58d7000 	str	r7, [sp]
     aec:	e1a0000b 	mov	r0, r11
     af0:	e1a01004 	mov	r1, r4
     af4:	e1a0200a 	mov	r2, r10
     af8:	e1a03009 	mov	r3, r9
     afc:	ebfffe0c 	bl	334 <draw_line>
        wait_for_vsync(); // swap front and back buffers on VGA vertical sync
        pixel_buffer_start = *(pixel_ctrl_ptr + 1); // new back buffer
    }
}

void draw_circuit(int x, int y, short int colour, bool sw1, bool sw2){
     b00:	e2846014 	add	r6, r4, #20
    int res_x = (x+2*ctr);
    int res_y = y-diag_x;//resistor goes down 40 pixels from here

    for(int dec = 0; dec<5; dec++){//make the resistor lines thicker
        draw_line(res_x, res_y, res_x-diag_x, res_y+diag_y, WHITE);//from the line out: x- y+
        draw_line(res_x-diag_x, res_y+diag_y, res_x+diag_x, res_y+2*diag_y, WHITE);//x+ y+
     b04:	e58d7000 	str	r7, [sp]
     b08:	e1a0000a 	mov	r0, r10
     b0c:	e1a01009 	mov	r1, r9
     b10:	e1a02008 	mov	r2, r8
     b14:	e1a03006 	mov	r3, r6
     b18:	ebfffe05 	bl	334 <draw_line>
        wait_for_vsync(); // swap front and back buffers on VGA vertical sync
        pixel_buffer_start = *(pixel_ctrl_ptr + 1); // new back buffer
    }
}

void draw_circuit(int x, int y, short int colour, bool sw1, bool sw2){
     b1c:	e284901e 	add	r9, r4, #30
    int res_y = y-diag_x;//resistor goes down 40 pixels from here

    for(int dec = 0; dec<5; dec++){//make the resistor lines thicker
        draw_line(res_x, res_y, res_x-diag_x, res_y+diag_y, WHITE);//from the line out: x- y+
        draw_line(res_x-diag_x, res_y+diag_y, res_x+diag_x, res_y+2*diag_y, WHITE);//x+ y+
        draw_line(res_x+diag_x, res_y+2*diag_y, res_x-diag_x, res_y+3*diag_y, WHITE);//x- y+
     b20:	e58d7000 	str	r7, [sp]
     b24:	e1a00008 	mov	r0, r8
     b28:	e1a01006 	mov	r1, r6
     b2c:	e1a0200a 	mov	r2, r10
     b30:	e1a03009 	mov	r3, r9
     b34:	ebfffdfe 	bl	334 <draw_line>
        wait_for_vsync(); // swap front and back buffers on VGA vertical sync
        pixel_buffer_start = *(pixel_ctrl_ptr + 1); // new back buffer
    }
}

void draw_circuit(int x, int y, short int colour, bool sw1, bool sw2){
     b38:	e2846028 	add	r6, r4, #40	; 0x28

    for(int dec = 0; dec<5; dec++){//make the resistor lines thicker
        draw_line(res_x, res_y, res_x-diag_x, res_y+diag_y, WHITE);//from the line out: x- y+
        draw_line(res_x-diag_x, res_y+diag_y, res_x+diag_x, res_y+2*diag_y, WHITE);//x+ y+
        draw_line(res_x+diag_x, res_y+2*diag_y, res_x-diag_x, res_y+3*diag_y, WHITE);//x- y+
        draw_line(res_x-diag_x, res_y+3*diag_y, res_x+diag_x, res_y+4*diag_y, WHITE);//x+ y+
     b3c:	e58d7000 	str	r7, [sp]
     b40:	e1a0000a 	mov	r0, r10
     b44:	e1a01009 	mov	r1, r9
     b48:	e1a02008 	mov	r2, r8
     b4c:	e1a03006 	mov	r3, r6
     b50:	ebfffdf7 	bl	334 <draw_line>
        draw_line(res_x+diag_x, res_y+4*diag_y, res_x, res_y+5*diag_y, WHITE);//back into the line: x- y+
     b54:	e58d7000 	str	r7, [sp]
     b58:	e1a00008 	mov	r0, r8
     b5c:	e1a01006 	mov	r1, r6
     b60:	e1a0200b 	mov	r2, r11
     b64:	e2843032 	add	r3, r4, #50	; 0x32
     b68:	ebfffdf1 	bl	334 <draw_line>
        dec++;
        res_y++;
     b6c:	e2844001 	add	r4, r4, #1
    int diag_x = 15;
    int diag_y = 10;
    int res_x = (x+2*ctr);
    int res_y = y-diag_x;//resistor goes down 40 pixels from here

    for(int dec = 0; dec<5; dec++){//make the resistor lines thicker
     b70:	e1540005 	cmp	r4, r5
     b74:	1affffda 	bne	ae4 <draw_circuit+0xf8>
     b78:	e59d6014 	ldr	r6, [sp, #20]
     b7c:	e59d501c 	ldr	r5, [sp, #28]
        draw_line(res_x+diag_x, res_y+4*diag_y, res_x, res_y+5*diag_y, WHITE);//back into the line: x- y+
        dec++;
        res_y++;
    }
    //switches
    draw_switches(30, x + 10, y-ctr, x + 10 + ctr, y - ctr, sw1, sw2, WHITE);
     b80:	e286705a 	add	r7, r6, #90	; 0x5a
     b84:	e2452050 	sub	r2, r5, #80	; 0x50
     b88:	e58d2000 	str	r2, [sp]
     b8c:	e59d3018 	ldr	r3, [sp, #24]
     b90:	e58d3004 	str	r3, [sp, #4]
     b94:	e5dd3048 	ldrb	r3, [sp, #72]	; 0x48
     b98:	e58d3008 	str	r3, [sp, #8]
     b9c:	e30f3fff 	movw	r3, #65535	; 0xffff
     ba0:	e58d300c 	str	r3, [sp, #12]
     ba4:	e3a0001e 	mov	r0, #30
     ba8:	e286100a 	add	r1, r6, #10
     bac:	e1a03007 	mov	r3, r7
     bb0:	ebfffe75 	bl	58c <draw_switches>

    //ground
    int gnd_ctr = x + ctr;
    int gnd_y = y+ctr-20;
    draw_rect(gnd_ctr-width/2, gnd_y, gnd_ctr+width/2, gnd_y+2*width, WHITE);//stem
     bb4:	e2858046 	add	r8, r5, #70	; 0x46
     bb8:	e3e04000 	mvn	r4, #0
     bbc:	e58d4000 	str	r4, [sp]
     bc0:	e286004e 	add	r0, r6, #78	; 0x4e
     bc4:	e285103c 	add	r1, r5, #60	; 0x3c
     bc8:	e2862052 	add	r2, r6, #82	; 0x52
     bcc:	e1a03008 	mov	r3, r8
     bd0:	ebffff6d 	bl	98c <draw_rect>
    draw_rect(gnd_ctr-4*width, gnd_y+2*width, gnd_ctr+4*width, gnd_y+3*width, WHITE);//1st layer
     bd4:	e58d4000 	str	r4, [sp]
     bd8:	e286003c 	add	r0, r6, #60	; 0x3c
     bdc:	e1a01008 	mov	r1, r8
     be0:	e2862064 	add	r2, r6, #100	; 0x64
     be4:	e285304b 	add	r3, r5, #75	; 0x4b
     be8:	ebffff67 	bl	98c <draw_rect>
    draw_rect(gnd_ctr-2*width, gnd_y+4*width, gnd_ctr+2*width, gnd_y+5*width, WHITE);//2nd
     bec:	e58d4000 	str	r4, [sp]
     bf0:	e2860046 	add	r0, r6, #70	; 0x46
     bf4:	e2851050 	add	r1, r5, #80	; 0x50
     bf8:	e1a02007 	mov	r2, r7
     bfc:	e2853055 	add	r3, r5, #85	; 0x55
     c00:	ebffff61 	bl	98c <draw_rect>
    draw_rect(gnd_ctr-width, gnd_y+6*width, gnd_ctr+width, gnd_y+7*width, WHITE);//3rd
     c04:	e58d4000 	str	r4, [sp]
     c08:	e286004b 	add	r0, r6, #75	; 0x4b
     c0c:	e285105a 	add	r1, r5, #90	; 0x5a
     c10:	e2862055 	add	r2, r6, #85	; 0x55
     c14:	e285305f 	add	r3, r5, #95	; 0x5f
     c18:	ebffff5b 	bl	98c <draw_rect>

    //wires

    //text add-ons
}
     c1c:	e28dd024 	add	sp, sp, #36	; 0x24
     c20:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, r10, r11, pc}

00000c24 <clear_screen>:

void clear_screen(){
     c24:	e92d4070 	push	{r4, r5, r6, lr}
    short int line_colour = BLACK;
    for (int x = 0; x < X_DIM; x++ ){
     c28:	e3a05000 	mov	r5, #0
    //wires

    //text add-ons
}

void clear_screen(){
     c2c:	e1a06005 	mov	r6, r5
     c30:	ea000009 	b	c5c <clear_screen+0x38>
    short int line_colour = BLACK;
    for (int x = 0; x < X_DIM; x++ ){
    	for (int y = 0; y < Y_DIM ; y++ ){
        	plot_pixel(x, y, line_colour);
     c34:	e1a00005 	mov	r0, r5
     c38:	e1a01004 	mov	r1, r4
     c3c:	e1a02006 	mov	r2, r6
     c40:	ebfffdab 	bl	2f4 <plot_pixel>
}

void clear_screen(){
    short int line_colour = BLACK;
    for (int x = 0; x < X_DIM; x++ ){
    	for (int y = 0; y < Y_DIM ; y++ ){
     c44:	e2844001 	add	r4, r4, #1
     c48:	e35400f0 	cmp	r4, #240	; 0xf0
     c4c:	1afffff8 	bne	c34 <clear_screen+0x10>
    //text add-ons
}

void clear_screen(){
    short int line_colour = BLACK;
    for (int x = 0; x < X_DIM; x++ ){
     c50:	e2855001 	add	r5, r5, #1
     c54:	e3550d05 	cmp	r5, #320	; 0x140
     c58:	0a000001 	beq	c64 <clear_screen+0x40>
    //wires

    //text add-ons
}

void clear_screen(){
     c5c:	e1a04006 	mov	r4, r6
     c60:	eafffff3 	b	c34 <clear_screen+0x10>
    for (int x = 0; x < X_DIM; x++ ){
    	for (int y = 0; y < Y_DIM ; y++ ){
        	plot_pixel(x, y, line_colour);
        }
    }
    plot_pixel(5, 5, RED);
     c64:	e3a00005 	mov	r0, #5
     c68:	e1a01000 	mov	r1, r0
     c6c:	e3a02b3e 	mov	r2, #63488	; 0xf800
     c70:	e34f2fff 	movt	r2, #65535	; 0xffff
     c74:	ebfffd9e 	bl	2f4 <plot_pixel>
     c78:	e8bd8070 	pop	{r4, r5, r6, pc}

00000c7c <swap>:
    if(x<X_DIM && x>=0 && y<Y_DIM && y>=0)
        *(short int *)(pixel_buffer_start + (y << 10) + (x << 1)) = line_color;
}

void swap (int* x, int* y){
    int temp = *x;
     c7c:	e5903000 	ldr	r3, [r0]
    *x = *y;
     c80:	e5912000 	ldr	r2, [r1]
     c84:	e5802000 	str	r2, [r0]
    *y = temp;
     c88:	e5813000 	str	r3, [r1]
     c8c:	e12fff1e 	bx	lr

00000c90 <wait_for_vsync>:
}

void wait_for_vsync(){
    volatile int * pixel_ctrl_ptr = (int *)PIXEL_BUFF_REG;
    register int status;
    *pixel_ctrl_ptr = 1;    //start synchronization
     c90:	e3033fff 	movw	r3, #16383	; 0x3fff
     c94:	e34f3f20 	movt	r3, #65312	; 0xff20
     c98:	e3a02001 	mov	r2, #1
     c9c:	e5032fdf 	str	r2, [r3, #-4063]	; 0xfffff021
    status = *(pixel_ctrl_ptr + 3); //read s vlaue
     ca0:	e5133fd3 	ldr	r3, [r3, #-4051]	; 0xfffff02d
    while ((status & 0x01) != 0){
     ca4:	e3130001 	tst	r3, #1
     ca8:	012fff1e 	bxeq	lr
       status = *(pixel_ctrl_ptr + 3); //read s vlaue
     cac:	e3032fff 	movw	r2, #16383	; 0x3fff
     cb0:	e34f2f20 	movt	r2, #65312	; 0xff20
     cb4:	e5123fd3 	ldr	r3, [r2, #-4051]	; 0xfffff02d
void wait_for_vsync(){
    volatile int * pixel_ctrl_ptr = (int *)PIXEL_BUFF_REG;
    register int status;
    *pixel_ctrl_ptr = 1;    //start synchronization
    status = *(pixel_ctrl_ptr + 3); //read s vlaue
    while ((status & 0x01) != 0){
     cb8:	e3130001 	tst	r3, #1
     cbc:	1afffffc 	bne	cb4 <wait_for_vsync+0x24>
     cc0:	e12fff1e 	bx	lr

00000cc4 <clear_line>:
       status = *(pixel_ctrl_ptr + 3); //read s vlaue
    }
}

void clear_line(int xi, int xf, int y){
     cc4:	e92d4070 	push	{r4, r5, r6, lr}
     cc8:	e24dd008 	sub	sp, sp, #8
     ccc:	e58d0004 	str	r0, [sp, #4]
     cd0:	e58d1000 	str	r1, [sp]
     cd4:	e1a05002 	mov	r5, r2
    //clears horizontal line
    if (xi > xf){
     cd8:	e1a04000 	mov	r4, r0
     cdc:	e1500001 	cmp	r0, r1
     ce0:	da000006 	ble	d00 <clear_line+0x3c>
        swap(&xi, &xf);
     ce4:	e28d0004 	add	r0, sp, #4
     ce8:	e1a0100d 	mov	r1, sp
     cec:	ebffffe2 	bl	c7c <swap>
    }
    for (int x = xi; x <= xf; x++){
     cf0:	e59d4004 	ldr	r4, [sp, #4]
     cf4:	e59d3000 	ldr	r3, [sp]
     cf8:	e1540003 	cmp	r4, r3
     cfc:	ca000008 	bgt	d24 <clear_line+0x60>
        plot_pixel(x, y, BLACK);
     d00:	e3a06000 	mov	r6, #0
     d04:	e1a00004 	mov	r0, r4
     d08:	e1a01005 	mov	r1, r5
     d0c:	e1a02006 	mov	r2, r6
     d10:	ebfffd77 	bl	2f4 <plot_pixel>
void clear_line(int xi, int xf, int y){
    //clears horizontal line
    if (xi > xf){
        swap(&xi, &xf);
    }
    for (int x = xi; x <= xf; x++){
     d14:	e2844001 	add	r4, r4, #1
     d18:	e59d3000 	ldr	r3, [sp]
     d1c:	e1530004 	cmp	r3, r4
     d20:	aafffff7 	bge	d04 <clear_line+0x40>
        plot_pixel(x, y, BLACK);
 	}
    return;
}
     d24:	e28dd008 	add	sp, sp, #8
     d28:	e8bd8070 	pop	{r4, r5, r6, pc}

00000d2c <draw_square>:

void draw_square(int x, int y, short int color){
     d2c:	e92d45f8 	push	{r3, r4, r5, r6, r7, r8, r10, lr}
     d30:	e1a08001 	mov	r8, r1
     d34:	e1a07002 	mov	r7, r2
    for (int i = x ; i < (x+5); i++){
     d38:	e280a005 	add	r10, r0, #5
     d3c:	e150000a 	cmp	r0, r10
     d40:	a8bd85f8 	popge	{r3, r4, r5, r6, r7, r8, r10, pc}
     d44:	ea00000a 	b	d74 <draw_square+0x48>
        for (int j = y; j < (y+5); j++){
            plot_pixel(i, j, color);
     d48:	e1a00005 	mov	r0, r5
     d4c:	e1a01004 	mov	r1, r4
     d50:	e1a02007 	mov	r2, r7
     d54:	ebfffd66 	bl	2f4 <plot_pixel>
    return;
}

void draw_square(int x, int y, short int color){
    for (int i = x ; i < (x+5); i++){
        for (int j = y; j < (y+5); j++){
     d58:	e2844001 	add	r4, r4, #1
     d5c:	e1540006 	cmp	r4, r6
     d60:	1afffff8 	bne	d48 <draw_square+0x1c>
 	}
    return;
}

void draw_square(int x, int y, short int color){
    for (int i = x ; i < (x+5); i++){
     d64:	e2855001 	add	r5, r5, #1
     d68:	e155000a 	cmp	r5, r10
     d6c:	1a000002 	bne	d7c <draw_square+0x50>
     d70:	e8bd85f8 	pop	{r3, r4, r5, r6, r7, r8, r10, pc}
     d74:	e1a05000 	mov	r5, r0
        for (int j = y; j < (y+5); j++){
     d78:	e2816005 	add	r6, r1, #5
     d7c:	e1580006 	cmp	r8, r6
     d80:	b1a04008 	movlt	r4, r8
     d84:	baffffef 	blt	d48 <draw_square+0x1c>
     d88:	eafffff5 	b	d64 <draw_square+0x38>

00000d8c <compute>:
            float cap,
            float res,
            float t,
            float t_not,
            bool sw1,
            bool sw2){
     d8c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
     d90:	e24dd02c 	sub	sp, sp, #44	; 0x2c
     d94:	e1a0a001 	mov	r10, r1
     d98:	e1a07002 	mov	r7, r2
     d9c:	e1a06003 	mov	r6, r3
     da0:	e5dd9070 	ldrb	r9, [sp, #112]	; 0x70
     da4:	e5ddb074 	ldrb	r11, [sp, #116]	; 0x74

    for (int i = 0; i<size; i++){
     da8:	e2508000 	subs	r8, r0, #0
     dac:	da00000d 	ble	de8 <compute+0x5c>
     db0:	e1a01002 	mov	r1, r2
            plot_pixel(i, j, color);
        }
    }
}

void compute(int size,
     db4:	e1a0c108 	lsl	r12, r8, #2
     db8:	e3a02000 	mov	r2, #0
     dbc:	e1a03002 	mov	r3, r2
            float t_not,
            bool sw1,
            bool sw2){

    for (int i = 0; i<size; i++){
        Ic[i] = Ic[i+1];
     dc0:	e5b10004 	ldr	r0, [r1, #4]!
     dc4:	e2822004 	add	r2, r2, #4
     dc8:	e7870003 	str	r0, [r7, r3]
        Vs[i] = Vs[i+1];
     dcc:	e79a0002 	ldr	r0, [r10, r2]
     dd0:	e78a0003 	str	r0, [r10, r3]
        Vc[i] = Vc[i+1];
     dd4:	e7960002 	ldr	r0, [r6, r2]
     dd8:	e7860003 	str	r0, [r6, r3]
     ddc:	e2833004 	add	r3, r3, #4
            float t,
            float t_not,
            bool sw1,
            bool sw2){

    for (int i = 0; i<size; i++){
     de0:	e153000c 	cmp	r3, r12
     de4:	1afffff5 	bne	dc0 <compute+0x34>
        Ic[i] = Ic[i+1];
        Vs[i] = Vs[i+1];
        Vc[i] = Vc[i+1];
    }

    float arg = (freq * (t - t_not)) - phase;
     de8:	e59d0068 	ldr	r0, [sp, #104]	; 0x68
     dec:	e59d106c 	ldr	r1, [sp, #108]	; 0x6c
     df0:	eb000cf9 	bl	41dc <__aeabi_fsub>
     df4:	e58d0008 	str	r0, [sp, #8]

    Vs[size-1] = amp * sin(arg);
     df8:	e2488001 	sub	r8, r8, #1
        Ic[i] = Ic[i+1];
        Vs[i] = Vs[i+1];
        Vc[i] = Vc[i+1];
    }

    float arg = (freq * (t - t_not)) - phase;
     dfc:	e59d1058 	ldr	r1, [sp, #88]	; 0x58
     e00:	eb000d9e 	bl	4480 <__aeabi_fmul>
     e04:	e59d105c 	ldr	r1, [sp, #92]	; 0x5c
     e08:	eb000cf3 	bl	41dc <__aeabi_fsub>

    Vs[size-1] = amp * sin(arg);
     e0c:	eb000b0c 	bl	3a44 <__aeabi_f2d>
     e10:	e1cd01f0 	strd	r0, [sp, #16]
     e14:	eb000178 	bl	13fc <sin>
     e18:	e1a04000 	mov	r4, r0
     e1c:	e1a05001 	mov	r5, r1
     e20:	e59d0054 	ldr	r0, [sp, #84]	; 0x54
     e24:	eb000b06 	bl	3a44 <__aeabi_f2d>
     e28:	e1a02004 	mov	r2, r4
     e2c:	e1a03005 	mov	r3, r5
     e30:	eb000b30 	bl	3af8 <__aeabi_dmul>
     e34:	e1a04000 	mov	r4, r0
     e38:	e1a05001 	mov	r5, r1
     e3c:	eb000cbc 	bl	4134 <__aeabi_d2f>
     e40:	e78a0108 	str	r0, [r10, r8, lsl #2]

    if (!sw1 && !sw2){
     e44:	e2292001 	eor	r2, r9, #1
     e48:	e22b3001 	eor	r3, r11, #1
     e4c:	e1130002 	tst	r3, r2
     e50:	0a000005 	beq	e6c <compute+0xe0>
        Ic[size-1] = 0;
     e54:	e3a03000 	mov	r3, #0
     e58:	e7873108 	str	r3, [r7, r8, lsl #2]
        Vc[size-1] = Vc[size-1];//Vs[size-1];
     e5c:	e7963108 	ldr	r3, [r6, r8, lsl #2]
        *v_stored = Vc[size-1];
     e60:	e59d2050 	ldr	r2, [sp, #80]	; 0x50
     e64:	e5823000 	str	r3, [r2]
     e68:	ea00009c 	b	10e0 <compute+0x354>
    }

    else if (sw1 && !sw2){
     e6c:	e1130009 	tst	r3, r9
     e70:	0a00002c 	beq	f28 <compute+0x19c>
        Ic[size-1] = cap * amp * freq * cos(arg);
     e74:	e1cd01d0 	ldrd	r0, [sp, #16]
     e78:	eb000122 	bl	1308 <cos>
     e7c:	e1a04000 	mov	r4, r0
     e80:	e1a05001 	mov	r5, r1
     e84:	e59d0060 	ldr	r0, [sp, #96]	; 0x60
     e88:	e59d1054 	ldr	r1, [sp, #84]	; 0x54
     e8c:	eb000d7b 	bl	4480 <__aeabi_fmul>
     e90:	e59d1058 	ldr	r1, [sp, #88]	; 0x58
     e94:	eb000d79 	bl	4480 <__aeabi_fmul>
     e98:	eb000ae9 	bl	3a44 <__aeabi_f2d>
     e9c:	e1a02004 	mov	r2, r4
     ea0:	e1a03005 	mov	r3, r5
     ea4:	eb000b13 	bl	3af8 <__aeabi_dmul>
     ea8:	eb000ca1 	bl	4134 <__aeabi_d2f>
     eac:	e7870108 	str	r0, [r7, r8, lsl #2]
        Vc[size-1] = Vs[size-1] * (1 - exp( -(t-t_not) / (res * cap) ) );
     eb0:	e79a0108 	ldr	r0, [r10, r8, lsl #2]
     eb4:	eb000ae2 	bl	3a44 <__aeabi_f2d>
     eb8:	e1a04000 	mov	r4, r0
     ebc:	e1a05001 	mov	r5, r1
     ec0:	e59d3008 	ldr	r3, [sp, #8]
     ec4:	e2837102 	add	r7, r3, #-2147483648	; 0x80000000
     ec8:	e59d0064 	ldr	r0, [sp, #100]	; 0x64
     ecc:	e59d1060 	ldr	r1, [sp, #96]	; 0x60
     ed0:	eb000d6a 	bl	4480 <__aeabi_fmul>
     ed4:	e1a01000 	mov	r1, r0
     ed8:	e1a00007 	mov	r0, r7
     edc:	eb000dcd 	bl	4618 <__aeabi_fdiv>
     ee0:	eb000ad7 	bl	3a44 <__aeabi_f2d>
     ee4:	eb000185 	bl	1500 <exp>
     ee8:	e1a02000 	mov	r2, r0
     eec:	e1a03001 	mov	r3, r1
     ef0:	e3a00000 	mov	r0, #0
     ef4:	e3a01000 	mov	r1, #0
     ef8:	e3431ff0 	movt	r1, #16368	; 0x3ff0
     efc:	eb0009f8 	bl	36e4 <__aeabi_dsub>
     f00:	e1a02000 	mov	r2, r0
     f04:	e1a03001 	mov	r3, r1
     f08:	e1a00004 	mov	r0, r4
     f0c:	e1a01005 	mov	r1, r5
     f10:	eb000af8 	bl	3af8 <__aeabi_dmul>
     f14:	eb000c86 	bl	4134 <__aeabi_d2f>
     f18:	e7860108 	str	r0, [r6, r8, lsl #2]
        *v_stored = Vc[size-1];
     f1c:	e59d2050 	ldr	r2, [sp, #80]	; 0x50
     f20:	e5820000 	str	r0, [r2]
     f24:	ea00006d 	b	10e0 <compute+0x354>
    }

    else if (sw1 && sw2){
     f28:	e11b0009 	tst	r11, r9
     f2c:	0a00004f 	beq	1070 <compute+0x2e4>
        Ic[size-1] = ((amp * sin(arg) * exp( -(t-t_not) / (res * cap) ) ) / res) + (amp * cap * freq * (1 - exp( -(t-t_not) / (res * cap) ) ) * cos(arg));
     f30:	e59d3008 	ldr	r3, [sp, #8]
     f34:	e2839102 	add	r9, r3, #-2147483648	; 0x80000000
     f38:	e59d0064 	ldr	r0, [sp, #100]	; 0x64
     f3c:	e59d1060 	ldr	r1, [sp, #96]	; 0x60
     f40:	eb000d4e 	bl	4480 <__aeabi_fmul>
     f44:	e1a01000 	mov	r1, r0
     f48:	e1a00009 	mov	r0, r9
     f4c:	eb000db1 	bl	4618 <__aeabi_fdiv>
     f50:	eb000abb 	bl	3a44 <__aeabi_f2d>
     f54:	e1cd00f8 	strd	r0, [sp, #8]
     f58:	eb000168 	bl	1500 <exp>
     f5c:	e1cd01f8 	strd	r0, [sp, #24]
     f60:	e1cd00d8 	ldrd	r0, [sp, #8]
     f64:	eb000165 	bl	1500 <exp>
     f68:	e1cd02f0 	strd	r0, [sp, #32]
     f6c:	e1cd01d0 	ldrd	r0, [sp, #16]
     f70:	eb0000e4 	bl	1308 <cos>
     f74:	e1cd01f0 	strd	r0, [sp, #16]
     f78:	e1a00004 	mov	r0, r4
     f7c:	e1a01005 	mov	r1, r5
     f80:	e1cd21d8 	ldrd	r2, [sp, #24]
     f84:	eb000adb 	bl	3af8 <__aeabi_dmul>
     f88:	e1a04000 	mov	r4, r0
     f8c:	e1a05001 	mov	r5, r1
     f90:	e59d0064 	ldr	r0, [sp, #100]	; 0x64
     f94:	eb000aaa 	bl	3a44 <__aeabi_f2d>
     f98:	e1a02000 	mov	r2, r0
     f9c:	e1a03001 	mov	r3, r1
     fa0:	e1a00004 	mov	r0, r4
     fa4:	e1a01005 	mov	r1, r5
     fa8:	eb000b76 	bl	3d88 <__aeabi_ddiv>
     fac:	e1cd00f0 	strd	r0, [sp]
     fb0:	e59d0054 	ldr	r0, [sp, #84]	; 0x54
     fb4:	e59d1060 	ldr	r1, [sp, #96]	; 0x60
     fb8:	eb000d30 	bl	4480 <__aeabi_fmul>
     fbc:	e59d1058 	ldr	r1, [sp, #88]	; 0x58
     fc0:	eb000d2e 	bl	4480 <__aeabi_fmul>
     fc4:	eb000a9e 	bl	3a44 <__aeabi_f2d>
     fc8:	e1a04000 	mov	r4, r0
     fcc:	e1a05001 	mov	r5, r1
     fd0:	e3a00000 	mov	r0, #0
     fd4:	e3a01000 	mov	r1, #0
     fd8:	e3431ff0 	movt	r1, #16368	; 0x3ff0
     fdc:	e1cd22d0 	ldrd	r2, [sp, #32]
     fe0:	eb0009bf 	bl	36e4 <__aeabi_dsub>
     fe4:	e1a02000 	mov	r2, r0
     fe8:	e1a03001 	mov	r3, r1
     fec:	e1a00004 	mov	r0, r4
     ff0:	e1a01005 	mov	r1, r5
     ff4:	eb000abf 	bl	3af8 <__aeabi_dmul>
     ff8:	e1cd21d0 	ldrd	r2, [sp, #16]
     ffc:	eb000abd 	bl	3af8 <__aeabi_dmul>
    1000:	e1a02000 	mov	r2, r0
    1004:	e1a03001 	mov	r3, r1
    1008:	e1cd00d0 	ldrd	r0, [sp]
    100c:	eb0009b5 	bl	36e8 <__adddf3>
    1010:	eb000c47 	bl	4134 <__aeabi_d2f>
    1014:	e7870108 	str	r0, [r7, r8, lsl #2]
        Vc[size-1] = Vs[size-1] * (1 - exp( -(t-t_not) / (res * cap) ) );
    1018:	e79a0108 	ldr	r0, [r10, r8, lsl #2]
    101c:	eb000a88 	bl	3a44 <__aeabi_f2d>
    1020:	e1a04000 	mov	r4, r0
    1024:	e1a05001 	mov	r5, r1
    1028:	e1cd00d8 	ldrd	r0, [sp, #8]
    102c:	eb000133 	bl	1500 <exp>
    1030:	e1a02000 	mov	r2, r0
    1034:	e1a03001 	mov	r3, r1
    1038:	e3a00000 	mov	r0, #0
    103c:	e3a01000 	mov	r1, #0
    1040:	e3431ff0 	movt	r1, #16368	; 0x3ff0
    1044:	eb0009a6 	bl	36e4 <__aeabi_dsub>
    1048:	e1a02000 	mov	r2, r0
    104c:	e1a03001 	mov	r3, r1
    1050:	e1a00004 	mov	r0, r4
    1054:	e1a01005 	mov	r1, r5
    1058:	eb000aa6 	bl	3af8 <__aeabi_dmul>
    105c:	eb000c34 	bl	4134 <__aeabi_d2f>
    1060:	e7860108 	str	r0, [r6, r8, lsl #2]
        *v_stored = Vc[size-1];
    1064:	e59d2050 	ldr	r2, [sp, #80]	; 0x50
    1068:	e5820000 	str	r0, [r2]
    106c:	ea00001b 	b	10e0 <compute+0x354>
    }

    else if (!sw1 && sw2){
    1070:	e11b0002 	tst	r11, r2
    1074:	0a000019 	beq	10e0 <compute+0x354>
        Vc[size-1] = *(v_stored) *  exp( -(t-t_not) / (res * cap) );
    1078:	e59d3050 	ldr	r3, [sp, #80]	; 0x50
    107c:	e5930000 	ldr	r0, [r3]
    1080:	eb000a6f 	bl	3a44 <__aeabi_f2d>
    1084:	e1a04000 	mov	r4, r0
    1088:	e1a05001 	mov	r5, r1
    108c:	e59d2008 	ldr	r2, [sp, #8]
    1090:	e282a102 	add	r10, r2, #-2147483648	; 0x80000000
    1094:	e59d0064 	ldr	r0, [sp, #100]	; 0x64
    1098:	e59d1060 	ldr	r1, [sp, #96]	; 0x60
    109c:	eb000cf7 	bl	4480 <__aeabi_fmul>
    10a0:	e1a01000 	mov	r1, r0
    10a4:	e1a0000a 	mov	r0, r10
    10a8:	eb000d5a 	bl	4618 <__aeabi_fdiv>
    10ac:	eb000a64 	bl	3a44 <__aeabi_f2d>
    10b0:	eb000112 	bl	1500 <exp>
    10b4:	e1a02000 	mov	r2, r0
    10b8:	e1a03001 	mov	r3, r1
    10bc:	e1a00004 	mov	r0, r4
    10c0:	e1a01005 	mov	r1, r5
    10c4:	eb000a8b 	bl	3af8 <__aeabi_dmul>
    10c8:	eb000c19 	bl	4134 <__aeabi_d2f>
    10cc:	e7860108 	str	r0, [r6, r8, lsl #2]
        Ic[size-1] = - Vc[size-1] / res;
    10d0:	e2800102 	add	r0, r0, #-2147483648	; 0x80000000
    10d4:	e59d1064 	ldr	r1, [sp, #100]	; 0x64
    10d8:	eb000d4e 	bl	4618 <__aeabi_fdiv>
    10dc:	e7870108 	str	r0, [r7, r8, lsl #2]
    }
}
    10e0:	e28dd02c 	add	sp, sp, #44	; 0x2c
    10e4:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, r10, r11, pc}

000010e8 <set_switches>:

void set_switches(bool* sw1, bool* sw2)
{
    volatile int* SW_ptr = (int*) 0xFF200040;
    *(sw1) = *(SW_ptr) & 0b0000000001;
    10e8:	e3a03000 	mov	r3, #0
    10ec:	e34f3f20 	movt	r3, #65312	; 0xff20
    10f0:	e5932040 	ldr	r2, [r3, #64]	; 0x40
    10f4:	e2022001 	and	r2, r2, #1
    10f8:	e5c02000 	strb	r2, [r0]
    *(sw2) = *(SW_ptr) & 0b0000000010;
    10fc:	e5933040 	ldr	r3, [r3, #64]	; 0x40
    1100:	e7e030d3 	ubfx	r3, r3, #1, #1
    1104:	e5c13000 	strb	r3, [r1]
    1108:	e12fff1e 	bx	lr

0000110c <main>:
// void set_switches( bool *sw1, bool *sw2, bool *sw1_ready, bool *sw2_ready );
// void tab_over( int *select, int *digit, bool *tab_ready, float *circuit_data, float *temp_circuit_data);
// void change_data( int *select, int *digit, bool *type_ready, float *circuit_data, float *temp_circuit_data);
// int get_jtag( void );

int main(void){
    110c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
    1110:	e28db020 	add	r11, sp, #32
    1114:	e24dd044 	sub	sp, sp, #68	; 0x44
    bool sw1 = false;
    1118:	e3a07000 	mov	r7, #0
    111c:	e54b7025 	strb	r7, [r11, #-37]	; 0xffffffdb
    bool sw2 = false;
    1120:	e54b7026 	strb	r7, [r11, #-38]	; 0xffffffda
    // declare other variables
    // short int draw_colour = BLUE;
    volatile int * pixel_ctrl_ptr = (int *)PIXEL_BUFF_REG;

    /* set front pixel buffer to start of FPGA On-chip memory */
    *(pixel_ctrl_ptr + 1) = ON_CHIP_MEM; // first store the address in the back buffer
    1124:	e3034fff 	movw	r4, #16383	; 0x3fff
    1128:	e34f4f20 	movt	r4, #65312	; 0xff20
    112c:	e3a03332 	mov	r3, #-939524096	; 0xc8000000
    1130:	e5043fdb 	str	r3, [r4, #-4059]	; 0xfffff025

    /* now, swap the front/back buffers, to set the front buffer location */
    // wait_for_vsync();
    wait_for_vsync();
    1134:	ebfffed5 	bl	c90 <wait_for_vsync>

    /* initialize a pointer to the pixel buffer, used by drawing functions */
    pixel_buffer_start = *pixel_ctrl_ptr;
    1138:	e5143fdf 	ldr	r3, [r4, #-4063]	; 0xfffff021
    113c:	e30553fc 	movw	r5, #21500	; 0x53fc
    1140:	e3405000 	movt	r5, #0
    1144:	e5853000 	str	r3, [r5]
    clear_screen(); // pixel_buffer_start points to the pixel buffer
    1148:	ebfffeb5 	bl	c24 <clear_screen>
    clear_chars();
    114c:	ebfffc58 	bl	2b4 <clear_chars>

    /* set back pixel buffer to start of SDRAM memory */
    *(pixel_ctrl_ptr + 1) = SDRAM_MEM;
    1150:	e3a03103 	mov	r3, #-1073741824	; 0xc0000000
    1154:	e5043fdb 	str	r3, [r4, #-4059]	; 0xfffff025
    pixel_buffer_start = *(pixel_ctrl_ptr + 1); // we draw on the back buffer
    1158:	e5143fdb 	ldr	r3, [r4, #-4059]	; 0xfffff025
    115c:	e5853000 	str	r3, [r5]

    int size = 70;

    //Graph data
    float Vs[size];// = {0};
    1160:	e24dde12 	sub	sp, sp, #288	; 0x120
    1164:	e28da028 	add	r10, sp, #40	; 0x28
    float Ic[size];// = {0};
    1168:	e24dde12 	sub	sp, sp, #288	; 0x120
    116c:	e28d5028 	add	r5, sp, #40	; 0x28
    float Vc[size];// = {0};
    1170:	e24dde12 	sub	sp, sp, #288	; 0x120
    1174:	e28d6028 	add	r6, sp, #40	; 0x28
    1178:	e1a03007 	mov	r3, r7

    for(int i = 0; i<size; i++){
        Vs[i] = 0;
    117c:	e3a02000 	mov	r2, #0
    1180:	e78a2003 	str	r2, [r10, r3]
        Vc[i] = 0;
    1184:	e7862003 	str	r2, [r6, r3]
        Ic[i] = 0;
    1188:	e7852003 	str	r2, [r5, r3]
    118c:	e2833004 	add	r3, r3, #4
    //Graph data
    float Vs[size];// = {0};
    float Ic[size];// = {0};
    float Vc[size];// = {0};

    for(int i = 0; i<size; i++){
    1190:	e3530f46 	cmp	r3, #280	; 0x118
    1194:	1afffff9 	bne	1180 <main+0x74>
        Vs[i] = 0;
        Vc[i] = 0;
        Ic[i] = 0;
    }

    float v_stored = 0.0;
    1198:	e3a03000 	mov	r3, #0
    119c:	e50b302c 	str	r3, [r11, #-44]	; 0xffffffd4

    int lit = 0;

    while (true){
        //  clear screen
        clear_screen();
    11a0:	ebfffe9f 	bl	c24 <clear_screen>
        clear_chars();
    11a4:	ebfffc42 	bl	2b4 <clear_chars>
        set_switches(&sw1, &sw2);
    11a8:	e24b0025 	sub	r0, r11, #37	; 0x25
    11ac:	e24b1026 	sub	r1, r11, #38	; 0x26
    11b0:	ebffffcc 	bl	10e8 <set_switches>
        draw_circuit(40, 100, WHITE, sw1, sw2);
    11b4:	e55b3025 	ldrb	r3, [r11, #-37]	; 0xffffffdb
    11b8:	e55b2026 	ldrb	r2, [r11, #-38]	; 0xffffffda
    11bc:	e58d2000 	str	r2, [sp]
    11c0:	e3a00028 	mov	r0, #40	; 0x28
    11c4:	e3a01064 	mov	r1, #100	; 0x64
    11c8:	e3e02000 	mvn	r2, #0
    11cc:	ebfffe06 	bl	9ec <draw_circuit>

    float v_stored = 0.0;

    //time data
    int tc = 0;
    double t = 0.0;
    11d0:	e3a02000 	mov	r2, #0
    11d4:	e3a03000 	mov	r3, #0
    11d8:	e14b23fc 	strd	r2, [r11, #-60]	; 0xffffffc4
        // tab_over(select, tab_ready);
        // change_data(select, type_ready, circuit_data, temp_circuit_data);

        //  wait for sync
        wait_for_vsync(); // swap front and back buffers on VGA vertical sync
        pixel_buffer_start = *(pixel_ctrl_ptr + 1); // new back buffer
    11dc:	e30593fc 	movw	r9, #21500	; 0x53fc
    11e0:	e3409000 	movt	r9, #0
        // lit++;

        //Calculate Ic and Vs
        if(tc == 1){

            compute(size,
    11e4:	e3a085fe 	mov	r8, #1065353216	; 0x3f800000
    11e8:	e3a07000 	mov	r7, #0
                    t,
                    t_not,
                    sw1,
                    sw2);

            t = t + 0.1;
    11ec:	e50ba030 	str	r10, [r11, #-48]	; 0xffffffd0
    11f0:	e50b9034 	str	r9, [r11, #-52]	; 0xffffffcc
    11f4:	e1a09005 	mov	r9, r5
    11f8:	e1a04002 	mov	r4, r2
    11fc:	e1a05003 	mov	r5, r3
            // test[29] = sin(t);
            tc = 0;
        }

        //Draw graphs to the right of the circuit
        draw_graph(240, 60, sizeof(Vs)/sizeof(Vs[0]), Vc, WHITE);//some fucking difference between Vs and test here means the graph straight up doesn't plot vs plotting
    1200:	e3e0a000 	mvn	r10, #0
    1204:	e58da000 	str	r10, [sp]
    1208:	e3a000f0 	mov	r0, #240	; 0xf0
    120c:	e3a0103c 	mov	r1, #60	; 0x3c
    1210:	e3a02046 	mov	r2, #70	; 0x46
    1214:	e1a03006 	mov	r3, r6
    1218:	ebfffd47 	bl	73c <draw_graph>
        draw_graph(240, 180, sizeof(Vc)/sizeof(Vc[0]), Ic, WHITE);//some fucking difference between Vs and test here means the graph straight up doesn't plot vs plotting
    121c:	e58da000 	str	r10, [sp]
    1220:	e3a000f0 	mov	r0, #240	; 0xf0
    1224:	e3a010b4 	mov	r1, #180	; 0xb4
    1228:	e3a02046 	mov	r2, #70	; 0x46
    122c:	e1a03009 	mov	r3, r9
    1230:	ebfffd41 	bl	73c <draw_graph>

        // tab_over(select, tab_ready);
        // change_data(select, type_ready, circuit_data, temp_circuit_data);

        //  wait for sync
        wait_for_vsync(); // swap front and back buffers on VGA vertical sync
    1234:	ebfffe95 	bl	c90 <wait_for_vsync>
        pixel_buffer_start = *(pixel_ctrl_ptr + 1); // new back buffer
    1238:	e3033fff 	movw	r3, #16383	; 0x3fff
    123c:	e34f3f20 	movt	r3, #65312	; 0xff20
    1240:	e5133fdb 	ldr	r3, [r3, #-4059]	; 0xfffff025
    1244:	e51b2034 	ldr	r2, [r11, #-52]	; 0xffffffcc
    1248:	e5823000 	str	r3, [r2]

    int lit = 0;

    while (true){
        //  clear screen
        clear_screen();
    124c:	ebfffe74 	bl	c24 <clear_screen>
        clear_chars();
    1250:	ebfffc17 	bl	2b4 <clear_chars>
        set_switches(&sw1, &sw2);
    1254:	e24b0025 	sub	r0, r11, #37	; 0x25
    1258:	e24b1026 	sub	r1, r11, #38	; 0x26
    125c:	ebffffa1 	bl	10e8 <set_switches>
        draw_circuit(40, 100, WHITE, sw1, sw2);
    1260:	e55b3025 	ldrb	r3, [r11, #-37]	; 0xffffffdb
    1264:	e55b2026 	ldrb	r2, [r11, #-38]	; 0xffffffda
    1268:	e58d2000 	str	r2, [sp]
    126c:	e3a00028 	mov	r0, #40	; 0x28
    1270:	e3a01064 	mov	r1, #100	; 0x64
    1274:	e1a0200a 	mov	r2, r10
    1278:	ebfffddb 	bl	9ec <draw_circuit>
        // lit++;

        //Calculate Ic and Vs
        if(tc == 1){

            compute(size,
    127c:	e24b302c 	sub	r3, r11, #44	; 0x2c
    1280:	e58d3000 	str	r3, [sp]
    1284:	e58d8004 	str	r8, [sp, #4]
    1288:	e58d8008 	str	r8, [sp, #8]
    128c:	e58d700c 	str	r7, [sp, #12]
    1290:	e30337bd 	movw	r3, #14269	; 0x37bd
    1294:	e3433586 	movt	r3, #13702	; 0x3586
    1298:	e58d3010 	str	r3, [sp, #16]
    129c:	e3a02000 	mov	r2, #0
    12a0:	e344247a 	movt	r2, #17530	; 0x447a
    12a4:	e58d2014 	str	r2, [sp, #20]
    12a8:	e1a00004 	mov	r0, r4
    12ac:	e1a01005 	mov	r1, r5
    12b0:	eb000b9f 	bl	4134 <__aeabi_d2f>
    12b4:	e58d0018 	str	r0, [sp, #24]
    12b8:	e58d701c 	str	r7, [sp, #28]
    12bc:	e55b3025 	ldrb	r3, [r11, #-37]	; 0xffffffdb
    12c0:	e58d3020 	str	r3, [sp, #32]
    12c4:	e55b3026 	ldrb	r3, [r11, #-38]	; 0xffffffda
    12c8:	e58d3024 	str	r3, [sp, #36]	; 0x24
    12cc:	e3a00046 	mov	r0, #70	; 0x46
    12d0:	e51b1030 	ldr	r1, [r11, #-48]	; 0xffffffd0
    12d4:	e1a02009 	mov	r2, r9
    12d8:	e1a03006 	mov	r3, r6
    12dc:	ebfffeaa 	bl	d8c <compute>
                    t,
                    t_not,
                    sw1,
                    sw2);

            t = t + 0.1;
    12e0:	e1a00004 	mov	r0, r4
    12e4:	e1a01005 	mov	r1, r5
    12e8:	e309299a 	movw	r2, #39322	; 0x999a
    12ec:	e3492999 	movt	r2, #39321	; 0x9999
    12f0:	e3093999 	movw	r3, #39321	; 0x9999
    12f4:	e3433fb9 	movt	r3, #16313	; 0x3fb9
    12f8:	eb0008fa 	bl	36e8 <__adddf3>
    12fc:	e1a04000 	mov	r4, r0
    1300:	e1a05001 	mov	r5, r1
    1304:	eaffffbd 	b	1200 <main+0xf4>

00001308 <cos>:
    1308:	e92d4030 	push	{r4, r5, lr}
    130c:	e59fe0e0 	ldr	lr, [pc, #224]	; 13f4 <cos+0xec>
    1310:	e3c1c102 	bic	r12, r1, #-2147483648	; 0x80000000
    1314:	e15c000e 	cmp	r12, lr
    1318:	e24dd01c 	sub	sp, sp, #28
    131c:	e1a02000 	mov	r2, r0
    1320:	e1a03001 	mov	r3, r1
    1324:	e1a04000 	mov	r4, r0
    1328:	e1a05001 	mov	r5, r1
    132c:	da000015 	ble	1388 <cos+0x80>
    1330:	e59fe0c0 	ldr	lr, [pc, #192]	; 13f8 <cos+0xf0>
    1334:	e15c000e 	cmp	r12, lr
    1338:	da000003 	ble	134c <cos+0x44>
    133c:	eb0008e8 	bl	36e4 <__aeabi_dsub>
    1340:	e28dd01c 	add	sp, sp, #28
    1344:	e8bd4030 	pop	{r4, r5, lr}
    1348:	e12fff1e 	bx	lr
    134c:	e28d2008 	add	r2, sp, #8
    1350:	eb0001dc 	bl	1ac8 <__ieee754_rem_pio2>
    1354:	e2000003 	and	r0, r0, #3
    1358:	e3500001 	cmp	r0, #1
    135c:	0a000014 	beq	13b4 <cos+0xac>
    1360:	e3500002 	cmp	r0, #2
    1364:	0a00000b 	beq	1398 <cos+0x90>
    1368:	e3500000 	cmp	r0, #0
    136c:	1a000018 	bne	13d4 <cos+0xcc>
    1370:	e28d1008 	add	r1, sp, #8
    1374:	e8910003 	ldm	r1, {r0, r1}
    1378:	e28d3010 	add	r3, sp, #16
    137c:	e893000c 	ldm	r3, {r2, r3}
    1380:	eb000366 	bl	2120 <__kernel_cos>
    1384:	eaffffed 	b	1340 <cos+0x38>
    1388:	e3a02000 	mov	r2, #0
    138c:	e3a03000 	mov	r3, #0
    1390:	eb000362 	bl	2120 <__kernel_cos>
    1394:	eaffffe9 	b	1340 <cos+0x38>
    1398:	e28d1008 	add	r1, sp, #8
    139c:	e8910003 	ldm	r1, {r0, r1}
    13a0:	e28d3010 	add	r3, sp, #16
    13a4:	e893000c 	ldm	r3, {r2, r3}
    13a8:	eb00035c 	bl	2120 <__kernel_cos>
    13ac:	e2811102 	add	r1, r1, #-2147483648	; 0x80000000
    13b0:	eaffffe2 	b	1340 <cos+0x38>
    13b4:	e58d0000 	str	r0, [sp]
    13b8:	e28d3010 	add	r3, sp, #16
    13bc:	e893000c 	ldm	r3, {r2, r3}
    13c0:	e28d1008 	add	r1, sp, #8
    13c4:	e8910003 	ldm	r1, {r0, r1}
    13c8:	eb00070c 	bl	3000 <__kernel_sin>
    13cc:	e2811102 	add	r1, r1, #-2147483648	; 0x80000000
    13d0:	eaffffda 	b	1340 <cos+0x38>
    13d4:	e3a03001 	mov	r3, #1
    13d8:	e58d3000 	str	r3, [sp]
    13dc:	e28d1008 	add	r1, sp, #8
    13e0:	e8910003 	ldm	r1, {r0, r1}
    13e4:	e28d3010 	add	r3, sp, #16
    13e8:	e893000c 	ldm	r3, {r2, r3}
    13ec:	eb000703 	bl	3000 <__kernel_sin>
    13f0:	eaffffd2 	b	1340 <cos+0x38>
    13f4:	3fe921fb 	.word	0x3fe921fb
    13f8:	7fefffff 	.word	0x7fefffff

000013fc <sin>:
    13fc:	e92d4030 	push	{r4, r5, lr}
    1400:	e59fe0ec 	ldr	lr, [pc, #236]	; 14f4 <sin+0xf8>
    1404:	e3c1c102 	bic	r12, r1, #-2147483648	; 0x80000000
    1408:	e15c000e 	cmp	r12, lr
    140c:	e24dd01c 	sub	sp, sp, #28
    1410:	e1a02000 	mov	r2, r0
    1414:	e1a03001 	mov	r3, r1
    1418:	e1a04000 	mov	r4, r0
    141c:	e1a05001 	mov	r5, r1
    1420:	da000017 	ble	1484 <sin+0x88>
    1424:	e59fe0cc 	ldr	lr, [pc, #204]	; 14f8 <sin+0xfc>
    1428:	e15c000e 	cmp	r12, lr
    142c:	da000003 	ble	1440 <sin+0x44>
    1430:	eb0008ab 	bl	36e4 <__aeabi_dsub>
    1434:	e28dd01c 	add	sp, sp, #28
    1438:	e8bd4030 	pop	{r4, r5, lr}
    143c:	e12fff1e 	bx	lr
    1440:	e28d2008 	add	r2, sp, #8
    1444:	eb00019f 	bl	1ac8 <__ieee754_rem_pio2>
    1448:	e2000003 	and	r0, r0, #3
    144c:	e3500001 	cmp	r0, #1
    1450:	0a00001a 	beq	14c0 <sin+0xc4>
    1454:	e3500002 	cmp	r0, #2
    1458:	0a00000f 	beq	149c <sin+0xa0>
    145c:	e3500000 	cmp	r0, #0
    1460:	1a00001c 	bne	14d8 <sin+0xdc>
    1464:	e3a03001 	mov	r3, #1
    1468:	e58d3000 	str	r3, [sp]
    146c:	e28d1008 	add	r1, sp, #8
    1470:	e8910003 	ldm	r1, {r0, r1}
    1474:	e28d3010 	add	r3, sp, #16
    1478:	e893000c 	ldm	r3, {r2, r3}
    147c:	eb0006df 	bl	3000 <__kernel_sin>
    1480:	eaffffeb 	b	1434 <sin+0x38>
    1484:	e3a03000 	mov	r3, #0
    1488:	e58d3000 	str	r3, [sp]
    148c:	e3a02000 	mov	r2, #0
    1490:	e3a03000 	mov	r3, #0
    1494:	eb0006d9 	bl	3000 <__kernel_sin>
    1498:	eaffffe5 	b	1434 <sin+0x38>
    149c:	e3a03001 	mov	r3, #1
    14a0:	e58d3000 	str	r3, [sp]
    14a4:	e28d1008 	add	r1, sp, #8
    14a8:	e8910003 	ldm	r1, {r0, r1}
    14ac:	e28d3010 	add	r3, sp, #16
    14b0:	e893000c 	ldm	r3, {r2, r3}
    14b4:	eb0006d1 	bl	3000 <__kernel_sin>
    14b8:	e2811102 	add	r1, r1, #-2147483648	; 0x80000000
    14bc:	eaffffdc 	b	1434 <sin+0x38>
    14c0:	e28d1008 	add	r1, sp, #8
    14c4:	e8910003 	ldm	r1, {r0, r1}
    14c8:	e28d3010 	add	r3, sp, #16
    14cc:	e893000c 	ldm	r3, {r2, r3}
    14d0:	eb000312 	bl	2120 <__kernel_cos>
    14d4:	eaffffd6 	b	1434 <sin+0x38>
    14d8:	e28d1008 	add	r1, sp, #8
    14dc:	e8910003 	ldm	r1, {r0, r1}
    14e0:	e28d3010 	add	r3, sp, #16
    14e4:	e893000c 	ldm	r3, {r2, r3}
    14e8:	eb00030c 	bl	2120 <__kernel_cos>
    14ec:	e2811102 	add	r1, r1, #-2147483648	; 0x80000000
    14f0:	eaffffcf 	b	1434 <sin+0x38>
    14f4:	3fe921fb 	.word	0x3fe921fb
    14f8:	7fefffff 	.word	0x7fefffff
    14fc:	00000000 	.word	0x00000000

00001500 <exp>:
    1500:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
    1504:	e24dd028 	sub	sp, sp, #40	; 0x28
    1508:	e1a04000 	mov	r4, r0
    150c:	e1a05001 	mov	r5, r1
    1510:	eb00005e 	bl	1690 <__ieee754_exp>
    1514:	e59f8164 	ldr	r8, [pc, #356]	; 1680 <exp+0x180>
    1518:	e1d830d0 	ldrsb	r3, [r8]
    151c:	e3730001 	cmn	r3, #1
    1520:	e1a06000 	mov	r6, r0
    1524:	e1a07001 	mov	r7, r1
    1528:	0a00002f 	beq	15ec <exp+0xec>
    152c:	e1a00004 	mov	r0, r4
    1530:	e1a01005 	mov	r1, r5
    1534:	eb00073b 	bl	3228 <finite>
    1538:	e3500000 	cmp	r0, #0
    153c:	0a00002a 	beq	15ec <exp+0xec>
    1540:	e1a00004 	mov	r0, r4
    1544:	e1a01005 	mov	r1, r5
    1548:	e28f3e12 	add	r3, pc, #288	; 0x120
    154c:	e893000c 	ldm	r3, {r2, r3}
    1550:	eb000ada 	bl	40c0 <__aeabi_dcmpgt>
    1554:	e3500000 	cmp	r0, #0
    1558:	1a000028 	bne	1600 <exp+0x100>
    155c:	e1a00004 	mov	r0, r4
    1560:	e1a01005 	mov	r1, r5
    1564:	e28f3f43 	add	r3, pc, #268	; 0x10c
    1568:	e893000c 	ldm	r3, {r2, r3}
    156c:	eb000ac1 	bl	4078 <__aeabi_dcmplt>
    1570:	e3500000 	cmp	r0, #0
    1574:	0a00001c 	beq	15ec <exp+0xec>
    1578:	e1d830d0 	ldrsb	r3, [r8]
    157c:	e3530002 	cmp	r3, #2
    1580:	e3a03004 	mov	r3, #4
    1584:	e58d3000 	str	r3, [sp]
    1588:	e59f30f4 	ldr	r3, [pc, #244]	; 1684 <exp+0x184>
    158c:	e58d3004 	str	r3, [sp, #4]
    1590:	e3a03000 	mov	r3, #0
    1594:	e58d3020 	str	r3, [sp, #32]
    1598:	e3a02000 	mov	r2, #0
    159c:	e3a03000 	mov	r3, #0
    15a0:	e58d4010 	str	r4, [sp, #16]
    15a4:	e58d5014 	str	r5, [sp, #20]
    15a8:	e58d4008 	str	r4, [sp, #8]
    15ac:	e58d500c 	str	r5, [sp, #12]
    15b0:	e58d2018 	str	r2, [sp, #24]
    15b4:	e58d301c 	str	r3, [sp, #28]
    15b8:	0a000027 	beq	165c <exp+0x15c>
    15bc:	e1a0000d 	mov	r0, sp
    15c0:	eb000782 	bl	33d0 <matherr>
    15c4:	e3500000 	cmp	r0, #0
    15c8:	0a000023 	beq	165c <exp+0x15c>
    15cc:	e59d3020 	ldr	r3, [sp, #32]
    15d0:	e3530000 	cmp	r3, #0
    15d4:	0a000002 	beq	15e4 <exp+0xe4>
    15d8:	eb000cca 	bl	4908 <__errno>
    15dc:	e59d3020 	ldr	r3, [sp, #32]
    15e0:	e5803000 	str	r3, [r0]
    15e4:	e28d7018 	add	r7, sp, #24
    15e8:	e89700c0 	ldm	r7, {r6, r7}
    15ec:	e1a00006 	mov	r0, r6
    15f0:	e1a01007 	mov	r1, r7
    15f4:	e28dd028 	add	sp, sp, #40	; 0x28
    15f8:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
    15fc:	e12fff1e 	bx	lr
    1600:	e3a02003 	mov	r2, #3
    1604:	e5d83000 	ldrb	r3, [r8]
    1608:	e58d2000 	str	r2, [sp]
    160c:	e59f2070 	ldr	r2, [pc, #112]	; 1684 <exp+0x184>
    1610:	e3530000 	cmp	r3, #0
    1614:	e58d2004 	str	r2, [sp, #4]
    1618:	e3a02000 	mov	r2, #0
    161c:	e58d2020 	str	r2, [sp, #32]
    1620:	e58d4010 	str	r4, [sp, #16]
    1624:	e58d5014 	str	r5, [sp, #20]
    1628:	e58d4008 	str	r4, [sp, #8]
    162c:	e58d500c 	str	r5, [sp, #12]
    1630:	059f3050 	ldreq	r3, [pc, #80]	; 1688 <exp+0x188>
    1634:	03a0220e 	moveq	r2, #-536870912	; 0xe0000000
    1638:	058d2018 	streq	r2, [sp, #24]
    163c:	058d301c 	streq	r3, [sp, #28]
    1640:	0affffdd 	beq	15bc <exp+0xbc>
    1644:	e3530002 	cmp	r3, #2
    1648:	e59f303c 	ldr	r3, [pc, #60]	; 168c <exp+0x18c>
    164c:	e3a02000 	mov	r2, #0
    1650:	e58d2018 	str	r2, [sp, #24]
    1654:	e58d301c 	str	r3, [sp, #28]
    1658:	1affffd7 	bne	15bc <exp+0xbc>
    165c:	eb000ca9 	bl	4908 <__errno>
    1660:	e3a03022 	mov	r3, #34	; 0x22
    1664:	e5803000 	str	r3, [r0]
    1668:	eaffffd7 	b	15cc <exp+0xcc>
    166c:	e1a00000 	nop			; (mov r0, r0)
    1670:	fefa39ef 	.word	0xfefa39ef
    1674:	40862e42 	.word	0x40862e42
    1678:	d52d3051 	.word	0xd52d3051
    167c:	c0874910 	.word	0xc0874910
    1680:	00004fa0 	.word	0x00004fa0
    1684:	00004d30 	.word	0x00004d30
    1688:	47efffff 	.word	0x47efffff
    168c:	7ff00000 	.word	0x7ff00000

00001690 <__ieee754_exp>:
    1690:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
    1694:	e59fc40c 	ldr	r12, [pc, #1036]	; 1aa8 <__ieee754_exp+0x418>
    1698:	e3c13102 	bic	r3, r1, #-2147483648	; 0x80000000
    169c:	e153000c 	cmp	r3, r12
    16a0:	e24dd00c 	sub	sp, sp, #12
    16a4:	e1a04000 	mov	r4, r0
    16a8:	e1a05001 	mov	r5, r1
    16ac:	e1a06fa1 	lsr	r6, r1, #31
    16b0:	9a00000d 	bls	16ec <__ieee754_exp+0x5c>
    16b4:	e59fc3f0 	ldr	r12, [pc, #1008]	; 1aac <__ieee754_exp+0x41c>
    16b8:	e153000c 	cmp	r3, r12
    16bc:	9a000020 	bls	1744 <__ieee754_exp+0xb4>
    16c0:	e3c1c4ff 	bic	r12, r1, #-16777216	; 0xff000000
    16c4:	e3cc360f 	bic	r3, r12, #15728640	; 0xf00000
    16c8:	e1933000 	orrs	r3, r3, r0
    16cc:	1a0000b2 	bne	199c <__ieee754_exp+0x30c>
    16d0:	e3560000 	cmp	r6, #0
    16d4:	1a0000da 	bne	1a44 <__ieee754_exp+0x3b4>
    16d8:	e1a00004 	mov	r0, r4
    16dc:	e1a01005 	mov	r1, r5
    16e0:	e28dd00c 	add	sp, sp, #12
    16e4:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
    16e8:	e12fff1e 	bx	lr
    16ec:	e59f23bc 	ldr	r2, [pc, #956]	; 1ab0 <__ieee754_exp+0x420>
    16f0:	e1530002 	cmp	r3, r2
    16f4:	8a000098 	bhi	195c <__ieee754_exp+0x2cc>
    16f8:	e59f23b4 	ldr	r2, [pc, #948]	; 1ab4 <__ieee754_exp+0x424>
    16fc:	e1530002 	cmp	r3, r2
    1700:	8a0000a3 	bhi	1994 <__ieee754_exp+0x304>
    1704:	e28f3fd1 	add	r3, pc, #836	; 0x344
    1708:	e893000c 	ldm	r3, {r2, r3}
    170c:	eb0007f5 	bl	36e8 <__adddf3>
    1710:	e3a02000 	mov	r2, #0
    1714:	e59f339c 	ldr	r3, [pc, #924]	; 1ab8 <__ieee754_exp+0x428>
    1718:	eb000a68 	bl	40c0 <__aeabi_dcmpgt>
    171c:	e3500000 	cmp	r0, #0
    1720:	0a000038 	beq	1808 <__ieee754_exp+0x178>
    1724:	e1a00004 	mov	r0, r4
    1728:	e1a01005 	mov	r1, r5
    172c:	e3a02000 	mov	r2, #0
    1730:	e59f3380 	ldr	r3, [pc, #896]	; 1ab8 <__ieee754_exp+0x428>
    1734:	eb0007eb 	bl	36e8 <__adddf3>
    1738:	e1a04000 	mov	r4, r0
    173c:	e1a05001 	mov	r5, r1
    1740:	eaffffe4 	b	16d8 <__ieee754_exp+0x48>
    1744:	e28f3fc3 	add	r3, pc, #780	; 0x30c
    1748:	e893000c 	ldm	r3, {r2, r3}
    174c:	eb000a5b 	bl	40c0 <__aeabi_dcmpgt>
    1750:	e3500000 	cmp	r0, #0
    1754:	1a000096 	bne	19b4 <__ieee754_exp+0x324>
    1758:	e1a00004 	mov	r0, r4
    175c:	e1a01005 	mov	r1, r5
    1760:	e28f3fbe 	add	r3, pc, #760	; 0x2f8
    1764:	e893000c 	ldm	r3, {r2, r3}
    1768:	eb000a42 	bl	4078 <__aeabi_dcmplt>
    176c:	e3500000 	cmp	r0, #0
    1770:	1a0000b3 	bne	1a44 <__ieee754_exp+0x3b4>
    1774:	e28f3fbb 	add	r3, pc, #748	; 0x2ec
    1778:	e893000c 	ldm	r3, {r2, r3}
    177c:	e1a00004 	mov	r0, r4
    1780:	e1a01005 	mov	r1, r5
    1784:	eb0008db 	bl	3af8 <__aeabi_dmul>
    1788:	e59f332c 	ldr	r3, [pc, #812]	; 1abc <__ieee754_exp+0x42c>
    178c:	e0836186 	add	r6, r3, r6, lsl #3
    1790:	e2863020 	add	r3, r6, #32
    1794:	e893000c 	ldm	r3, {r2, r3}
    1798:	eb0007d2 	bl	36e8 <__adddf3>
    179c:	eb000a4d 	bl	40d8 <__aeabi_d2iz>
    17a0:	e1a08000 	mov	r8, r0
    17a4:	eb00089c 	bl	3a1c <__aeabi_i2d>
    17a8:	e28f3d0b 	add	r3, pc, #704	; 0x2c0
    17ac:	e893000c 	ldm	r3, {r2, r3}
    17b0:	e1a06000 	mov	r6, r0
    17b4:	e1a07001 	mov	r7, r1
    17b8:	eb0008ce 	bl	3af8 <__aeabi_dmul>
    17bc:	e1a02000 	mov	r2, r0
    17c0:	e1a03001 	mov	r3, r1
    17c4:	e1a00004 	mov	r0, r4
    17c8:	e1a01005 	mov	r1, r5
    17cc:	eb0007c4 	bl	36e4 <__aeabi_dsub>
    17d0:	e28f3e2a 	add	r3, pc, #672	; 0x2a0
    17d4:	e893000c 	ldm	r3, {r2, r3}
    17d8:	e88d0003 	stm	sp, {r0, r1}
    17dc:	e1a00006 	mov	r0, r6
    17e0:	e1a01007 	mov	r1, r7
    17e4:	eb0008c3 	bl	3af8 <__aeabi_dmul>
    17e8:	e1a0a000 	mov	r10, r0
    17ec:	e1a0b001 	mov	r11, r1
    17f0:	e89d0003 	ldm	sp, {r0, r1}
    17f4:	e1a0200a 	mov	r2, r10
    17f8:	e1a0300b 	mov	r3, r11
    17fc:	eb0007b8 	bl	36e4 <__aeabi_dsub>
    1800:	e1a04000 	mov	r4, r0
    1804:	e1a05001 	mov	r5, r1
    1808:	e1a02004 	mov	r2, r4
    180c:	e1a03005 	mov	r3, r5
    1810:	e1a00004 	mov	r0, r4
    1814:	e1a01005 	mov	r1, r5
    1818:	eb0008b6 	bl	3af8 <__aeabi_dmul>
    181c:	e28f3f97 	add	r3, pc, #604	; 0x25c
    1820:	e893000c 	ldm	r3, {r2, r3}
    1824:	e1a06000 	mov	r6, r0
    1828:	e1a07001 	mov	r7, r1
    182c:	eb0008b1 	bl	3af8 <__aeabi_dmul>
    1830:	e28f3e25 	add	r3, pc, #592	; 0x250
    1834:	e893000c 	ldm	r3, {r2, r3}
    1838:	eb0007a9 	bl	36e4 <__aeabi_dsub>
    183c:	e1a02006 	mov	r2, r6
    1840:	e1a03007 	mov	r3, r7
    1844:	eb0008ab 	bl	3af8 <__aeabi_dmul>
    1848:	e28f3d09 	add	r3, pc, #576	; 0x240
    184c:	e893000c 	ldm	r3, {r2, r3}
    1850:	eb0007a4 	bl	36e8 <__adddf3>
    1854:	e1a02006 	mov	r2, r6
    1858:	e1a03007 	mov	r3, r7
    185c:	eb0008a5 	bl	3af8 <__aeabi_dmul>
    1860:	e28f3e23 	add	r3, pc, #560	; 0x230
    1864:	e893000c 	ldm	r3, {r2, r3}
    1868:	eb00079d 	bl	36e4 <__aeabi_dsub>
    186c:	e1a02006 	mov	r2, r6
    1870:	e1a03007 	mov	r3, r7
    1874:	eb00089f 	bl	3af8 <__aeabi_dmul>
    1878:	e28f3e22 	add	r3, pc, #544	; 0x220
    187c:	e893000c 	ldm	r3, {r2, r3}
    1880:	eb000798 	bl	36e8 <__adddf3>
    1884:	e1a02006 	mov	r2, r6
    1888:	e1a03007 	mov	r3, r7
    188c:	eb000899 	bl	3af8 <__aeabi_dmul>
    1890:	e1a02000 	mov	r2, r0
    1894:	e1a03001 	mov	r3, r1
    1898:	e1a00004 	mov	r0, r4
    189c:	e1a01005 	mov	r1, r5
    18a0:	eb00078f 	bl	36e4 <__aeabi_dsub>
    18a4:	e3580000 	cmp	r8, #0
    18a8:	e1a06000 	mov	r6, r0
    18ac:	e1a07001 	mov	r7, r1
    18b0:	0a000047 	beq	19d4 <__ieee754_exp+0x344>
    18b4:	e1a02000 	mov	r2, r0
    18b8:	e1a03001 	mov	r3, r1
    18bc:	e1a00004 	mov	r0, r4
    18c0:	e1a01005 	mov	r1, r5
    18c4:	eb00088b 	bl	3af8 <__aeabi_dmul>
    18c8:	e1a02006 	mov	r2, r6
    18cc:	e1a04000 	mov	r4, r0
    18d0:	e1a05001 	mov	r5, r1
    18d4:	e1a03007 	mov	r3, r7
    18d8:	e3a00000 	mov	r0, #0
    18dc:	e3a01101 	mov	r1, #1073741824	; 0x40000000
    18e0:	eb00077f 	bl	36e4 <__aeabi_dsub>
    18e4:	e1a02000 	mov	r2, r0
    18e8:	e1a03001 	mov	r3, r1
    18ec:	e1a00004 	mov	r0, r4
    18f0:	e1a01005 	mov	r1, r5
    18f4:	eb000923 	bl	3d88 <__aeabi_ddiv>
    18f8:	e1a02000 	mov	r2, r0
    18fc:	e1a03001 	mov	r3, r1
    1900:	e1a0000a 	mov	r0, r10
    1904:	e1a0100b 	mov	r1, r11
    1908:	eb000775 	bl	36e4 <__aeabi_dsub>
    190c:	e89d000c 	ldm	sp, {r2, r3}
    1910:	eb000773 	bl	36e4 <__aeabi_dsub>
    1914:	e1a03001 	mov	r3, r1
    1918:	e1a02000 	mov	r2, r0
    191c:	e59f1194 	ldr	r1, [pc, #404]	; 1ab8 <__ieee754_exp+0x428>
    1920:	e3a00000 	mov	r0, #0
    1924:	eb00076e 	bl	36e4 <__aeabi_dsub>
    1928:	e3e03fff 	mvn	r3, #1020	; 0x3fc
    192c:	e1580003 	cmp	r8, r3
    1930:	a1a04000 	movge	r4, r0
    1934:	a0815a08 	addge	r5, r1, r8, lsl #20
    1938:	aaffff66 	bge	16d8 <__ieee754_exp+0x48>
    193c:	e2888ffa 	add	r8, r8, #1000	; 0x3e8
    1940:	e0811a08 	add	r1, r1, r8, lsl #20
    1944:	e3a02000 	mov	r2, #0
    1948:	e3a03617 	mov	r3, #24117248	; 0x1700000
    194c:	eb000869 	bl	3af8 <__aeabi_dmul>
    1950:	e1a04000 	mov	r4, r0
    1954:	e1a05001 	mov	r5, r1
    1958:	eaffff5e 	b	16d8 <__ieee754_exp+0x48>
    195c:	e59f215c 	ldr	r2, [pc, #348]	; 1ac0 <__ieee754_exp+0x430>
    1960:	e1530002 	cmp	r3, r2
    1964:	8affff82 	bhi	1774 <__ieee754_exp+0xe4>
    1968:	e59f414c 	ldr	r4, [pc, #332]	; 1abc <__ieee754_exp+0x42c>
    196c:	e0844186 	add	r4, r4, r6, lsl #3
    1970:	e894000c 	ldm	r4, {r2, r3}
    1974:	eb00075a 	bl	36e4 <__aeabi_dsub>
    1978:	e2668000 	rsb	r8, r6, #0
    197c:	e0668008 	rsb	r8, r6, r8
    1980:	e88d0003 	stm	sp, {r0, r1}
    1984:	e284b010 	add	r11, r4, #16
    1988:	e89b0c00 	ldm	r11, {r10, r11}
    198c:	e2888001 	add	r8, r8, #1
    1990:	eaffff96 	b	17f0 <__ieee754_exp+0x160>
    1994:	e3a08000 	mov	r8, #0
    1998:	eaffff9a 	b	1808 <__ieee754_exp+0x178>
    199c:	e1a02000 	mov	r2, r0
    19a0:	e1a03001 	mov	r3, r1
    19a4:	eb00074f 	bl	36e8 <__adddf3>
    19a8:	e1a04000 	mov	r4, r0
    19ac:	e1a05001 	mov	r5, r1
    19b0:	eaffff48 	b	16d8 <__ieee754_exp+0x48>
    19b4:	e28f1094 	add	r1, pc, #148	; 0x94
    19b8:	e8910003 	ldm	r1, {r0, r1}
    19bc:	e1a02000 	mov	r2, r0
    19c0:	e1a03001 	mov	r3, r1
    19c4:	eb00084b 	bl	3af8 <__aeabi_dmul>
    19c8:	e1a04000 	mov	r4, r0
    19cc:	e1a05001 	mov	r5, r1
    19d0:	eaffff40 	b	16d8 <__ieee754_exp+0x48>
    19d4:	e1a00004 	mov	r0, r4
    19d8:	e1a01005 	mov	r1, r5
    19dc:	e1a02006 	mov	r2, r6
    19e0:	e1a03007 	mov	r3, r7
    19e4:	eb000843 	bl	3af8 <__aeabi_dmul>
    19e8:	e3a02000 	mov	r2, #0
    19ec:	e1a08000 	mov	r8, r0
    19f0:	e1a09001 	mov	r9, r1
    19f4:	e3a03101 	mov	r3, #1073741824	; 0x40000000
    19f8:	e1a00006 	mov	r0, r6
    19fc:	e1a01007 	mov	r1, r7
    1a00:	eb000737 	bl	36e4 <__aeabi_dsub>
    1a04:	e1a02000 	mov	r2, r0
    1a08:	e1a03001 	mov	r3, r1
    1a0c:	e1a00008 	mov	r0, r8
    1a10:	e1a01009 	mov	r1, r9
    1a14:	eb0008db 	bl	3d88 <__aeabi_ddiv>
    1a18:	e1a02004 	mov	r2, r4
    1a1c:	e1a03005 	mov	r3, r5
    1a20:	eb00072f 	bl	36e4 <__aeabi_dsub>
    1a24:	e1a02000 	mov	r2, r0
    1a28:	e1a03001 	mov	r3, r1
    1a2c:	e3a00000 	mov	r0, #0
    1a30:	e59f1080 	ldr	r1, [pc, #128]	; 1ab8 <__ieee754_exp+0x428>
    1a34:	eb00072a 	bl	36e4 <__aeabi_dsub>
    1a38:	e1a04000 	mov	r4, r0
    1a3c:	e1a05001 	mov	r5, r1
    1a40:	eaffff24 	b	16d8 <__ieee754_exp+0x48>
    1a44:	e3a04000 	mov	r4, #0
    1a48:	e3a05000 	mov	r5, #0
    1a4c:	eaffff21 	b	16d8 <__ieee754_exp+0x48>
    1a50:	8800759c 	.word	0x8800759c
    1a54:	7e37e43c 	.word	0x7e37e43c
    1a58:	fefa39ef 	.word	0xfefa39ef
    1a5c:	40862e42 	.word	0x40862e42
    1a60:	d52d3051 	.word	0xd52d3051
    1a64:	c0874910 	.word	0xc0874910
    1a68:	652b82fe 	.word	0x652b82fe
    1a6c:	3ff71547 	.word	0x3ff71547
    1a70:	fee00000 	.word	0xfee00000
    1a74:	3fe62e42 	.word	0x3fe62e42
    1a78:	35793c76 	.word	0x35793c76
    1a7c:	3dea39ef 	.word	0x3dea39ef
    1a80:	72bea4d0 	.word	0x72bea4d0
    1a84:	3e663769 	.word	0x3e663769
    1a88:	c5d26bf1 	.word	0xc5d26bf1
    1a8c:	3ebbbd41 	.word	0x3ebbbd41
    1a90:	af25de2c 	.word	0xaf25de2c
    1a94:	3f11566a 	.word	0x3f11566a
    1a98:	16bebd93 	.word	0x16bebd93
    1a9c:	3f66c16c 	.word	0x3f66c16c
    1aa0:	5555553e 	.word	0x5555553e
    1aa4:	3fc55555 	.word	0x3fc55555
    1aa8:	40862e41 	.word	0x40862e41
    1aac:	7fefffff 	.word	0x7fefffff
    1ab0:	3fd62e42 	.word	0x3fd62e42
    1ab4:	3e2fffff 	.word	0x3e2fffff
    1ab8:	3ff00000 	.word	0x3ff00000
    1abc:	00004d38 	.word	0x00004d38
    1ac0:	3ff0a2b1 	.word	0x3ff0a2b1
    1ac4:	e1a00000 	nop			; (mov r0, r0)

00001ac8 <__ieee754_rem_pio2>:
    1ac8:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
    1acc:	e59fc3bc 	ldr	r12, [pc, #956]	; 1e90 <__ieee754_rem_pio2+0x3c8>
    1ad0:	e3c17102 	bic	r7, r1, #-2147483648	; 0x80000000
    1ad4:	e157000c 	cmp	r7, r12
    1ad8:	e24dd03c 	sub	sp, sp, #60	; 0x3c
    1adc:	e1a04000 	mov	r4, r0
    1ae0:	e1a05001 	mov	r5, r1
    1ae4:	e1a0a000 	mov	r10, r0
    1ae8:	e1a0b001 	mov	r11, r1
    1aec:	e1a08002 	mov	r8, r2
    1af0:	da00005b 	ble	1c64 <__ieee754_rem_pio2+0x19c>
    1af4:	e59f2398 	ldr	r2, [pc, #920]	; 1e94 <__ieee754_rem_pio2+0x3cc>
    1af8:	e1570002 	cmp	r7, r2
    1afc:	e1a09001 	mov	r9, r1
    1b00:	ca000019 	bgt	1b6c <__ieee754_rem_pio2+0xa4>
    1b04:	e3510000 	cmp	r1, #0
    1b08:	e28f3fd6 	add	r3, pc, #856	; 0x358
    1b0c:	e893000c 	ldm	r3, {r2, r3}
    1b10:	da000149 	ble	203c <__ieee754_rem_pio2+0x574>
    1b14:	eb0006f2 	bl	36e4 <__aeabi_dsub>
    1b18:	e59f3378 	ldr	r3, [pc, #888]	; 1e98 <__ieee754_rem_pio2+0x3d0>
    1b1c:	e1570003 	cmp	r7, r3
    1b20:	e1a0a000 	mov	r10, r0
    1b24:	e1a0b001 	mov	r11, r1
    1b28:	0a00005f 	beq	1cac <__ieee754_rem_pio2+0x1e4>
    1b2c:	e28f3fcf 	add	r3, pc, #828	; 0x33c
    1b30:	e893000c 	ldm	r3, {r2, r3}
    1b34:	eb0006ea 	bl	36e4 <__aeabi_dsub>
    1b38:	e1a02000 	mov	r2, r0
    1b3c:	e1a03001 	mov	r3, r1
    1b40:	e8880003 	stm	r8, {r0, r1}
    1b44:	e1a0000a 	mov	r0, r10
    1b48:	e1a0100b 	mov	r1, r11
    1b4c:	eb0006e4 	bl	36e4 <__aeabi_dsub>
    1b50:	e28f3fc6 	add	r3, pc, #792	; 0x318
    1b54:	e893000c 	ldm	r3, {r2, r3}
    1b58:	eb0006e1 	bl	36e4 <__aeabi_dsub>
    1b5c:	e3a06001 	mov	r6, #1
    1b60:	e5880008 	str	r0, [r8, #8]
    1b64:	e588100c 	str	r1, [r8, #12]
    1b68:	ea000043 	b	1c7c <__ieee754_rem_pio2+0x1b4>
    1b6c:	e59f3328 	ldr	r3, [pc, #808]	; 1e9c <__ieee754_rem_pio2+0x3d4>
    1b70:	e1570003 	cmp	r7, r3
    1b74:	da000075 	ble	1d50 <__ieee754_rem_pio2+0x288>
    1b78:	e59f3320 	ldr	r3, [pc, #800]	; 1ea0 <__ieee754_rem_pio2+0x3d8>
    1b7c:	e1570003 	cmp	r7, r3
    1b80:	ca000041 	bgt	1c8c <__ieee754_rem_pio2+0x1c4>
    1b84:	e1a0aa47 	asr	r10, r7, #20
    1b88:	e24aae41 	sub	r10, r10, #1040	; 0x410
    1b8c:	e24aa006 	sub	r10, r10, #6
    1b90:	e0475a0a 	sub	r5, r7, r10, lsl #20
    1b94:	e1a01005 	mov	r1, r5
    1b98:	e1a04000 	mov	r4, r0
    1b9c:	eb00094d 	bl	40d8 <__aeabi_d2iz>
    1ba0:	eb00079d 	bl	3a1c <__aeabi_i2d>
    1ba4:	e1a06000 	mov	r6, r0
    1ba8:	e1a07001 	mov	r7, r1
    1bac:	e1a02000 	mov	r2, r0
    1bb0:	e1a03001 	mov	r3, r1
    1bb4:	e1a00004 	mov	r0, r4
    1bb8:	e1a01005 	mov	r1, r5
    1bbc:	e58d6020 	str	r6, [sp, #32]
    1bc0:	e58d7024 	str	r7, [sp, #36]	; 0x24
    1bc4:	eb0006c6 	bl	36e4 <__aeabi_dsub>
    1bc8:	e3a02000 	mov	r2, #0
    1bcc:	e59f32d0 	ldr	r3, [pc, #720]	; 1ea4 <__ieee754_rem_pio2+0x3dc>
    1bd0:	eb0007c8 	bl	3af8 <__aeabi_dmul>
    1bd4:	e1a06000 	mov	r6, r0
    1bd8:	e1a07001 	mov	r7, r1
    1bdc:	eb00093d 	bl	40d8 <__aeabi_d2iz>
    1be0:	eb00078d 	bl	3a1c <__aeabi_i2d>
    1be4:	e1a02000 	mov	r2, r0
    1be8:	e1a03001 	mov	r3, r1
    1bec:	e1a04000 	mov	r4, r0
    1bf0:	e1a05001 	mov	r5, r1
    1bf4:	e1a00006 	mov	r0, r6
    1bf8:	e1a01007 	mov	r1, r7
    1bfc:	e58d4028 	str	r4, [sp, #40]	; 0x28
    1c00:	e58d502c 	str	r5, [sp, #44]	; 0x2c
    1c04:	eb0006b6 	bl	36e4 <__aeabi_dsub>
    1c08:	e3a02000 	mov	r2, #0
    1c0c:	e59f3290 	ldr	r3, [pc, #656]	; 1ea4 <__ieee754_rem_pio2+0x3dc>
    1c10:	eb0007b8 	bl	3af8 <__aeabi_dmul>
    1c14:	e3a02000 	mov	r2, #0
    1c18:	e3a03000 	mov	r3, #0
    1c1c:	e58d0030 	str	r0, [sp, #48]	; 0x30
    1c20:	e58d1034 	str	r1, [sp, #52]	; 0x34
    1c24:	eb00090d 	bl	4060 <__aeabi_dcmpeq>
    1c28:	e3500000 	cmp	r0, #0
    1c2c:	03a06003 	moveq	r6, #3
    1c30:	0a000032 	beq	1d00 <__ieee754_rem_pio2+0x238>
    1c34:	e28d7028 	add	r7, sp, #40	; 0x28
    1c38:	e3a06003 	mov	r6, #3
    1c3c:	e1a00004 	mov	r0, r4
    1c40:	e1a01005 	mov	r1, r5
    1c44:	e3a02000 	mov	r2, #0
    1c48:	e3a03000 	mov	r3, #0
    1c4c:	eb000903 	bl	4060 <__aeabi_dcmpeq>
    1c50:	e3500000 	cmp	r0, #0
    1c54:	e2466001 	sub	r6, r6, #1
    1c58:	0a000028 	beq	1d00 <__ieee754_rem_pio2+0x238>
    1c5c:	e9370003 	ldmdb	r7!, {r0, r1}
    1c60:	eafffff7 	b	1c44 <__ieee754_rem_pio2+0x17c>
    1c64:	e8820030 	stm	r2, {r4, r5}
    1c68:	e3a03000 	mov	r3, #0
    1c6c:	e3a02000 	mov	r2, #0
    1c70:	e5882008 	str	r2, [r8, #8]
    1c74:	e588300c 	str	r3, [r8, #12]
    1c78:	e3a06000 	mov	r6, #0
    1c7c:	e1a00006 	mov	r0, r6
    1c80:	e28dd03c 	add	sp, sp, #60	; 0x3c
    1c84:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
    1c88:	e12fff1e 	bx	lr
    1c8c:	e1a02000 	mov	r2, r0
    1c90:	e1a03001 	mov	r3, r1
    1c94:	eb000692 	bl	36e4 <__aeabi_dsub>
    1c98:	e3a06000 	mov	r6, #0
    1c9c:	e5880008 	str	r0, [r8, #8]
    1ca0:	e588100c 	str	r1, [r8, #12]
    1ca4:	e8880003 	stm	r8, {r0, r1}
    1ca8:	eafffff3 	b	1c7c <__ieee754_rem_pio2+0x1b4>
    1cac:	e28f3f71 	add	r3, pc, #452	; 0x1c4
    1cb0:	e893000c 	ldm	r3, {r2, r3}
    1cb4:	eb00068a 	bl	36e4 <__aeabi_dsub>
    1cb8:	e28f3d07 	add	r3, pc, #448	; 0x1c0
    1cbc:	e893000c 	ldm	r3, {r2, r3}
    1cc0:	e1a06000 	mov	r6, r0
    1cc4:	e1a07001 	mov	r7, r1
    1cc8:	eb000685 	bl	36e4 <__aeabi_dsub>
    1ccc:	e1a02000 	mov	r2, r0
    1cd0:	e1a03001 	mov	r3, r1
    1cd4:	e8880003 	stm	r8, {r0, r1}
    1cd8:	e1a00006 	mov	r0, r6
    1cdc:	e1a01007 	mov	r1, r7
    1ce0:	eb00067f 	bl	36e4 <__aeabi_dsub>
    1ce4:	e28f3f65 	add	r3, pc, #404	; 0x194
    1ce8:	e893000c 	ldm	r3, {r2, r3}
    1cec:	eb00067c 	bl	36e4 <__aeabi_dsub>
    1cf0:	e3a06001 	mov	r6, #1
    1cf4:	e5880008 	str	r0, [r8, #8]
    1cf8:	e588100c 	str	r1, [r8, #12]
    1cfc:	eaffffde 	b	1c7c <__ieee754_rem_pio2+0x1b4>
    1d00:	e3a03002 	mov	r3, #2
    1d04:	e58d3000 	str	r3, [sp]
    1d08:	e59f3198 	ldr	r3, [pc, #408]	; 1ea8 <__ieee754_rem_pio2+0x3e0>
    1d0c:	e28d0020 	add	r0, sp, #32
    1d10:	e58d3004 	str	r3, [sp, #4]
    1d14:	e1a01008 	mov	r1, r8
    1d18:	e1a03006 	mov	r3, r6
    1d1c:	e1a0200a 	mov	r2, r10
    1d20:	eb0001d0 	bl	2468 <__kernel_rem_pio2>
    1d24:	e3590000 	cmp	r9, #0
    1d28:	e1a06000 	mov	r6, r0
    1d2c:	aaffffd2 	bge	1c7c <__ieee754_rem_pio2+0x1b4>
    1d30:	e5982004 	ldr	r2, [r8, #4]
    1d34:	e598300c 	ldr	r3, [r8, #12]
    1d38:	e2822102 	add	r2, r2, #-2147483648	; 0x80000000
    1d3c:	e2833102 	add	r3, r3, #-2147483648	; 0x80000000
    1d40:	e5882004 	str	r2, [r8, #4]
    1d44:	e588300c 	str	r3, [r8, #12]
    1d48:	e2606000 	rsb	r6, r0, #0
    1d4c:	eaffffca 	b	1c7c <__ieee754_rem_pio2+0x1b4>
    1d50:	eb000532 	bl	3220 <fabs>
    1d54:	e28f3f4b 	add	r3, pc, #300	; 0x12c
    1d58:	e893000c 	ldm	r3, {r2, r3}
    1d5c:	e1a04000 	mov	r4, r0
    1d60:	e1a05001 	mov	r5, r1
    1d64:	eb000763 	bl	3af8 <__aeabi_dmul>
    1d68:	e3a02000 	mov	r2, #0
    1d6c:	e59f3138 	ldr	r3, [pc, #312]	; 1eac <__ieee754_rem_pio2+0x3e4>
    1d70:	eb00065c 	bl	36e8 <__adddf3>
    1d74:	eb0008d7 	bl	40d8 <__aeabi_d2iz>
    1d78:	e1a06000 	mov	r6, r0
    1d7c:	eb000726 	bl	3a1c <__aeabi_i2d>
    1d80:	e28f30e0 	add	r3, pc, #224	; 0xe0
    1d84:	e893000c 	ldm	r3, {r2, r3}
    1d88:	e58d0010 	str	r0, [sp, #16]
    1d8c:	e58d1014 	str	r1, [sp, #20]
    1d90:	eb000758 	bl	3af8 <__aeabi_dmul>
    1d94:	e1a02000 	mov	r2, r0
    1d98:	e1a03001 	mov	r3, r1
    1d9c:	e1a00004 	mov	r0, r4
    1da0:	e1a01005 	mov	r1, r5
    1da4:	eb00064e 	bl	36e4 <__aeabi_dsub>
    1da8:	e28f30c0 	add	r3, pc, #192	; 0xc0
    1dac:	e893000c 	ldm	r3, {r2, r3}
    1db0:	e1a0a000 	mov	r10, r0
    1db4:	e1a0b001 	mov	r11, r1
    1db8:	e28d1010 	add	r1, sp, #16
    1dbc:	e8910003 	ldm	r1, {r0, r1}
    1dc0:	eb00074c 	bl	3af8 <__aeabi_dmul>
    1dc4:	e356001f 	cmp	r6, #31
    1dc8:	e58d0008 	str	r0, [sp, #8]
    1dcc:	e58d100c 	str	r1, [sp, #12]
    1dd0:	e1a0000a 	mov	r0, r10
    1dd4:	e1a0100b 	mov	r1, r11
    1dd8:	ca000035 	bgt	1eb4 <__ieee754_rem_pio2+0x3ec>
    1ddc:	e59f30cc 	ldr	r3, [pc, #204]	; 1eb0 <__ieee754_rem_pio2+0x3e8>
    1de0:	e2462001 	sub	r2, r6, #1
    1de4:	e7933102 	ldr	r3, [r3, r2, lsl #2]
    1de8:	e1530007 	cmp	r3, r7
    1dec:	0a000030 	beq	1eb4 <__ieee754_rem_pio2+0x3ec>
    1df0:	e28d3008 	add	r3, sp, #8
    1df4:	e893000c 	ldm	r3, {r2, r3}
    1df8:	eb000639 	bl	36e4 <__aeabi_dsub>
    1dfc:	e1a02000 	mov	r2, r0
    1e00:	e1a03001 	mov	r3, r1
    1e04:	e888000c 	stm	r8, {r2, r3}
    1e08:	e1a05000 	mov	r5, r0
    1e0c:	e1a04001 	mov	r4, r1
    1e10:	e1a02005 	mov	r2, r5
    1e14:	e1a03004 	mov	r3, r4
    1e18:	e1a0000a 	mov	r0, r10
    1e1c:	e1a0100b 	mov	r1, r11
    1e20:	eb00062f 	bl	36e4 <__aeabi_dsub>
    1e24:	e28d3008 	add	r3, sp, #8
    1e28:	e893000c 	ldm	r3, {r2, r3}
    1e2c:	eb00062c 	bl	36e4 <__aeabi_dsub>
    1e30:	e3590000 	cmp	r9, #0
    1e34:	e1a02000 	mov	r2, r0
    1e38:	e1a03001 	mov	r3, r1
    1e3c:	e5882008 	str	r2, [r8, #8]
    1e40:	e588300c 	str	r3, [r8, #12]
    1e44:	aaffff8c 	bge	1c7c <__ieee754_rem_pio2+0x1b4>
    1e48:	e2844102 	add	r4, r4, #-2147483648	; 0x80000000
    1e4c:	e2811102 	add	r1, r1, #-2147483648	; 0x80000000
    1e50:	e5885000 	str	r5, [r8]
    1e54:	e5884004 	str	r4, [r8, #4]
    1e58:	e5880008 	str	r0, [r8, #8]
    1e5c:	e588100c 	str	r1, [r8, #12]
    1e60:	e2666000 	rsb	r6, r6, #0
    1e64:	eaffff84 	b	1c7c <__ieee754_rem_pio2+0x1b4>
    1e68:	54400000 	.word	0x54400000
    1e6c:	3ff921fb 	.word	0x3ff921fb
    1e70:	1a626331 	.word	0x1a626331
    1e74:	3dd0b461 	.word	0x3dd0b461
    1e78:	1a600000 	.word	0x1a600000
    1e7c:	3dd0b461 	.word	0x3dd0b461
    1e80:	2e037073 	.word	0x2e037073
    1e84:	3ba3198a 	.word	0x3ba3198a
    1e88:	6dc9c883 	.word	0x6dc9c883
    1e8c:	3fe45f30 	.word	0x3fe45f30
    1e90:	3fe921fb 	.word	0x3fe921fb
    1e94:	4002d97b 	.word	0x4002d97b
    1e98:	3ff921fb 	.word	0x3ff921fb
    1e9c:	413921fb 	.word	0x413921fb
    1ea0:	7fefffff 	.word	0x7fefffff
    1ea4:	41700000 	.word	0x41700000
    1ea8:	00004de8 	.word	0x00004de8
    1eac:	3fe00000 	.word	0x3fe00000
    1eb0:	00004d68 	.word	0x00004d68
    1eb4:	e28d3008 	add	r3, sp, #8
    1eb8:	e893000c 	ldm	r3, {r2, r3}
    1ebc:	eb000608 	bl	36e4 <__aeabi_dsub>
    1ec0:	e1a07a47 	asr	r7, r7, #20
    1ec4:	e1a04001 	mov	r4, r1
    1ec8:	e1a01081 	lsl	r1, r1, #1
    1ecc:	e1a05000 	mov	r5, r0
    1ed0:	e0471aa1 	sub	r1, r7, r1, lsr #21
    1ed4:	e1a02005 	mov	r2, r5
    1ed8:	e1a03004 	mov	r3, r4
    1edc:	e3510010 	cmp	r1, #16
    1ee0:	e888000c 	stm	r8, {r2, r3}
    1ee4:	daffffc9 	ble	1e10 <__ieee754_rem_pio2+0x348>
    1ee8:	e28f3f82 	add	r3, pc, #520	; 0x208
    1eec:	e893000c 	ldm	r3, {r2, r3}
    1ef0:	e28d1010 	add	r1, sp, #16
    1ef4:	e8910003 	ldm	r1, {r0, r1}
    1ef8:	eb0006fe 	bl	3af8 <__aeabi_dmul>
    1efc:	e1a04000 	mov	r4, r0
    1f00:	e1a05001 	mov	r5, r1
    1f04:	e1a02004 	mov	r2, r4
    1f08:	e1a03005 	mov	r3, r5
    1f0c:	e1a0000a 	mov	r0, r10
    1f10:	e1a0100b 	mov	r1, r11
    1f14:	eb0005f2 	bl	36e4 <__aeabi_dsub>
    1f18:	e58d0018 	str	r0, [sp, #24]
    1f1c:	e58d101c 	str	r1, [sp, #28]
    1f20:	e28d3018 	add	r3, sp, #24
    1f24:	e893000c 	ldm	r3, {r2, r3}
    1f28:	e1a0000a 	mov	r0, r10
    1f2c:	e1a0100b 	mov	r1, r11
    1f30:	eb0005eb 	bl	36e4 <__aeabi_dsub>
    1f34:	e1a02004 	mov	r2, r4
    1f38:	e1a03005 	mov	r3, r5
    1f3c:	eb0005e8 	bl	36e4 <__aeabi_dsub>
    1f40:	e28f3f6e 	add	r3, pc, #440	; 0x1b8
    1f44:	e893000c 	ldm	r3, {r2, r3}
    1f48:	e1a04000 	mov	r4, r0
    1f4c:	e1a05001 	mov	r5, r1
    1f50:	e28d1010 	add	r1, sp, #16
    1f54:	e8910003 	ldm	r1, {r0, r1}
    1f58:	eb0006e6 	bl	3af8 <__aeabi_dmul>
    1f5c:	e1a02004 	mov	r2, r4
    1f60:	e1a03005 	mov	r3, r5
    1f64:	eb0005de 	bl	36e4 <__aeabi_dsub>
    1f68:	e58d0008 	str	r0, [sp, #8]
    1f6c:	e58d100c 	str	r1, [sp, #12]
    1f70:	e28d3008 	add	r3, sp, #8
    1f74:	e893000c 	ldm	r3, {r2, r3}
    1f78:	e28d1018 	add	r1, sp, #24
    1f7c:	e8910003 	ldm	r1, {r0, r1}
    1f80:	eb0005d7 	bl	36e4 <__aeabi_dsub>
    1f84:	e1a04001 	mov	r4, r1
    1f88:	e1a01081 	lsl	r1, r1, #1
    1f8c:	e1a05000 	mov	r5, r0
    1f90:	e0477aa1 	sub	r7, r7, r1, lsr #21
    1f94:	e1a02005 	mov	r2, r5
    1f98:	e1a03004 	mov	r3, r4
    1f9c:	e3570031 	cmp	r7, #49	; 0x31
    1fa0:	e888000c 	stm	r8, {r2, r3}
    1fa4:	da00004f 	ble	20e8 <__ieee754_rem_pio2+0x620>
    1fa8:	e3a0242e 	mov	r2, #771751936	; 0x2e000000
    1fac:	e59f3164 	ldr	r3, [pc, #356]	; 2118 <__ieee754_rem_pio2+0x650>
    1fb0:	e28d1010 	add	r1, sp, #16
    1fb4:	e8910003 	ldm	r1, {r0, r1}
    1fb8:	eb0006ce 	bl	3af8 <__aeabi_dmul>
    1fbc:	e1a04000 	mov	r4, r0
    1fc0:	e1a05001 	mov	r5, r1
    1fc4:	e1a02004 	mov	r2, r4
    1fc8:	e1a03005 	mov	r3, r5
    1fcc:	e28d1018 	add	r1, sp, #24
    1fd0:	e8910003 	ldm	r1, {r0, r1}
    1fd4:	eb0005c2 	bl	36e4 <__aeabi_dsub>
    1fd8:	e1a0a000 	mov	r10, r0
    1fdc:	e1a0b001 	mov	r11, r1
    1fe0:	e1a0200a 	mov	r2, r10
    1fe4:	e1a0300b 	mov	r3, r11
    1fe8:	e28d1018 	add	r1, sp, #24
    1fec:	e8910003 	ldm	r1, {r0, r1}
    1ff0:	eb0005bb 	bl	36e4 <__aeabi_dsub>
    1ff4:	e1a02004 	mov	r2, r4
    1ff8:	e1a03005 	mov	r3, r5
    1ffc:	eb0005b8 	bl	36e4 <__aeabi_dsub>
    2000:	e28f3c01 	add	r3, pc, #256	; 0x100
    2004:	e893000c 	ldm	r3, {r2, r3}
    2008:	e1a04000 	mov	r4, r0
    200c:	e1a05001 	mov	r5, r1
    2010:	e28d1010 	add	r1, sp, #16
    2014:	e8910003 	ldm	r1, {r0, r1}
    2018:	eb0006b6 	bl	3af8 <__aeabi_dmul>
    201c:	e1a02004 	mov	r2, r4
    2020:	e1a03005 	mov	r3, r5
    2024:	eb0005ae 	bl	36e4 <__aeabi_dsub>
    2028:	e58d0008 	str	r0, [sp, #8]
    202c:	e58d100c 	str	r1, [sp, #12]
    2030:	e1a0000a 	mov	r0, r10
    2034:	e1a0100b 	mov	r1, r11
    2038:	eaffff6c 	b	1df0 <__ieee754_rem_pio2+0x328>
    203c:	eb0005a9 	bl	36e8 <__adddf3>
    2040:	e59f30d4 	ldr	r3, [pc, #212]	; 211c <__ieee754_rem_pio2+0x654>
    2044:	e1570003 	cmp	r7, r3
    2048:	e1a0a000 	mov	r10, r0
    204c:	e1a0b001 	mov	r11, r1
    2050:	0a00000f 	beq	2094 <__ieee754_rem_pio2+0x5cc>
    2054:	e28f30b4 	add	r3, pc, #180	; 0xb4
    2058:	e893000c 	ldm	r3, {r2, r3}
    205c:	eb0005a1 	bl	36e8 <__adddf3>
    2060:	e1a02000 	mov	r2, r0
    2064:	e1a03001 	mov	r3, r1
    2068:	e8880003 	stm	r8, {r0, r1}
    206c:	e1a0000a 	mov	r0, r10
    2070:	e1a0100b 	mov	r1, r11
    2074:	eb00059a 	bl	36e4 <__aeabi_dsub>
    2078:	e28f3090 	add	r3, pc, #144	; 0x90
    207c:	e893000c 	ldm	r3, {r2, r3}
    2080:	eb000598 	bl	36e8 <__adddf3>
    2084:	e3e06000 	mvn	r6, #0
    2088:	e5880008 	str	r0, [r8, #8]
    208c:	e588100c 	str	r1, [r8, #12]
    2090:	eafffef9 	b	1c7c <__ieee754_rem_pio2+0x1b4>
    2094:	e28f305c 	add	r3, pc, #92	; 0x5c
    2098:	e893000c 	ldm	r3, {r2, r3}
    209c:	eb000591 	bl	36e8 <__adddf3>
    20a0:	e28f3058 	add	r3, pc, #88	; 0x58
    20a4:	e893000c 	ldm	r3, {r2, r3}
    20a8:	e1a06000 	mov	r6, r0
    20ac:	e1a07001 	mov	r7, r1
    20b0:	eb00058c 	bl	36e8 <__adddf3>
    20b4:	e1a02000 	mov	r2, r0
    20b8:	e1a03001 	mov	r3, r1
    20bc:	e8880003 	stm	r8, {r0, r1}
    20c0:	e1a00006 	mov	r0, r6
    20c4:	e1a01007 	mov	r1, r7
    20c8:	eb000585 	bl	36e4 <__aeabi_dsub>
    20cc:	e28f302c 	add	r3, pc, #44	; 0x2c
    20d0:	e893000c 	ldm	r3, {r2, r3}
    20d4:	eb000583 	bl	36e8 <__adddf3>
    20d8:	e3e06000 	mvn	r6, #0
    20dc:	e5880008 	str	r0, [r8, #8]
    20e0:	e588100c 	str	r1, [r8, #12]
    20e4:	eafffee4 	b	1c7c <__ieee754_rem_pio2+0x1b4>
    20e8:	e28db018 	add	r11, sp, #24
    20ec:	e89b0c00 	ldm	r11, {r10, r11}
    20f0:	eaffff46 	b	1e10 <__ieee754_rem_pio2+0x348>
    20f4:	e1a00000 	nop			; (mov r0, r0)
    20f8:	1a600000 	.word	0x1a600000
    20fc:	3dd0b461 	.word	0x3dd0b461
    2100:	2e037073 	.word	0x2e037073
    2104:	3ba3198a 	.word	0x3ba3198a
    2108:	252049c1 	.word	0x252049c1
    210c:	397b839a 	.word	0x397b839a
    2110:	1a626331 	.word	0x1a626331
    2114:	3dd0b461 	.word	0x3dd0b461
    2118:	3ba3198a 	.word	0x3ba3198a
    211c:	3ff921fb 	.word	0x3ff921fb

00002120 <__kernel_cos>:
    2120:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
    2124:	e3c19102 	bic	r9, r1, #-2147483648	; 0x80000000
    2128:	e35905f9 	cmp	r9, #1044381696	; 0x3e400000
    212c:	e24dd014 	sub	sp, sp, #20
    2130:	e1a06000 	mov	r6, r0
    2134:	e1a07001 	mov	r7, r1
    2138:	e1a04000 	mov	r4, r0
    213c:	e1a05001 	mov	r5, r1
    2140:	e1a0a002 	mov	r10, r2
    2144:	e1a0b003 	mov	r11, r3
    2148:	aa00004d 	bge	2284 <__kernel_cos+0x164>
    214c:	eb0007e1 	bl	40d8 <__aeabi_d2iz>
    2150:	e3500000 	cmp	r0, #0
    2154:	0a0000ae 	beq	2414 <__kernel_cos+0x2f4>
    2158:	e1a02006 	mov	r2, r6
    215c:	e1a03007 	mov	r3, r7
    2160:	e1a00006 	mov	r0, r6
    2164:	e1a01007 	mov	r1, r7
    2168:	eb000662 	bl	3af8 <__aeabi_dmul>
    216c:	e28f3fab 	add	r3, pc, #684	; 0x2ac
    2170:	e893000c 	ldm	r3, {r2, r3}
    2174:	e1a04000 	mov	r4, r0
    2178:	e1a05001 	mov	r5, r1
    217c:	eb00065d 	bl	3af8 <__aeabi_dmul>
    2180:	e28f3e2a 	add	r3, pc, #672	; 0x2a0
    2184:	e893000c 	ldm	r3, {r2, r3}
    2188:	eb000556 	bl	36e8 <__adddf3>
    218c:	e1a02004 	mov	r2, r4
    2190:	e1a03005 	mov	r3, r5
    2194:	eb000657 	bl	3af8 <__aeabi_dmul>
    2198:	e28f3e29 	add	r3, pc, #656	; 0x290
    219c:	e893000c 	ldm	r3, {r2, r3}
    21a0:	eb00054f 	bl	36e4 <__aeabi_dsub>
    21a4:	e1a02004 	mov	r2, r4
    21a8:	e1a03005 	mov	r3, r5
    21ac:	eb000651 	bl	3af8 <__aeabi_dmul>
    21b0:	e28f3d0a 	add	r3, pc, #640	; 0x280
    21b4:	e893000c 	ldm	r3, {r2, r3}
    21b8:	eb00054a 	bl	36e8 <__adddf3>
    21bc:	e1a02004 	mov	r2, r4
    21c0:	e1a03005 	mov	r3, r5
    21c4:	eb00064b 	bl	3af8 <__aeabi_dmul>
    21c8:	e28f3e27 	add	r3, pc, #624	; 0x270
    21cc:	e893000c 	ldm	r3, {r2, r3}
    21d0:	eb000543 	bl	36e4 <__aeabi_dsub>
    21d4:	e1a02004 	mov	r2, r4
    21d8:	e1a03005 	mov	r3, r5
    21dc:	eb000645 	bl	3af8 <__aeabi_dmul>
    21e0:	e28f3e26 	add	r3, pc, #608	; 0x260
    21e4:	e893000c 	ldm	r3, {r2, r3}
    21e8:	eb00053e 	bl	36e8 <__adddf3>
    21ec:	e1a02004 	mov	r2, r4
    21f0:	e1a03005 	mov	r3, r5
    21f4:	eb00063f 	bl	3af8 <__aeabi_dmul>
    21f8:	e88d0003 	stm	sp, {r0, r1}
    21fc:	e1a00004 	mov	r0, r4
    2200:	e1a01005 	mov	r1, r5
    2204:	e3a02000 	mov	r2, #0
    2208:	e59f3240 	ldr	r3, [pc, #576]	; 2450 <__kernel_cos+0x330>
    220c:	eb000639 	bl	3af8 <__aeabi_dmul>
    2210:	e89d000c 	ldm	sp, {r2, r3}
    2214:	e1a08000 	mov	r8, r0
    2218:	e1a09001 	mov	r9, r1
    221c:	e1a00004 	mov	r0, r4
    2220:	e1a01005 	mov	r1, r5
    2224:	eb000633 	bl	3af8 <__aeabi_dmul>
    2228:	e1a0200a 	mov	r2, r10
    222c:	e1a04000 	mov	r4, r0
    2230:	e1a05001 	mov	r5, r1
    2234:	e1a0300b 	mov	r3, r11
    2238:	e1a00006 	mov	r0, r6
    223c:	e1a01007 	mov	r1, r7
    2240:	eb00062c 	bl	3af8 <__aeabi_dmul>
    2244:	e1a02000 	mov	r2, r0
    2248:	e1a03001 	mov	r3, r1
    224c:	e1a00004 	mov	r0, r4
    2250:	e1a01005 	mov	r1, r5
    2254:	eb000522 	bl	36e4 <__aeabi_dsub>
    2258:	e1a02000 	mov	r2, r0
    225c:	e1a03001 	mov	r3, r1
    2260:	e1a00008 	mov	r0, r8
    2264:	e1a01009 	mov	r1, r9
    2268:	eb00051d 	bl	36e4 <__aeabi_dsub>
    226c:	e1a02000 	mov	r2, r0
    2270:	e1a03001 	mov	r3, r1
    2274:	e3a00000 	mov	r0, #0
    2278:	e59f11d4 	ldr	r1, [pc, #468]	; 2454 <__kernel_cos+0x334>
    227c:	eb000518 	bl	36e4 <__aeabi_dsub>
    2280:	ea00005a 	b	23f0 <__kernel_cos+0x2d0>
    2284:	e1a02000 	mov	r2, r0
    2288:	e1a03001 	mov	r3, r1
    228c:	eb000619 	bl	3af8 <__aeabi_dmul>
    2290:	e28f3f62 	add	r3, pc, #392	; 0x188
    2294:	e893000c 	ldm	r3, {r2, r3}
    2298:	e1a04000 	mov	r4, r0
    229c:	e1a05001 	mov	r5, r1
    22a0:	eb000614 	bl	3af8 <__aeabi_dmul>
    22a4:	e28f3f5f 	add	r3, pc, #380	; 0x17c
    22a8:	e893000c 	ldm	r3, {r2, r3}
    22ac:	eb00050d 	bl	36e8 <__adddf3>
    22b0:	e1a02004 	mov	r2, r4
    22b4:	e1a03005 	mov	r3, r5
    22b8:	eb00060e 	bl	3af8 <__aeabi_dmul>
    22bc:	e28f3f5b 	add	r3, pc, #364	; 0x16c
    22c0:	e893000c 	ldm	r3, {r2, r3}
    22c4:	eb000506 	bl	36e4 <__aeabi_dsub>
    22c8:	e1a02004 	mov	r2, r4
    22cc:	e1a03005 	mov	r3, r5
    22d0:	eb000608 	bl	3af8 <__aeabi_dmul>
    22d4:	e28f3f57 	add	r3, pc, #348	; 0x15c
    22d8:	e893000c 	ldm	r3, {r2, r3}
    22dc:	eb000501 	bl	36e8 <__adddf3>
    22e0:	e1a02004 	mov	r2, r4
    22e4:	e1a03005 	mov	r3, r5
    22e8:	eb000602 	bl	3af8 <__aeabi_dmul>
    22ec:	e28f3f53 	add	r3, pc, #332	; 0x14c
    22f0:	e893000c 	ldm	r3, {r2, r3}
    22f4:	eb0004fa 	bl	36e4 <__aeabi_dsub>
    22f8:	e1a02004 	mov	r2, r4
    22fc:	e1a03005 	mov	r3, r5
    2300:	eb0005fc 	bl	3af8 <__aeabi_dmul>
    2304:	e28f3f4f 	add	r3, pc, #316	; 0x13c
    2308:	e893000c 	ldm	r3, {r2, r3}
    230c:	eb0004f5 	bl	36e8 <__adddf3>
    2310:	e1a03005 	mov	r3, r5
    2314:	e1a02004 	mov	r2, r4
    2318:	eb0005f6 	bl	3af8 <__aeabi_dmul>
    231c:	e59f3134 	ldr	r3, [pc, #308]	; 2458 <__kernel_cos+0x338>
    2320:	e1590003 	cmp	r9, r3
    2324:	e88d0003 	stm	sp, {r0, r1}
    2328:	daffffb3 	ble	21fc <__kernel_cos+0xdc>
    232c:	e59f3128 	ldr	r3, [pc, #296]	; 245c <__kernel_cos+0x33c>
    2330:	e1590003 	cmp	r9, r3
    2334:	e3a02000 	mov	r2, #0
    2338:	ca00002f 	bgt	23fc <__kernel_cos+0x2dc>
    233c:	e2493602 	sub	r3, r9, #2097152	; 0x200000
    2340:	e3a02000 	mov	r2, #0
    2344:	e3a00000 	mov	r0, #0
    2348:	e59f1104 	ldr	r1, [pc, #260]	; 2454 <__kernel_cos+0x334>
    234c:	e1a08002 	mov	r8, r2
    2350:	e1a09003 	mov	r9, r3
    2354:	eb0004e2 	bl	36e4 <__aeabi_dsub>
    2358:	e58d0008 	str	r0, [sp, #8]
    235c:	e58d100c 	str	r1, [sp, #12]
    2360:	e1a00004 	mov	r0, r4
    2364:	e1a01005 	mov	r1, r5
    2368:	e3a02000 	mov	r2, #0
    236c:	e59f30dc 	ldr	r3, [pc, #220]	; 2450 <__kernel_cos+0x330>
    2370:	eb0005e0 	bl	3af8 <__aeabi_dmul>
    2374:	e1a02008 	mov	r2, r8
    2378:	e1a03009 	mov	r3, r9
    237c:	eb0004d8 	bl	36e4 <__aeabi_dsub>
    2380:	e89d000c 	ldm	sp, {r2, r3}
    2384:	e1a08000 	mov	r8, r0
    2388:	e1a09001 	mov	r9, r1
    238c:	e1a00004 	mov	r0, r4
    2390:	e1a01005 	mov	r1, r5
    2394:	eb0005d7 	bl	3af8 <__aeabi_dmul>
    2398:	e1a0200a 	mov	r2, r10
    239c:	e1a04000 	mov	r4, r0
    23a0:	e1a05001 	mov	r5, r1
    23a4:	e1a0300b 	mov	r3, r11
    23a8:	e1a00006 	mov	r0, r6
    23ac:	e1a01007 	mov	r1, r7
    23b0:	eb0005d0 	bl	3af8 <__aeabi_dmul>
    23b4:	e1a02000 	mov	r2, r0
    23b8:	e1a03001 	mov	r3, r1
    23bc:	e1a00004 	mov	r0, r4
    23c0:	e1a01005 	mov	r1, r5
    23c4:	eb0004c6 	bl	36e4 <__aeabi_dsub>
    23c8:	e1a02000 	mov	r2, r0
    23cc:	e1a03001 	mov	r3, r1
    23d0:	e1a00008 	mov	r0, r8
    23d4:	e1a01009 	mov	r1, r9
    23d8:	eb0004c1 	bl	36e4 <__aeabi_dsub>
    23dc:	e1a02000 	mov	r2, r0
    23e0:	e1a03001 	mov	r3, r1
    23e4:	e28d1008 	add	r1, sp, #8
    23e8:	e8910003 	ldm	r1, {r0, r1}
    23ec:	eb0004bc 	bl	36e4 <__aeabi_dsub>
    23f0:	e28dd014 	add	sp, sp, #20
    23f4:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
    23f8:	e12fff1e 	bx	lr
    23fc:	e59f305c 	ldr	r3, [pc, #92]	; 2460 <__kernel_cos+0x340>
    2400:	e3a08000 	mov	r8, #0
    2404:	e58d2008 	str	r2, [sp, #8]
    2408:	e58d300c 	str	r3, [sp, #12]
    240c:	e59f9050 	ldr	r9, [pc, #80]	; 2464 <__kernel_cos+0x344>
    2410:	eaffffd2 	b	2360 <__kernel_cos+0x240>
    2414:	e3a00000 	mov	r0, #0
    2418:	e59f1034 	ldr	r1, [pc, #52]	; 2454 <__kernel_cos+0x334>
    241c:	eafffff3 	b	23f0 <__kernel_cos+0x2d0>
    2420:	be8838d4 	.word	0xbe8838d4
    2424:	bda8fae9 	.word	0xbda8fae9
    2428:	bdb4b1c4 	.word	0xbdb4b1c4
    242c:	3e21ee9e 	.word	0x3e21ee9e
    2430:	809c52ad 	.word	0x809c52ad
    2434:	3e927e4f 	.word	0x3e927e4f
    2438:	19cb1590 	.word	0x19cb1590
    243c:	3efa01a0 	.word	0x3efa01a0
    2440:	16c15177 	.word	0x16c15177
    2444:	3f56c16c 	.word	0x3f56c16c
    2448:	5555554c 	.word	0x5555554c
    244c:	3fa55555 	.word	0x3fa55555
    2450:	3fe00000 	.word	0x3fe00000
    2454:	3ff00000 	.word	0x3ff00000
    2458:	3fd33332 	.word	0x3fd33332
    245c:	3fe90000 	.word	0x3fe90000
    2460:	3fe70000 	.word	0x3fe70000
    2464:	3fd20000 	.word	0x3fd20000

00002468 <__kernel_rem_pio2>:
    2468:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
    246c:	e59feb6c 	ldr	lr, [pc, #2924]	; 2fe0 <__kernel_rem_pio2+0xb78>
    2470:	e242c003 	sub	r12, r2, #3
    2474:	e0ce4e9c 	smull	r4, lr, r12, lr
    2478:	e1a0cfcc 	asr	r12, r12, #31
    247c:	e06cc14e 	rsb	r12, r12, lr, asr #2
    2480:	e24ddf99 	sub	sp, sp, #612	; 0x264
    2484:	e1cccfcc 	bic	r12, r12, r12, asr #31
    2488:	e58dc028 	str	r12, [sp, #40]	; 0x28
    248c:	e1a0b003 	mov	r11, r3
    2490:	e59dc288 	ldr	r12, [sp, #648]	; 0x288
    2494:	e59f3b48 	ldr	r3, [pc, #2888]	; 2fe4 <__kernel_rem_pio2+0xb7c>
    2498:	e793310c 	ldr	r3, [r3, r12, lsl #2]
    249c:	e59dc028 	ldr	r12, [sp, #40]	; 0x28
    24a0:	e58d3020 	str	r3, [sp, #32]
    24a4:	e59de020 	ldr	lr, [sp, #32]
    24a8:	e1e0300c 	mvn	r3, r12
    24ac:	e24b4001 	sub	r4, r11, #1
    24b0:	e0833083 	add	r3, r3, r3, lsl #1
    24b4:	e58d0010 	str	r0, [sp, #16]
    24b8:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
    24bc:	e0823183 	add	r3, r2, r3, lsl #3
    24c0:	e094c00e 	adds	r12, r4, lr
    24c4:	e58d400c 	str	r4, [sp, #12]
    24c8:	e58d101c 	str	r1, [sp, #28]
    24cc:	e58d3018 	str	r3, [sp, #24]
    24d0:	e0646000 	rsb	r6, r4, r0
    24d4:	4a000012 	bmi	2524 <__kernel_rem_pio2+0xbc>
    24d8:	e086c00c 	add	r12, r6, r12
    24dc:	e28c4001 	add	r4, r12, #1
    24e0:	e59dc28c 	ldr	r12, [sp, #652]	; 0x28c
    24e4:	e28d8080 	add	r8, sp, #128	; 0x80
    24e8:	e08c5106 	add	r5, r12, r6, lsl #2
    24ec:	e3a07000 	mov	r7, #0
    24f0:	ea000006 	b	2510 <__kernel_rem_pio2+0xa8>
    24f4:	e7950007 	ldr	r0, [r5, r7]
    24f8:	eb000547 	bl	3a1c <__aeabi_i2d>
    24fc:	e2866001 	add	r6, r6, #1
    2500:	e1560004 	cmp	r6, r4
    2504:	e8a80003 	stmia	r8!, {r0, r1}
    2508:	e2877004 	add	r7, r7, #4
    250c:	0a000004 	beq	2524 <__kernel_rem_pio2+0xbc>
    2510:	e3560000 	cmp	r6, #0
    2514:	aafffff6 	bge	24f4 <__kernel_rem_pio2+0x8c>
    2518:	e3a00000 	mov	r0, #0
    251c:	e3a01000 	mov	r1, #0
    2520:	eafffff5 	b	24fc <__kernel_rem_pio2+0x94>
    2524:	e59d4020 	ldr	r4, [sp, #32]
    2528:	e3540000 	cmp	r4, #0
    252c:	ba000020 	blt	25b4 <__kernel_rem_pio2+0x14c>
    2530:	e59d4020 	ldr	r4, [sp, #32]
    2534:	e28dcf72 	add	r12, sp, #456	; 0x1c8
    2538:	e08cc184 	add	r12, r12, r4, lsl #3
    253c:	e58dc004 	str	r12, [sp, #4]
    2540:	e28dad07 	add	r10, sp, #448	; 0x1c0
    2544:	e1a0800b 	mov	r8, r11
    2548:	e59dc00c 	ldr	r12, [sp, #12]
    254c:	e35c0000 	cmp	r12, #0
    2550:	ba000130 	blt	2a18 <__kernel_rem_pio2+0x5b0>
    2554:	e28de080 	add	lr, sp, #128	; 0x80
    2558:	e59d9010 	ldr	r9, [sp, #16]
    255c:	e08e7188 	add	r7, lr, r8, lsl #3
    2560:	e3a04000 	mov	r4, #0
    2564:	e3a05000 	mov	r5, #0
    2568:	e3a06000 	mov	r6, #0
    256c:	e937000c 	ldmdb	r7!, {r2, r3}
    2570:	e8b90003 	ldm	r9!, {r0, r1}
    2574:	eb00055f 	bl	3af8 <__aeabi_dmul>
    2578:	e1a02000 	mov	r2, r0
    257c:	e1a03001 	mov	r3, r1
    2580:	e1a00004 	mov	r0, r4
    2584:	e1a01005 	mov	r1, r5
    2588:	eb000456 	bl	36e8 <__adddf3>
    258c:	e2866001 	add	r6, r6, #1
    2590:	e156000b 	cmp	r6, r11
    2594:	e1a04000 	mov	r4, r0
    2598:	e1a05001 	mov	r5, r1
    259c:	1afffff2 	bne	256c <__kernel_rem_pio2+0x104>
    25a0:	e8aa0030 	stmia	r10!, {r4, r5}
    25a4:	e59d4004 	ldr	r4, [sp, #4]
    25a8:	e15a0004 	cmp	r10, r4
    25ac:	e2888001 	add	r8, r8, #1
    25b0:	1affffe4 	bne	2548 <__kernel_rem_pio2+0xe0>
    25b4:	e59dc020 	ldr	r12, [sp, #32]
    25b8:	e28d4030 	add	r4, sp, #48	; 0x30
    25bc:	e084410c 	add	r4, r4, r12, lsl #2
    25c0:	e58d402c 	str	r4, [sp, #44]	; 0x2c
    25c4:	e58dc004 	str	r12, [sp, #4]
    25c8:	e59d4004 	ldr	r4, [sp, #4]
    25cc:	e28dce26 	add	r12, sp, #608	; 0x260
    25d0:	e1a0a184 	lsl	r10, r4, #3
    25d4:	e08c300a 	add	r3, r12, r10
    25d8:	e3540000 	cmp	r4, #0
    25dc:	e24350a0 	sub	r5, r3, #160	; 0xa0
    25e0:	e8950030 	ldm	r5, {r4, r5}
    25e4:	da00001f 	ble	2668 <__kernel_rem_pio2+0x200>
    25e8:	e59dc004 	ldr	r12, [sp, #4]
    25ec:	e28d802c 	add	r8, sp, #44	; 0x2c
    25f0:	e28ded07 	add	lr, sp, #448	; 0x1c0
    25f4:	e08ea00a 	add	r10, lr, r10
    25f8:	e088910c 	add	r9, r8, r12, lsl #2
    25fc:	e3a02000 	mov	r2, #0
    2600:	e59f39e0 	ldr	r3, [pc, #2528]	; 2fe8 <__kernel_rem_pio2+0xb80>
    2604:	e1a00004 	mov	r0, r4
    2608:	e1a01005 	mov	r1, r5
    260c:	eb000539 	bl	3af8 <__aeabi_dmul>
    2610:	eb0006b0 	bl	40d8 <__aeabi_d2iz>
    2614:	eb000500 	bl	3a1c <__aeabi_i2d>
    2618:	e3a02000 	mov	r2, #0
    261c:	e59f39c8 	ldr	r3, [pc, #2504]	; 2fec <__kernel_rem_pio2+0xb84>
    2620:	e1a06000 	mov	r6, r0
    2624:	e1a07001 	mov	r7, r1
    2628:	eb000532 	bl	3af8 <__aeabi_dmul>
    262c:	e1a02000 	mov	r2, r0
    2630:	e1a03001 	mov	r3, r1
    2634:	e1a00004 	mov	r0, r4
    2638:	e1a01005 	mov	r1, r5
    263c:	eb000428 	bl	36e4 <__aeabi_dsub>
    2640:	eb0006a4 	bl	40d8 <__aeabi_d2iz>
    2644:	e1a02006 	mov	r2, r6
    2648:	e5a80004 	str	r0, [r8, #4]!
    264c:	e1a03007 	mov	r3, r7
    2650:	e93a0003 	ldmdb	r10!, {r0, r1}
    2654:	eb000423 	bl	36e8 <__adddf3>
    2658:	e1580009 	cmp	r8, r9
    265c:	e1a04000 	mov	r4, r0
    2660:	e1a05001 	mov	r5, r1
    2664:	1affffe4 	bne	25fc <__kernel_rem_pio2+0x194>
    2668:	e59d2018 	ldr	r2, [sp, #24]
    266c:	e1a00004 	mov	r0, r4
    2670:	e1a01005 	mov	r1, r5
    2674:	eb000357 	bl	33d8 <scalbn>
    2678:	e3a02000 	mov	r2, #0
    267c:	e3a035ff 	mov	r3, #1069547520	; 0x3fc00000
    2680:	e1a04000 	mov	r4, r0
    2684:	e1a05001 	mov	r5, r1
    2688:	eb00051a 	bl	3af8 <__aeabi_dmul>
    268c:	eb0002e9 	bl	3238 <floor>
    2690:	e3a02000 	mov	r2, #0
    2694:	e59f3954 	ldr	r3, [pc, #2388]	; 2ff0 <__kernel_rem_pio2+0xb88>
    2698:	eb000516 	bl	3af8 <__aeabi_dmul>
    269c:	e1a02000 	mov	r2, r0
    26a0:	e1a03001 	mov	r3, r1
    26a4:	e1a00004 	mov	r0, r4
    26a8:	e1a01005 	mov	r1, r5
    26ac:	eb00040c 	bl	36e4 <__aeabi_dsub>
    26b0:	e1a04000 	mov	r4, r0
    26b4:	e1a05001 	mov	r5, r1
    26b8:	eb000686 	bl	40d8 <__aeabi_d2iz>
    26bc:	e1a08000 	mov	r8, r0
    26c0:	eb0004d5 	bl	3a1c <__aeabi_i2d>
    26c4:	e1a02000 	mov	r2, r0
    26c8:	e1a03001 	mov	r3, r1
    26cc:	e1a00004 	mov	r0, r4
    26d0:	e1a01005 	mov	r1, r5
    26d4:	eb000402 	bl	36e4 <__aeabi_dsub>
    26d8:	e59d4018 	ldr	r4, [sp, #24]
    26dc:	e3540000 	cmp	r4, #0
    26e0:	e1a06000 	mov	r6, r0
    26e4:	e1a07001 	mov	r7, r1
    26e8:	da0000ad 	ble	29a4 <__kernel_rem_pio2+0x53c>
    26ec:	e59dc004 	ldr	r12, [sp, #4]
    26f0:	e28dee26 	add	lr, sp, #608	; 0x260
    26f4:	e24c2001 	sub	r2, r12, #1
    26f8:	e08e2102 	add	r2, lr, r2, lsl #2
    26fc:	e5120230 	ldr	r0, [r2, #-560]	; 0xfffffdd0
    2700:	e2643018 	rsb	r3, r4, #24
    2704:	e1a01350 	asr	r1, r0, r3
    2708:	e0403311 	sub	r3, r0, r1, lsl r3
    270c:	e2645017 	rsb	r5, r4, #23
    2710:	e1a05553 	asr	r5, r3, r5
    2714:	e5023230 	str	r3, [r2, #-560]	; 0xfffffdd0
    2718:	e0888001 	add	r8, r8, r1
    271c:	e3550000 	cmp	r5, #0
    2720:	da000027 	ble	27c4 <__kernel_rem_pio2+0x35c>
    2724:	e59d4004 	ldr	r4, [sp, #4]
    2728:	e3540000 	cmp	r4, #0
    272c:	e2888001 	add	r8, r8, #1
    2730:	da0000b6 	ble	2a10 <__kernel_rem_pio2+0x5a8>
    2734:	e28d3030 	add	r3, sp, #48	; 0x30
    2738:	e0830104 	add	r0, r3, r4, lsl #2
    273c:	e3a04000 	mov	r4, #0
    2740:	ea000005 	b	275c <__kernel_rem_pio2+0x2f4>
    2744:	e3520000 	cmp	r2, #0
    2748:	12622401 	rsbne	r2, r2, #16777216	; 0x1000000
    274c:	15032004 	strne	r2, [r3, #-4]
    2750:	13a04001 	movne	r4, #1
    2754:	e1530000 	cmp	r3, r0
    2758:	0a000008 	beq	2780 <__kernel_rem_pio2+0x318>
    275c:	e3540000 	cmp	r4, #0
    2760:	e4932004 	ldr	r2, [r3], #4
    2764:	0afffff6 	beq	2744 <__kernel_rem_pio2+0x2dc>
    2768:	e3e014ff 	mvn	r1, #-16777216	; 0xff000000
    276c:	e0621001 	rsb	r1, r2, r1
    2770:	e1530000 	cmp	r3, r0
    2774:	e5031004 	str	r1, [r3, #-4]
    2778:	e3a04001 	mov	r4, #1
    277c:	1afffff6 	bne	275c <__kernel_rem_pio2+0x2f4>
    2780:	e59dc018 	ldr	r12, [sp, #24]
    2784:	e35c0000 	cmp	r12, #0
    2788:	da00000b 	ble	27bc <__kernel_rem_pio2+0x354>
    278c:	e35c0001 	cmp	r12, #1
    2790:	0a00008a 	beq	29c0 <__kernel_rem_pio2+0x558>
    2794:	e35c0002 	cmp	r12, #2
    2798:	1a000007 	bne	27bc <__kernel_rem_pio2+0x354>
    279c:	e59dc004 	ldr	r12, [sp, #4]
    27a0:	e28dee26 	add	lr, sp, #608	; 0x260
    27a4:	e24c3001 	sub	r3, r12, #1
    27a8:	e08e3103 	add	r3, lr, r3, lsl #2
    27ac:	e5132230 	ldr	r2, [r3, #-560]	; 0xfffffdd0
    27b0:	e3c224ff 	bic	r2, r2, #-16777216	; 0xff000000
    27b4:	e3c22503 	bic	r2, r2, #12582912	; 0xc00000
    27b8:	e5032230 	str	r2, [r3, #-560]	; 0xfffffdd0
    27bc:	e3550002 	cmp	r5, #2
    27c0:	0a000062 	beq	2950 <__kernel_rem_pio2+0x4e8>
    27c4:	e1a00006 	mov	r0, r6
    27c8:	e1a01007 	mov	r1, r7
    27cc:	e3a02000 	mov	r2, #0
    27d0:	e3a03000 	mov	r3, #0
    27d4:	eb000621 	bl	4060 <__aeabi_dcmpeq>
    27d8:	e3500000 	cmp	r0, #0
    27dc:	0a000090 	beq	2a24 <__kernel_rem_pio2+0x5bc>
    27e0:	e59d4004 	ldr	r4, [sp, #4]
    27e4:	e59dc020 	ldr	r12, [sp, #32]
    27e8:	e2440001 	sub	r0, r4, #1
    27ec:	e15c0000 	cmp	r12, r0
    27f0:	ca000009 	bgt	281c <__kernel_rem_pio2+0x3b4>
    27f4:	e28de030 	add	lr, sp, #48	; 0x30
    27f8:	e59dc02c 	ldr	r12, [sp, #44]	; 0x2c
    27fc:	e08e3104 	add	r3, lr, r4, lsl #2
    2800:	e3a02000 	mov	r2, #0
    2804:	e5331004 	ldr	r1, [r3, #-4]!
    2808:	e153000c 	cmp	r3, r12
    280c:	e1822001 	orr	r2, r2, r1
    2810:	1afffffb 	bne	2804 <__kernel_rem_pio2+0x39c>
    2814:	e3520000 	cmp	r2, #0
    2818:	1a0001c9 	bne	2f44 <__kernel_rem_pio2+0xadc>
    281c:	e59d4020 	ldr	r4, [sp, #32]
    2820:	e2442001 	sub	r2, r4, #1
    2824:	e1a02102 	lsl	r2, r2, #2
    2828:	e28dce26 	add	r12, sp, #608	; 0x260
    282c:	e08c3002 	add	r3, r12, r2
    2830:	e5133230 	ldr	r3, [r3, #-560]	; 0xfffffdd0
    2834:	e3530000 	cmp	r3, #0
    2838:	1a0001d9 	bne	2fa4 <__kernel_rem_pio2+0xb3c>
    283c:	e28de030 	add	lr, sp, #48	; 0x30
    2840:	e08e2002 	add	r2, lr, r2
    2844:	e3a03001 	mov	r3, #1
    2848:	e5321004 	ldr	r1, [r2, #-4]!
    284c:	e3510000 	cmp	r1, #0
    2850:	e2833001 	add	r3, r3, #1
    2854:	0afffffb 	beq	2848 <__kernel_rem_pio2+0x3e0>
    2858:	e59d4004 	ldr	r4, [sp, #4]
    285c:	e0843003 	add	r3, r4, r3
    2860:	e2848001 	add	r8, r4, #1
    2864:	e1580003 	cmp	r8, r3
    2868:	e58d3024 	str	r3, [sp, #36]	; 0x24
    286c:	ca000031 	bgt	2938 <__kernel_rem_pio2+0x4d0>
    2870:	e59d4004 	ldr	r4, [sp, #4]
    2874:	e59dc028 	ldr	r12, [sp, #40]	; 0x28
    2878:	e084300c 	add	r3, r4, r12
    287c:	e59dc28c 	ldr	r12, [sp, #652]	; 0x28c
    2880:	e59d400c 	ldr	r4, [sp, #12]
    2884:	e08c3103 	add	r3, r12, r3, lsl #2
    2888:	e59dc024 	ldr	r12, [sp, #36]	; 0x24
    288c:	e0849008 	add	r9, r4, r8
    2890:	e28d4d07 	add	r4, sp, #448	; 0x1c0
    2894:	e0844188 	add	r4, r4, r8, lsl #3
    2898:	e28cc001 	add	r12, r12, #1
    289c:	e28de080 	add	lr, sp, #128	; 0x80
    28a0:	e98d0018 	stmib	sp, {r3, r4}
    28a4:	e58dc014 	str	r12, [sp, #20]
    28a8:	e08e9189 	add	r9, lr, r9, lsl #3
    28ac:	e59d4004 	ldr	r4, [sp, #4]
    28b0:	e5b40004 	ldr	r0, [r4, #4]!
    28b4:	e58d4004 	str	r4, [sp, #4]
    28b8:	eb000457 	bl	3a1c <__aeabi_i2d>
    28bc:	e59dc00c 	ldr	r12, [sp, #12]
    28c0:	e35c0000 	cmp	r12, #0
    28c4:	e8a90003 	stmia	r9!, {r0, r1}
    28c8:	ba00001d 	blt	2944 <__kernel_rem_pio2+0x4dc>
    28cc:	e088700b 	add	r7, r8, r11
    28d0:	e28de080 	add	lr, sp, #128	; 0x80
    28d4:	e59da010 	ldr	r10, [sp, #16]
    28d8:	e08e7187 	add	r7, lr, r7, lsl #3
    28dc:	e3a04000 	mov	r4, #0
    28e0:	e3a05000 	mov	r5, #0
    28e4:	e3a06000 	mov	r6, #0
    28e8:	e937000c 	ldmdb	r7!, {r2, r3}
    28ec:	e8ba0003 	ldm	r10!, {r0, r1}
    28f0:	eb000480 	bl	3af8 <__aeabi_dmul>
    28f4:	e1a02000 	mov	r2, r0
    28f8:	e1a03001 	mov	r3, r1
    28fc:	e1a00004 	mov	r0, r4
    2900:	e1a01005 	mov	r1, r5
    2904:	eb000377 	bl	36e8 <__adddf3>
    2908:	e2866001 	add	r6, r6, #1
    290c:	e156000b 	cmp	r6, r11
    2910:	e1a04000 	mov	r4, r0
    2914:	e1a05001 	mov	r5, r1
    2918:	1afffff2 	bne	28e8 <__kernel_rem_pio2+0x480>
    291c:	e59dc014 	ldr	r12, [sp, #20]
    2920:	e2888001 	add	r8, r8, #1
    2924:	e158000c 	cmp	r8, r12
    2928:	e59dc008 	ldr	r12, [sp, #8]
    292c:	e8ac0030 	stmia	r12!, {r4, r5}
    2930:	e58dc008 	str	r12, [sp, #8]
    2934:	1affffdc 	bne	28ac <__kernel_rem_pio2+0x444>
    2938:	e59dc024 	ldr	r12, [sp, #36]	; 0x24
    293c:	e58dc004 	str	r12, [sp, #4]
    2940:	eaffff20 	b	25c8 <__kernel_rem_pio2+0x160>
    2944:	e3a04000 	mov	r4, #0
    2948:	e3a05000 	mov	r5, #0
    294c:	eafffff2 	b	291c <__kernel_rem_pio2+0x4b4>
    2950:	e1a02006 	mov	r2, r6
    2954:	e1a03007 	mov	r3, r7
    2958:	e3a00000 	mov	r0, #0
    295c:	e59f1690 	ldr	r1, [pc, #1680]	; 2ff4 <__kernel_rem_pio2+0xb8c>
    2960:	eb00035f 	bl	36e4 <__aeabi_dsub>
    2964:	e3540000 	cmp	r4, #0
    2968:	e1a06000 	mov	r6, r0
    296c:	e1a07001 	mov	r7, r1
    2970:	0affff93 	beq	27c4 <__kernel_rem_pio2+0x35c>
    2974:	e59d2018 	ldr	r2, [sp, #24]
    2978:	e3a00000 	mov	r0, #0
    297c:	e59f1670 	ldr	r1, [pc, #1648]	; 2ff4 <__kernel_rem_pio2+0xb8c>
    2980:	eb000294 	bl	33d8 <scalbn>
    2984:	e1a02000 	mov	r2, r0
    2988:	e1a03001 	mov	r3, r1
    298c:	e1a00006 	mov	r0, r6
    2990:	e1a01007 	mov	r1, r7
    2994:	eb000352 	bl	36e4 <__aeabi_dsub>
    2998:	e1a06000 	mov	r6, r0
    299c:	e1a07001 	mov	r7, r1
    29a0:	eaffff87 	b	27c4 <__kernel_rem_pio2+0x35c>
    29a4:	1a00000e 	bne	29e4 <__kernel_rem_pio2+0x57c>
    29a8:	e59d4004 	ldr	r4, [sp, #4]
    29ac:	e28dce26 	add	r12, sp, #608	; 0x260
    29b0:	e08c3104 	add	r3, r12, r4, lsl #2
    29b4:	e5135234 	ldr	r5, [r3, #-564]	; 0xfffffdcc
    29b8:	e1a05bc5 	asr	r5, r5, #23
    29bc:	eaffff56 	b	271c <__kernel_rem_pio2+0x2b4>
    29c0:	e59dc004 	ldr	r12, [sp, #4]
    29c4:	e28dee26 	add	lr, sp, #608	; 0x260
    29c8:	e24c3001 	sub	r3, r12, #1
    29cc:	e08e3103 	add	r3, lr, r3, lsl #2
    29d0:	e5132230 	ldr	r2, [r3, #-560]	; 0xfffffdd0
    29d4:	e3c224ff 	bic	r2, r2, #-16777216	; 0xff000000
    29d8:	e3c22502 	bic	r2, r2, #8388608	; 0x800000
    29dc:	e5032230 	str	r2, [r3, #-560]	; 0xfffffdd0
    29e0:	eaffff75 	b	27bc <__kernel_rem_pio2+0x354>
    29e4:	e3a02000 	mov	r2, #0
    29e8:	e59f3608 	ldr	r3, [pc, #1544]	; 2ff8 <__kernel_rem_pio2+0xb90>
    29ec:	eb0005ad 	bl	40a8 <__aeabi_dcmpge>
    29f0:	e3500000 	cmp	r0, #0
    29f4:	03a05000 	moveq	r5, #0
    29f8:	0affff71 	beq	27c4 <__kernel_rem_pio2+0x35c>
    29fc:	e59d4004 	ldr	r4, [sp, #4]
    2a00:	e3540000 	cmp	r4, #0
    2a04:	e3a05002 	mov	r5, #2
    2a08:	e2888001 	add	r8, r8, #1
    2a0c:	caffff48 	bgt	2734 <__kernel_rem_pio2+0x2cc>
    2a10:	e3a04000 	mov	r4, #0
    2a14:	eaffff59 	b	2780 <__kernel_rem_pio2+0x318>
    2a18:	e3a04000 	mov	r4, #0
    2a1c:	e3a05000 	mov	r5, #0
    2a20:	eafffede 	b	25a0 <__kernel_rem_pio2+0x138>
    2a24:	e59d4018 	ldr	r4, [sp, #24]
    2a28:	e1a00006 	mov	r0, r6
    2a2c:	e2642000 	rsb	r2, r4, #0
    2a30:	e1a01007 	mov	r1, r7
    2a34:	e58d500c 	str	r5, [sp, #12]
    2a38:	e58d8010 	str	r8, [sp, #16]
    2a3c:	eb000265 	bl	33d8 <scalbn>
    2a40:	e3a02000 	mov	r2, #0
    2a44:	e59f35a0 	ldr	r3, [pc, #1440]	; 2fec <__kernel_rem_pio2+0xb84>
    2a48:	e1a04000 	mov	r4, r0
    2a4c:	e1a05001 	mov	r5, r1
    2a50:	eb000594 	bl	40a8 <__aeabi_dcmpge>
    2a54:	e3500000 	cmp	r0, #0
    2a58:	0a000153 	beq	2fac <__kernel_rem_pio2+0xb44>
    2a5c:	e3a02000 	mov	r2, #0
    2a60:	e59f3580 	ldr	r3, [pc, #1408]	; 2fe8 <__kernel_rem_pio2+0xb80>
    2a64:	e1a00004 	mov	r0, r4
    2a68:	e1a01005 	mov	r1, r5
    2a6c:	eb000421 	bl	3af8 <__aeabi_dmul>
    2a70:	eb000598 	bl	40d8 <__aeabi_d2iz>
    2a74:	eb0003e8 	bl	3a1c <__aeabi_i2d>
    2a78:	e3a02000 	mov	r2, #0
    2a7c:	e59f3568 	ldr	r3, [pc, #1384]	; 2fec <__kernel_rem_pio2+0xb84>
    2a80:	e1a06000 	mov	r6, r0
    2a84:	e1a07001 	mov	r7, r1
    2a88:	eb00041a 	bl	3af8 <__aeabi_dmul>
    2a8c:	e1a02000 	mov	r2, r0
    2a90:	e1a03001 	mov	r3, r1
    2a94:	e1a00004 	mov	r0, r4
    2a98:	e1a01005 	mov	r1, r5
    2a9c:	eb000310 	bl	36e4 <__aeabi_dsub>
    2aa0:	eb00058c 	bl	40d8 <__aeabi_d2iz>
    2aa4:	e59d4004 	ldr	r4, [sp, #4]
    2aa8:	e28dce26 	add	r12, sp, #608	; 0x260
    2aac:	e08c3104 	add	r3, r12, r4, lsl #2
    2ab0:	e5030230 	str	r0, [r3, #-560]	; 0xfffffdd0
    2ab4:	e1a01007 	mov	r1, r7
    2ab8:	e1a00006 	mov	r0, r6
    2abc:	eb000585 	bl	40d8 <__aeabi_d2iz>
    2ac0:	e2844001 	add	r4, r4, #1
    2ac4:	e28dee26 	add	lr, sp, #608	; 0x260
    2ac8:	e08e3104 	add	r3, lr, r4, lsl #2
    2acc:	e58d4004 	str	r4, [sp, #4]
    2ad0:	e59d4018 	ldr	r4, [sp, #24]
    2ad4:	e2844018 	add	r4, r4, #24
    2ad8:	e58d4018 	str	r4, [sp, #24]
    2adc:	e5030230 	str	r0, [r3, #-560]	; 0xfffffdd0
    2ae0:	e3a00000 	mov	r0, #0
    2ae4:	e59f1508 	ldr	r1, [pc, #1288]	; 2ff4 <__kernel_rem_pio2+0xb8c>
    2ae8:	e59d2018 	ldr	r2, [sp, #24]
    2aec:	eb000239 	bl	33d8 <scalbn>
    2af0:	e59dc004 	ldr	r12, [sp, #4]
    2af4:	e35c0000 	cmp	r12, #0
    2af8:	e1a04000 	mov	r4, r0
    2afc:	e1a05001 	mov	r5, r1
    2b00:	ba00003b 	blt	2bf4 <__kernel_rem_pio2+0x78c>
    2b04:	e28c6001 	add	r6, r12, #1
    2b08:	e28d9d07 	add	r9, sp, #448	; 0x1c0
    2b0c:	e28de030 	add	lr, sp, #48	; 0x30
    2b10:	e08e7106 	add	r7, lr, r6, lsl #2
    2b14:	e0896186 	add	r6, r9, r6, lsl #3
    2b18:	e5370004 	ldr	r0, [r7, #-4]!
    2b1c:	eb0003be 	bl	3a1c <__aeabi_i2d>
    2b20:	e1a02004 	mov	r2, r4
    2b24:	e1a03005 	mov	r3, r5
    2b28:	eb0003f2 	bl	3af8 <__aeabi_dmul>
    2b2c:	e3a02000 	mov	r2, #0
    2b30:	e9260003 	stmdb	r6!, {r0, r1}
    2b34:	e59f34ac 	ldr	r3, [pc, #1196]	; 2fe8 <__kernel_rem_pio2+0xb80>
    2b38:	e1a00004 	mov	r0, r4
    2b3c:	e1a01005 	mov	r1, r5
    2b40:	eb0003ec 	bl	3af8 <__aeabi_dmul>
    2b44:	e1560009 	cmp	r6, r9
    2b48:	e1a04000 	mov	r4, r0
    2b4c:	e1a05001 	mov	r5, r1
    2b50:	1afffff0 	bne	2b18 <__kernel_rem_pio2+0x6b0>
    2b54:	e59da004 	ldr	r10, [sp, #4]
    2b58:	e59db020 	ldr	r11, [sp, #32]
    2b5c:	e58da008 	str	r10, [sp, #8]
    2b60:	e3a08000 	mov	r8, #0
    2b64:	e35b0000 	cmp	r11, #0
    2b68:	b3a04000 	movlt	r4, #0
    2b6c:	b3a05000 	movlt	r5, #0
    2b70:	ba000015 	blt	2bcc <__kernel_rem_pio2+0x764>
    2b74:	e59d4008 	ldr	r4, [sp, #8]
    2b78:	e59fa47c 	ldr	r10, [pc, #1148]	; 2ffc <__kernel_rem_pio2+0xb94>
    2b7c:	e0897184 	add	r7, r9, r4, lsl #3
    2b80:	e3a05000 	mov	r5, #0
    2b84:	e3a04000 	mov	r4, #0
    2b88:	e3a06000 	mov	r6, #0
    2b8c:	ea000001 	b	2b98 <__kernel_rem_pio2+0x730>
    2b90:	e1560008 	cmp	r6, r8
    2b94:	ca00000c 	bgt	2bcc <__kernel_rem_pio2+0x764>
    2b98:	e8b7000c 	ldm	r7!, {r2, r3}
    2b9c:	e8ba0003 	ldm	r10!, {r0, r1}
    2ba0:	eb0003d4 	bl	3af8 <__aeabi_dmul>
    2ba4:	e1a02000 	mov	r2, r0
    2ba8:	e1a03001 	mov	r3, r1
    2bac:	e1a00004 	mov	r0, r4
    2bb0:	e1a01005 	mov	r1, r5
    2bb4:	eb0002cb 	bl	36e8 <__adddf3>
    2bb8:	e2866001 	add	r6, r6, #1
    2bbc:	e15b0006 	cmp	r11, r6
    2bc0:	e1a04000 	mov	r4, r0
    2bc4:	e1a05001 	mov	r5, r1
    2bc8:	aafffff0 	bge	2b90 <__kernel_rem_pio2+0x728>
    2bcc:	e59dc008 	ldr	r12, [sp, #8]
    2bd0:	e28d0e26 	add	r0, sp, #608	; 0x260
    2bd4:	e24cc001 	sub	r12, r12, #1
    2bd8:	e0803188 	add	r3, r0, r8, lsl #3
    2bdc:	e37c0001 	cmn	r12, #1
    2be0:	e58dc008 	str	r12, [sp, #8]
    2be4:	e5034140 	str	r4, [r3, #-320]	; 0xfffffec0
    2be8:	e503513c 	str	r5, [r3, #-316]	; 0xfffffec4
    2bec:	e2888001 	add	r8, r8, #1
    2bf0:	1affffdb 	bne	2b64 <__kernel_rem_pio2+0x6fc>
    2bf4:	e59dc288 	ldr	r12, [sp, #648]	; 0x288
    2bf8:	e35c0003 	cmp	r12, #3
    2bfc:	979ff10c 	ldrls	pc, [pc, r12, lsl #2]
    2c00:	ea000015 	b	2c5c <__kernel_rem_pio2+0x7f4>
    2c04:	00002ee4 	.word	0x00002ee4
    2c08:	00002e00 	.word	0x00002e00
    2c0c:	00002e00 	.word	0x00002e00
    2c10:	00002c70 	.word	0x00002c70
    2c14:	e59d000c 	ldr	r0, [sp, #12]
    2c18:	e3a0c000 	mov	r12, #0
    2c1c:	e3500000 	cmp	r0, #0
    2c20:	e1a0400c 	mov	r4, r12
    2c24:	0a000068 	beq	2dcc <__kernel_rem_pio2+0x964>
    2c28:	e59d2124 	ldr	r2, [sp, #292]	; 0x124
    2c2c:	e59d001c 	ldr	r0, [sp, #28]
    2c30:	e59d1120 	ldr	r1, [sp, #288]	; 0x120
    2c34:	e2822102 	add	r2, r2, #-2147483648	; 0x80000000
    2c38:	e59d312c 	ldr	r3, [sp, #300]	; 0x12c
    2c3c:	e8800006 	stm	r0, {r1, r2}
    2c40:	e59d2128 	ldr	r2, [sp, #296]	; 0x128
    2c44:	e2833102 	add	r3, r3, #-2147483648	; 0x80000000
    2c48:	e2844102 	add	r4, r4, #-2147483648	; 0x80000000
    2c4c:	e5802008 	str	r2, [r0, #8]
    2c50:	e580300c 	str	r3, [r0, #12]
    2c54:	e580c010 	str	r12, [r0, #16]
    2c58:	e5804014 	str	r4, [r0, #20]
    2c5c:	e59d4010 	ldr	r4, [sp, #16]
    2c60:	e2040007 	and	r0, r4, #7
    2c64:	e28ddf99 	add	sp, sp, #612	; 0x264
    2c68:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
    2c6c:	e12fff1e 	bx	lr
    2c70:	e59d4004 	ldr	r4, [sp, #4]
    2c74:	e3540000 	cmp	r4, #0
    2c78:	daffffe5 	ble	2c14 <__kernel_rem_pio2+0x7ac>
    2c7c:	e59d4004 	ldr	r4, [sp, #4]
    2c80:	e28dbe12 	add	r11, sp, #288	; 0x120
    2c84:	e08ba184 	add	r10, r11, r4, lsl #3
    2c88:	e58da008 	str	r10, [sp, #8]
    2c8c:	e58da014 	str	r10, [sp, #20]
    2c90:	e93a0300 	ldmdb	r10!, {r8, r9}
    2c94:	e28a7008 	add	r7, r10, #8
    2c98:	e89700c0 	ldm	r7, {r6, r7}
    2c9c:	e1a00008 	mov	r0, r8
    2ca0:	e1a02006 	mov	r2, r6
    2ca4:	e1a03007 	mov	r3, r7
    2ca8:	e1a01009 	mov	r1, r9
    2cac:	eb00028d 	bl	36e8 <__adddf3>
    2cb0:	e1a04000 	mov	r4, r0
    2cb4:	e1a05001 	mov	r5, r1
    2cb8:	e1a02004 	mov	r2, r4
    2cbc:	e1a03005 	mov	r3, r5
    2cc0:	e1a00008 	mov	r0, r8
    2cc4:	e1a01009 	mov	r1, r9
    2cc8:	eb000285 	bl	36e4 <__aeabi_dsub>
    2ccc:	e1a02000 	mov	r2, r0
    2cd0:	e1a03001 	mov	r3, r1
    2cd4:	e1a00006 	mov	r0, r6
    2cd8:	e1a01007 	mov	r1, r7
    2cdc:	eb000281 	bl	36e8 <__adddf3>
    2ce0:	e59dc008 	ldr	r12, [sp, #8]
    2ce4:	e58a0008 	str	r0, [r10, #8]
    2ce8:	e58a100c 	str	r1, [r10, #12]
    2cec:	e92c0030 	stmdb	r12!, {r4, r5}
    2cf0:	e15a000b 	cmp	r10, r11
    2cf4:	e58dc008 	str	r12, [sp, #8]
    2cf8:	1affffe4 	bne	2c90 <__kernel_rem_pio2+0x828>
    2cfc:	e59d4004 	ldr	r4, [sp, #4]
    2d00:	e3540001 	cmp	r4, #1
    2d04:	e59da014 	ldr	r10, [sp, #20]
    2d08:	daffffc1 	ble	2c14 <__kernel_rem_pio2+0x7ac>
    2d0c:	e28bc008 	add	r12, r11, #8
    2d10:	e58dc008 	str	r12, [sp, #8]
    2d14:	e1a0c00a 	mov	r12, r10
    2d18:	e93a0300 	ldmdb	r10!, {r8, r9}
    2d1c:	e28a7008 	add	r7, r10, #8
    2d20:	e89700c0 	ldm	r7, {r6, r7}
    2d24:	e1a00008 	mov	r0, r8
    2d28:	e1a02006 	mov	r2, r6
    2d2c:	e1a03007 	mov	r3, r7
    2d30:	e1a01009 	mov	r1, r9
    2d34:	e58dc000 	str	r12, [sp]
    2d38:	eb00026a 	bl	36e8 <__adddf3>
    2d3c:	e1a04000 	mov	r4, r0
    2d40:	e1a05001 	mov	r5, r1
    2d44:	e1a02004 	mov	r2, r4
    2d48:	e1a03005 	mov	r3, r5
    2d4c:	e1a00008 	mov	r0, r8
    2d50:	e1a01009 	mov	r1, r9
    2d54:	eb000262 	bl	36e4 <__aeabi_dsub>
    2d58:	e1a02000 	mov	r2, r0
    2d5c:	e1a03001 	mov	r3, r1
    2d60:	e1a00006 	mov	r0, r6
    2d64:	e1a01007 	mov	r1, r7
    2d68:	eb00025e 	bl	36e8 <__adddf3>
    2d6c:	e59de008 	ldr	lr, [sp, #8]
    2d70:	e59dc000 	ldr	r12, [sp]
    2d74:	e15a000e 	cmp	r10, lr
    2d78:	e58a0008 	str	r0, [r10, #8]
    2d7c:	e58a100c 	str	r1, [r10, #12]
    2d80:	e92c0030 	stmdb	r12!, {r4, r5}
    2d84:	1affffe3 	bne	2d18 <__kernel_rem_pio2+0x8b0>
    2d88:	e59d4004 	ldr	r4, [sp, #4]
    2d8c:	e3a0c000 	mov	r12, #0
    2d90:	e2845001 	add	r5, r4, #1
    2d94:	e08b5185 	add	r5, r11, r5, lsl #3
    2d98:	e1a0400c 	mov	r4, r12
    2d9c:	e28bb010 	add	r11, r11, #16
    2da0:	e1a0000c 	mov	r0, r12
    2da4:	e1a01004 	mov	r1, r4
    2da8:	e935000c 	ldmdb	r5!, {r2, r3}
    2dac:	eb00024d 	bl	36e8 <__adddf3>
    2db0:	e155000b 	cmp	r5, r11
    2db4:	e1a0c000 	mov	r12, r0
    2db8:	e1a04001 	mov	r4, r1
    2dbc:	1afffff7 	bne	2da0 <__kernel_rem_pio2+0x938>
    2dc0:	e59d000c 	ldr	r0, [sp, #12]
    2dc4:	e3500000 	cmp	r0, #0
    2dc8:	1affff96 	bne	2c28 <__kernel_rem_pio2+0x7c0>
    2dcc:	e1a03004 	mov	r3, r4
    2dd0:	e28d1e12 	add	r1, sp, #288	; 0x120
    2dd4:	e8910003 	ldm	r1, {r0, r1}
    2dd8:	e59d401c 	ldr	r4, [sp, #28]
    2ddc:	e8840003 	stm	r4, {r0, r1}
    2de0:	e28d1f4a 	add	r1, sp, #296	; 0x128
    2de4:	e8910003 	ldm	r1, {r0, r1}
    2de8:	e1a0200c 	mov	r2, r12
    2dec:	e5840008 	str	r0, [r4, #8]
    2df0:	e584100c 	str	r1, [r4, #12]
    2df4:	e5842010 	str	r2, [r4, #16]
    2df8:	e5843014 	str	r3, [r4, #20]
    2dfc:	eaffff96 	b	2c5c <__kernel_rem_pio2+0x7f4>
    2e00:	e59dc004 	ldr	r12, [sp, #4]
    2e04:	e35c0000 	cmp	r12, #0
    2e08:	b3a0e000 	movlt	lr, #0
    2e0c:	b1a0c00e 	movlt	r12, lr
    2e10:	ba00000d 	blt	2e4c <__kernel_rem_pio2+0x9e4>
    2e14:	e59dc004 	ldr	r12, [sp, #4]
    2e18:	e28d5e12 	add	r5, sp, #288	; 0x120
    2e1c:	e28c4001 	add	r4, r12, #1
    2e20:	e3a0e000 	mov	lr, #0
    2e24:	e0854184 	add	r4, r5, r4, lsl #3
    2e28:	e1a0c00e 	mov	r12, lr
    2e2c:	e1a0000e 	mov	r0, lr
    2e30:	e1a0100c 	mov	r1, r12
    2e34:	e934000c 	ldmdb	r4!, {r2, r3}
    2e38:	eb00022a 	bl	36e8 <__adddf3>
    2e3c:	e1540005 	cmp	r4, r5
    2e40:	e1a0e000 	mov	lr, r0
    2e44:	e1a0c001 	mov	r12, r1
    2e48:	1afffff7 	bne	2e2c <__kernel_rem_pio2+0x9c4>
    2e4c:	e59d400c 	ldr	r4, [sp, #12]
    2e50:	e3540000 	cmp	r4, #0
    2e54:	128c3102 	addne	r3, r12, #-2147483648	; 0x80000000
    2e58:	01a0300c 	moveq	r3, r12
    2e5c:	e1a01003 	mov	r1, r3
    2e60:	e1a0300c 	mov	r3, r12
    2e64:	e59dc01c 	ldr	r12, [sp, #28]
    2e68:	e1a0000e 	mov	r0, lr
    2e6c:	e88c0003 	stm	r12, {r0, r1}
    2e70:	e1a0200e 	mov	r2, lr
    2e74:	e28d1e12 	add	r1, sp, #288	; 0x120
    2e78:	e8910003 	ldm	r1, {r0, r1}
    2e7c:	eb000218 	bl	36e4 <__aeabi_dsub>
    2e80:	e59d4004 	ldr	r4, [sp, #4]
    2e84:	e3540000 	cmp	r4, #0
    2e88:	e1a05000 	mov	r5, r0
    2e8c:	e1a0c001 	mov	r12, r1
    2e90:	da00000a 	ble	2ec0 <__kernel_rem_pio2+0xa58>
    2e94:	e59de004 	ldr	lr, [sp, #4]
    2e98:	e28d4f4a 	add	r4, sp, #296	; 0x128
    2e9c:	e084618e 	add	r6, r4, lr, lsl #3
    2ea0:	e1a00005 	mov	r0, r5
    2ea4:	e1a0100c 	mov	r1, r12
    2ea8:	e8b4000c 	ldm	r4!, {r2, r3}
    2eac:	eb00020d 	bl	36e8 <__adddf3>
    2eb0:	e1540006 	cmp	r4, r6
    2eb4:	e1a05000 	mov	r5, r0
    2eb8:	e1a0c001 	mov	r12, r1
    2ebc:	1afffff7 	bne	2ea0 <__kernel_rem_pio2+0xa38>
    2ec0:	e59d400c 	ldr	r4, [sp, #12]
    2ec4:	e3540000 	cmp	r4, #0
    2ec8:	128cc102 	addne	r12, r12, #-2147483648	; 0x80000000
    2ecc:	e1a0300c 	mov	r3, r12
    2ed0:	e59dc01c 	ldr	r12, [sp, #28]
    2ed4:	e1a02005 	mov	r2, r5
    2ed8:	e58c2008 	str	r2, [r12, #8]
    2edc:	e58c300c 	str	r3, [r12, #12]
    2ee0:	eaffff5d 	b	2c5c <__kernel_rem_pio2+0x7f4>
    2ee4:	e59d4004 	ldr	r4, [sp, #4]
    2ee8:	e3540000 	cmp	r4, #0
    2eec:	ba000038 	blt	2fd4 <__kernel_rem_pio2+0xb6c>
    2ef0:	e2846001 	add	r6, r4, #1
    2ef4:	e28d5e12 	add	r5, sp, #288	; 0x120
    2ef8:	e3a04000 	mov	r4, #0
    2efc:	e0856186 	add	r6, r5, r6, lsl #3
    2f00:	e1a0c004 	mov	r12, r4
    2f04:	e1a00004 	mov	r0, r4
    2f08:	e1a0100c 	mov	r1, r12
    2f0c:	e936000c 	ldmdb	r6!, {r2, r3}
    2f10:	eb0001f4 	bl	36e8 <__adddf3>
    2f14:	e1560005 	cmp	r6, r5
    2f18:	e1a04000 	mov	r4, r0
    2f1c:	e1a0c001 	mov	r12, r1
    2f20:	1afffff7 	bne	2f04 <__kernel_rem_pio2+0xa9c>
    2f24:	e59d000c 	ldr	r0, [sp, #12]
    2f28:	e3500000 	cmp	r0, #0
    2f2c:	e1a02004 	mov	r2, r4
    2f30:	128cc102 	addne	r12, r12, #-2147483648	; 0x80000000
    2f34:	e59d401c 	ldr	r4, [sp, #28]
    2f38:	e1a0300c 	mov	r3, r12
    2f3c:	e884000c 	stm	r4, {r2, r3}
    2f40:	eaffff45 	b	2c5c <__kernel_rem_pio2+0x7f4>
    2f44:	e1a03100 	lsl	r3, r0, #2
    2f48:	e28dce26 	add	r12, sp, #608	; 0x260
    2f4c:	e08c2003 	add	r2, r12, r3
    2f50:	e59d4018 	ldr	r4, [sp, #24]
    2f54:	e5122230 	ldr	r2, [r2, #-560]	; 0xfffffdd0
    2f58:	e2444018 	sub	r4, r4, #24
    2f5c:	e3520000 	cmp	r2, #0
    2f60:	e58d8010 	str	r8, [sp, #16]
    2f64:	e58d500c 	str	r5, [sp, #12]
    2f68:	e58d4018 	str	r4, [sp, #24]
    2f6c:	1a000016 	bne	2fcc <__kernel_rem_pio2+0xb64>
    2f70:	e28dc030 	add	r12, sp, #48	; 0x30
    2f74:	e58d0004 	str	r0, [sp, #4]
    2f78:	e08c3003 	add	r3, r12, r3
    2f7c:	e1a02000 	mov	r2, r0
    2f80:	e1a01004 	mov	r1, r4
    2f84:	e5330004 	ldr	r0, [r3, #-4]!
    2f88:	e3500000 	cmp	r0, #0
    2f8c:	e2422001 	sub	r2, r2, #1
    2f90:	e2411018 	sub	r1, r1, #24
    2f94:	0afffffa 	beq	2f84 <__kernel_rem_pio2+0xb1c>
    2f98:	e58d2004 	str	r2, [sp, #4]
    2f9c:	e58d1018 	str	r1, [sp, #24]
    2fa0:	eafffece 	b	2ae0 <__kernel_rem_pio2+0x678>
    2fa4:	e3a03001 	mov	r3, #1
    2fa8:	eafffe2a 	b	2858 <__kernel_rem_pio2+0x3f0>
    2fac:	e1a00004 	mov	r0, r4
    2fb0:	e1a01005 	mov	r1, r5
    2fb4:	eb000447 	bl	40d8 <__aeabi_d2iz>
    2fb8:	e59dc004 	ldr	r12, [sp, #4]
    2fbc:	e28dee26 	add	lr, sp, #608	; 0x260
    2fc0:	e08e310c 	add	r3, lr, r12, lsl #2
    2fc4:	e5030230 	str	r0, [r3, #-560]	; 0xfffffdd0
    2fc8:	eafffec4 	b	2ae0 <__kernel_rem_pio2+0x678>
    2fcc:	e58d0004 	str	r0, [sp, #4]
    2fd0:	eafffec2 	b	2ae0 <__kernel_rem_pio2+0x678>
    2fd4:	e3a04000 	mov	r4, #0
    2fd8:	e1a0c004 	mov	r12, r4
    2fdc:	eaffffd0 	b	2f24 <__kernel_rem_pio2+0xabc>
    2fe0:	2aaaaaab 	.word	0x2aaaaaab
    2fe4:	00004ef0 	.word	0x00004ef0
    2fe8:	3e700000 	.word	0x3e700000
    2fec:	41700000 	.word	0x41700000
    2ff0:	40200000 	.word	0x40200000
    2ff4:	3ff00000 	.word	0x3ff00000
    2ff8:	3fe00000 	.word	0x3fe00000
    2ffc:	00004f00 	.word	0x00004f00

00003000 <__kernel_sin>:
    3000:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
    3004:	e3c1c102 	bic	r12, r1, #-2147483648	; 0x80000000
    3008:	e35c05f9 	cmp	r12, #1044381696	; 0x3e400000
    300c:	e24dd014 	sub	sp, sp, #20
    3010:	e1a04000 	mov	r4, r0
    3014:	e1a05001 	mov	r5, r1
    3018:	e1a06000 	mov	r6, r0
    301c:	e1a07001 	mov	r7, r1
    3020:	e1a08002 	mov	r8, r2
    3024:	e1a09003 	mov	r9, r3
    3028:	aa000002 	bge	3038 <__kernel_sin+0x38>
    302c:	eb000429 	bl	40d8 <__aeabi_d2iz>
    3030:	e3500000 	cmp	r0, #0
    3034:	0a000052 	beq	3184 <__kernel_sin+0x184>
    3038:	e1a02004 	mov	r2, r4
    303c:	e1a03005 	mov	r3, r5
    3040:	e1a00004 	mov	r0, r4
    3044:	e1a01005 	mov	r1, r5
    3048:	eb0002aa 	bl	3af8 <__aeabi_dmul>
    304c:	e1a02004 	mov	r2, r4
    3050:	e1a03005 	mov	r3, r5
    3054:	e1a06000 	mov	r6, r0
    3058:	e1a07001 	mov	r7, r1
    305c:	eb0002a5 	bl	3af8 <__aeabi_dmul>
    3060:	e28f3d06 	add	r3, pc, #384	; 0x180
    3064:	e893000c 	ldm	r3, {r2, r3}
    3068:	e1a0a000 	mov	r10, r0
    306c:	e1a0b001 	mov	r11, r1
    3070:	e1a00006 	mov	r0, r6
    3074:	e1a01007 	mov	r1, r7
    3078:	eb00029e 	bl	3af8 <__aeabi_dmul>
    307c:	e28f3f5b 	add	r3, pc, #364	; 0x16c
    3080:	e893000c 	ldm	r3, {r2, r3}
    3084:	eb000196 	bl	36e4 <__aeabi_dsub>
    3088:	e1a02006 	mov	r2, r6
    308c:	e1a03007 	mov	r3, r7
    3090:	eb000298 	bl	3af8 <__aeabi_dmul>
    3094:	e28f3f57 	add	r3, pc, #348	; 0x15c
    3098:	e893000c 	ldm	r3, {r2, r3}
    309c:	eb000191 	bl	36e8 <__adddf3>
    30a0:	e1a02006 	mov	r2, r6
    30a4:	e1a03007 	mov	r3, r7
    30a8:	eb000292 	bl	3af8 <__aeabi_dmul>
    30ac:	e28f3f53 	add	r3, pc, #332	; 0x14c
    30b0:	e893000c 	ldm	r3, {r2, r3}
    30b4:	eb00018a 	bl	36e4 <__aeabi_dsub>
    30b8:	e1a02006 	mov	r2, r6
    30bc:	e1a03007 	mov	r3, r7
    30c0:	eb00028c 	bl	3af8 <__aeabi_dmul>
    30c4:	e28f3f4f 	add	r3, pc, #316	; 0x13c
    30c8:	e893000c 	ldm	r3, {r2, r3}
    30cc:	eb000185 	bl	36e8 <__adddf3>
    30d0:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
    30d4:	e3530000 	cmp	r3, #0
    30d8:	e88d0003 	stm	sp, {r0, r1}
    30dc:	0a00002d 	beq	3198 <__kernel_sin+0x198>
    30e0:	e3a02000 	mov	r2, #0
    30e4:	e59f312c 	ldr	r3, [pc, #300]	; 3218 <__kernel_sin+0x218>
    30e8:	e1a00008 	mov	r0, r8
    30ec:	e1a01009 	mov	r1, r9
    30f0:	eb000280 	bl	3af8 <__aeabi_dmul>
    30f4:	e89d000c 	ldm	sp, {r2, r3}
    30f8:	e58d0008 	str	r0, [sp, #8]
    30fc:	e58d100c 	str	r1, [sp, #12]
    3100:	e1a0000a 	mov	r0, r10
    3104:	e1a0100b 	mov	r1, r11
    3108:	eb00027a 	bl	3af8 <__aeabi_dmul>
    310c:	e1a02000 	mov	r2, r0
    3110:	e1a03001 	mov	r3, r1
    3114:	e28d1008 	add	r1, sp, #8
    3118:	e8910003 	ldm	r1, {r0, r1}
    311c:	eb000170 	bl	36e4 <__aeabi_dsub>
    3120:	e1a02006 	mov	r2, r6
    3124:	e1a03007 	mov	r3, r7
    3128:	eb000272 	bl	3af8 <__aeabi_dmul>
    312c:	e1a02008 	mov	r2, r8
    3130:	e1a03009 	mov	r3, r9
    3134:	eb00016a 	bl	36e4 <__aeabi_dsub>
    3138:	e28f30d0 	add	r3, pc, #208	; 0xd0
    313c:	e893000c 	ldm	r3, {r2, r3}
    3140:	e1a06000 	mov	r6, r0
    3144:	e1a07001 	mov	r7, r1
    3148:	e1a0000a 	mov	r0, r10
    314c:	e1a0100b 	mov	r1, r11
    3150:	eb000268 	bl	3af8 <__aeabi_dmul>
    3154:	e1a02000 	mov	r2, r0
    3158:	e1a03001 	mov	r3, r1
    315c:	e1a00006 	mov	r0, r6
    3160:	e1a01007 	mov	r1, r7
    3164:	eb00015f 	bl	36e8 <__adddf3>
    3168:	e1a02000 	mov	r2, r0
    316c:	e1a03001 	mov	r3, r1
    3170:	e1a00004 	mov	r0, r4
    3174:	e1a01005 	mov	r1, r5
    3178:	eb000159 	bl	36e4 <__aeabi_dsub>
    317c:	e1a04000 	mov	r4, r0
    3180:	e1a05001 	mov	r5, r1
    3184:	e1a00004 	mov	r0, r4
    3188:	e1a01005 	mov	r1, r5
    318c:	e28dd014 	add	sp, sp, #20
    3190:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
    3194:	e12fff1e 	bx	lr
    3198:	e1a02000 	mov	r2, r0
    319c:	e1a03001 	mov	r3, r1
    31a0:	e1a00006 	mov	r0, r6
    31a4:	e1a01007 	mov	r1, r7
    31a8:	eb000252 	bl	3af8 <__aeabi_dmul>
    31ac:	e28f305c 	add	r3, pc, #92	; 0x5c
    31b0:	e893000c 	ldm	r3, {r2, r3}
    31b4:	eb00014a 	bl	36e4 <__aeabi_dsub>
    31b8:	e1a0200a 	mov	r2, r10
    31bc:	e1a0300b 	mov	r3, r11
    31c0:	eb00024c 	bl	3af8 <__aeabi_dmul>
    31c4:	e1a02000 	mov	r2, r0
    31c8:	e1a03001 	mov	r3, r1
    31cc:	e1a00004 	mov	r0, r4
    31d0:	e1a01005 	mov	r1, r5
    31d4:	eb000143 	bl	36e8 <__adddf3>
    31d8:	e1a04000 	mov	r4, r0
    31dc:	e1a05001 	mov	r5, r1
    31e0:	eaffffe7 	b	3184 <__kernel_sin+0x184>
    31e4:	e1a00000 	nop			; (mov r0, r0)
    31e8:	5acfd57c 	.word	0x5acfd57c
    31ec:	3de5d93a 	.word	0x3de5d93a
    31f0:	8a2b9ceb 	.word	0x8a2b9ceb
    31f4:	3e5ae5e6 	.word	0x3e5ae5e6
    31f8:	57b1fe7d 	.word	0x57b1fe7d
    31fc:	3ec71de3 	.word	0x3ec71de3
    3200:	19c161d5 	.word	0x19c161d5
    3204:	3f2a01a0 	.word	0x3f2a01a0
    3208:	1110f8a6 	.word	0x1110f8a6
    320c:	3f811111 	.word	0x3f811111
    3210:	55555549 	.word	0x55555549
    3214:	3fc55555 	.word	0x3fc55555
    3218:	3fe00000 	.word	0x3fe00000
    321c:	e1a00000 	nop			; (mov r0, r0)

00003220 <fabs>:
    3220:	e3c11102 	bic	r1, r1, #-2147483648	; 0x80000000
    3224:	e12fff1e 	bx	lr

00003228 <finite>:
    3228:	e3811102 	orr	r1, r1, #-2147483648	; 0x80000000
    322c:	e2810601 	add	r0, r1, #1048576	; 0x100000
    3230:	e1a00fa0 	lsr	r0, r0, #31
    3234:	e12fff1e 	bx	lr

00003238 <floor>:
    3238:	e92d45f8 	push	{r3, r4, r5, r6, r7, r8, r10, lr}
    323c:	e1a08081 	lsl	r8, r1, #1
    3240:	e1a08aa8 	lsr	r8, r8, #21
    3244:	e2486fff 	sub	r6, r8, #1020	; 0x3fc
    3248:	e2466003 	sub	r6, r6, #3
    324c:	e3560013 	cmp	r6, #19
    3250:	e1a02000 	mov	r2, r0
    3254:	e1a03001 	mov	r3, r1
    3258:	e1a04000 	mov	r4, r0
    325c:	e1a05001 	mov	r5, r1
    3260:	e1a07001 	mov	r7, r1
    3264:	ca000019 	bgt	32d0 <floor+0x98>
    3268:	e3560000 	cmp	r6, #0
    326c:	ba000034 	blt	3344 <floor+0x10c>
    3270:	e59f8150 	ldr	r8, [pc, #336]	; 33c8 <floor+0x190>
    3274:	e1a08658 	asr	r8, r8, r6
    3278:	e008c001 	and	r12, r8, r1
    327c:	e19cc000 	orrs	r12, r12, r0
    3280:	0a00000e 	beq	32c0 <floor+0x88>
    3284:	e28f3f4d 	add	r3, pc, #308	; 0x134
    3288:	e893000c 	ldm	r3, {r2, r3}
    328c:	eb000115 	bl	36e8 <__adddf3>
    3290:	e3a02000 	mov	r2, #0
    3294:	e3a03000 	mov	r3, #0
    3298:	eb000388 	bl	40c0 <__aeabi_dcmpgt>
    329c:	e3500000 	cmp	r0, #0
    32a0:	0a000004 	beq	32b8 <floor+0x80>
    32a4:	e3550000 	cmp	r5, #0
    32a8:	b3a03601 	movlt	r3, #1048576	; 0x100000
    32ac:	b0855653 	addlt	r5, r5, r3, asr r6
    32b0:	e3a04000 	mov	r4, #0
    32b4:	e1c57008 	bic	r7, r5, r8
    32b8:	e1a03007 	mov	r3, r7
    32bc:	e1a02004 	mov	r2, r4
    32c0:	e1a00002 	mov	r0, r2
    32c4:	e1a01003 	mov	r1, r3
    32c8:	e8bd45f8 	pop	{r3, r4, r5, r6, r7, r8, r10, lr}
    32cc:	e12fff1e 	bx	lr
    32d0:	e3560033 	cmp	r6, #51	; 0x33
    32d4:	da000005 	ble	32f0 <floor+0xb8>
    32d8:	e3560b01 	cmp	r6, #1024	; 0x400
    32dc:	1afffff7 	bne	32c0 <floor+0x88>
    32e0:	eb000100 	bl	36e8 <__adddf3>
    32e4:	e1a02000 	mov	r2, r0
    32e8:	e1a03001 	mov	r3, r1
    32ec:	eafffff3 	b	32c0 <floor+0x88>
    32f0:	e248ae41 	sub	r10, r8, #1040	; 0x410
    32f4:	e24aa003 	sub	r10, r10, #3
    32f8:	e3e0c000 	mvn	r12, #0
    32fc:	e1a0aa3c 	lsr	r10, r12, r10
    3300:	e11a0000 	tst	r10, r0
    3304:	0affffed 	beq	32c0 <floor+0x88>
    3308:	e28f30b0 	add	r3, pc, #176	; 0xb0
    330c:	e893000c 	ldm	r3, {r2, r3}
    3310:	eb0000f4 	bl	36e8 <__adddf3>
    3314:	e3a02000 	mov	r2, #0
    3318:	e3a03000 	mov	r3, #0
    331c:	eb000367 	bl	40c0 <__aeabi_dcmpgt>
    3320:	e3500000 	cmp	r0, #0
    3324:	0affffe3 	beq	32b8 <floor+0x80>
    3328:	e3550000 	cmp	r5, #0
    332c:	ba000017 	blt	3390 <floor+0x158>
    3330:	e1c4400a 	bic	r4, r4, r10
    3334:	e1a07005 	mov	r7, r5
    3338:	e1a03007 	mov	r3, r7
    333c:	e1a02004 	mov	r2, r4
    3340:	eaffffde 	b	32c0 <floor+0x88>
    3344:	e28f3074 	add	r3, pc, #116	; 0x74
    3348:	e893000c 	ldm	r3, {r2, r3}
    334c:	eb0000e5 	bl	36e8 <__adddf3>
    3350:	e3a02000 	mov	r2, #0
    3354:	e3a03000 	mov	r3, #0
    3358:	eb000358 	bl	40c0 <__aeabi_dcmpgt>
    335c:	e3500000 	cmp	r0, #0
    3360:	0affffd4 	beq	32b8 <floor+0x80>
    3364:	e3550000 	cmp	r5, #0
    3368:	a3a04000 	movge	r4, #0
    336c:	a1a07004 	movge	r7, r4
    3370:	aaffffd0 	bge	32b8 <floor+0x80>
    3374:	e3c73102 	bic	r3, r7, #-2147483648	; 0x80000000
    3378:	e1833004 	orr	r3, r3, r4
    337c:	e3530000 	cmp	r3, #0
    3380:	e59f3044 	ldr	r3, [pc, #68]	; 33cc <floor+0x194>
    3384:	13a04000 	movne	r4, #0
    3388:	11a07003 	movne	r7, r3
    338c:	eaffffc9 	b	32b8 <floor+0x80>
    3390:	e3560014 	cmp	r6, #20
    3394:	02855001 	addeq	r5, r5, #1
    3398:	0affffe4 	beq	3330 <floor+0xf8>
    339c:	e2688e43 	rsb	r8, r8, #1072	; 0x430
    33a0:	e2888003 	add	r8, r8, #3
    33a4:	e3a03001 	mov	r3, #1
    33a8:	e0843813 	add	r3, r4, r3, lsl r8
    33ac:	e1540003 	cmp	r4, r3
    33b0:	82855001 	addhi	r5, r5, #1
    33b4:	e1a04003 	mov	r4, r3
    33b8:	eaffffdc 	b	3330 <floor+0xf8>
    33bc:	e1a00000 	nop			; (mov r0, r0)
    33c0:	8800759c 	.word	0x8800759c
    33c4:	7e37e43c 	.word	0x7e37e43c
    33c8:	000fffff 	.word	0x000fffff
    33cc:	bff00000 	.word	0xbff00000

000033d0 <matherr>:
    33d0:	e3a00000 	mov	r0, #0
    33d4:	e12fff1e 	bx	lr

000033d8 <scalbn>:
    33d8:	e59f3170 	ldr	r3, [pc, #368]	; 3550 <scalbn+0x178>
    33dc:	e0013003 	and	r3, r1, r3
    33e0:	e1b03a43 	asrs	r3, r3, #20
    33e4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
    33e8:	e1a04000 	mov	r4, r0
    33ec:	e1a05001 	mov	r5, r1
    33f0:	e1a06000 	mov	r6, r0
    33f4:	e1a07001 	mov	r7, r1
    33f8:	e1a08002 	mov	r8, r2
    33fc:	1a000011 	bne	3448 <scalbn+0x70>
    3400:	e3c1c102 	bic	r12, r1, #-2147483648	; 0x80000000
    3404:	e19cc000 	orrs	r12, r12, r0
    3408:	0a00001d 	beq	3484 <scalbn+0xac>
    340c:	e59f3140 	ldr	r3, [pc, #320]	; 3554 <scalbn+0x17c>
    3410:	e3a02000 	mov	r2, #0
    3414:	eb0001b7 	bl	3af8 <__aeabi_dmul>
    3418:	e59f3138 	ldr	r3, [pc, #312]	; 3558 <scalbn+0x180>
    341c:	e1580003 	cmp	r8, r3
    3420:	e1a04000 	mov	r4, r0
    3424:	e1a05001 	mov	r5, r1
    3428:	e1a06000 	mov	r6, r0
    342c:	e1a07001 	mov	r7, r1
    3430:	ba000021 	blt	34bc <scalbn+0xe4>
    3434:	e59f3114 	ldr	r3, [pc, #276]	; 3550 <scalbn+0x178>
    3438:	e0013003 	and	r3, r1, r3
    343c:	e1a03a43 	asr	r3, r3, #20
    3440:	e2433036 	sub	r3, r3, #54	; 0x36
    3444:	ea000003 	b	3458 <scalbn+0x80>
    3448:	e59f210c 	ldr	r2, [pc, #268]	; 355c <scalbn+0x184>
    344c:	e1530002 	cmp	r3, r2
    3450:	11a01001 	movne	r1, r1
    3454:	0a000027 	beq	34f8 <scalbn+0x120>
    3458:	e59f2100 	ldr	r2, [pc, #256]	; 3560 <scalbn+0x188>
    345c:	e0833008 	add	r3, r3, r8
    3460:	e1530002 	cmp	r3, r2
    3464:	c1a02004 	movgt	r2, r4
    3468:	c1a03005 	movgt	r3, r5
    346c:	ca000018 	bgt	34d4 <scalbn+0xfc>
    3470:	e3530000 	cmp	r3, #0
    3474:	da000006 	ble	3494 <scalbn+0xbc>
    3478:	e3c1147f 	bic	r1, r1, #2130706432	; 0x7f000000
    347c:	e3c1160f 	bic	r1, r1, #15728640	; 0xf00000
    3480:	e1815a03 	orr	r5, r1, r3, lsl #20
    3484:	e1a00004 	mov	r0, r4
    3488:	e1a01005 	mov	r1, r5
    348c:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
    3490:	e12fff1e 	bx	lr
    3494:	e3730035 	cmn	r3, #53	; 0x35
    3498:	aa00001c 	bge	3510 <scalbn+0x138>
    349c:	e59f30c0 	ldr	r3, [pc, #192]	; 3564 <scalbn+0x18c>
    34a0:	e1580003 	cmp	r8, r3
    34a4:	e1a02004 	mov	r2, r4
    34a8:	e1a03005 	mov	r3, r5
    34ac:	ca000008 	bgt	34d4 <scalbn+0xfc>
    34b0:	e28f1088 	add	r1, pc, #136	; 0x88
    34b4:	e8910003 	ldm	r1, {r0, r1}
    34b8:	eb00002c 	bl	3570 <copysign>
    34bc:	e28f307c 	add	r3, pc, #124	; 0x7c
    34c0:	e893000c 	ldm	r3, {r2, r3}
    34c4:	eb00018b 	bl	3af8 <__aeabi_dmul>
    34c8:	e1a04000 	mov	r4, r0
    34cc:	e1a05001 	mov	r5, r1
    34d0:	eaffffeb 	b	3484 <scalbn+0xac>
    34d4:	e28f106c 	add	r1, pc, #108	; 0x6c
    34d8:	e8910003 	ldm	r1, {r0, r1}
    34dc:	eb000023 	bl	3570 <copysign>
    34e0:	e28f3060 	add	r3, pc, #96	; 0x60
    34e4:	e893000c 	ldm	r3, {r2, r3}
    34e8:	eb000182 	bl	3af8 <__aeabi_dmul>
    34ec:	e1a04000 	mov	r4, r0
    34f0:	e1a05001 	mov	r5, r1
    34f4:	eaffffe2 	b	3484 <scalbn+0xac>
    34f8:	e1a03005 	mov	r3, r5
    34fc:	e1a02000 	mov	r2, r0
    3500:	eb000078 	bl	36e8 <__adddf3>
    3504:	e1a04000 	mov	r4, r0
    3508:	e1a05001 	mov	r5, r1
    350c:	eaffffdc 	b	3484 <scalbn+0xac>
    3510:	e3c1147f 	bic	r1, r1, #2130706432	; 0x7f000000
    3514:	e2833036 	add	r3, r3, #54	; 0x36
    3518:	e3c1160f 	bic	r1, r1, #15728640	; 0xf00000
    351c:	e1815a03 	orr	r5, r1, r3, lsl #20
    3520:	e1a00004 	mov	r0, r4
    3524:	e1a01005 	mov	r1, r5
    3528:	e3a02000 	mov	r2, #0
    352c:	e59f3034 	ldr	r3, [pc, #52]	; 3568 <scalbn+0x190>
    3530:	eb000170 	bl	3af8 <__aeabi_dmul>
    3534:	e1a04000 	mov	r4, r0
    3538:	e1a05001 	mov	r5, r1
    353c:	eaffffd0 	b	3484 <scalbn+0xac>
    3540:	c2f8f359 	.word	0xc2f8f359
    3544:	01a56e1f 	.word	0x01a56e1f
    3548:	8800759c 	.word	0x8800759c
    354c:	7e37e43c 	.word	0x7e37e43c
    3550:	7ff00000 	.word	0x7ff00000
    3554:	43500000 	.word	0x43500000
    3558:	ffff3cb0 	.word	0xffff3cb0
    355c:	000007ff 	.word	0x000007ff
    3560:	000007fe 	.word	0x000007fe
    3564:	0000c350 	.word	0x0000c350
    3568:	3c900000 	.word	0x3c900000
    356c:	e1a00000 	nop			; (mov r0, r0)

00003570 <copysign>:
    3570:	e2033102 	and	r3, r3, #-2147483648	; 0x80000000
    3574:	e3c12102 	bic	r2, r1, #-2147483648	; 0x80000000
    3578:	e92d0030 	push	{r4, r5}
    357c:	e1a05001 	mov	r5, r1
    3580:	e1a04000 	mov	r4, r0
    3584:	e1831002 	orr	r1, r3, r2
    3588:	e8bd0030 	pop	{r4, r5}
    358c:	e12fff1e 	bx	lr

00003590 <__aeabi_idiv>:
    3590:	e3510000 	cmp	r1, #0
    3594:	0a000043 	beq	36a8 <.divsi3_skip_div0_test+0x110>

00003598 <.divsi3_skip_div0_test>:
    3598:	e020c001 	eor	r12, r0, r1
    359c:	42611000 	rsbmi	r1, r1, #0
    35a0:	e2512001 	subs	r2, r1, #1
    35a4:	0a000027 	beq	3648 <.divsi3_skip_div0_test+0xb0>
    35a8:	e1b03000 	movs	r3, r0
    35ac:	42603000 	rsbmi	r3, r0, #0
    35b0:	e1530001 	cmp	r3, r1
    35b4:	9a000026 	bls	3654 <.divsi3_skip_div0_test+0xbc>
    35b8:	e1110002 	tst	r1, r2
    35bc:	0a000028 	beq	3664 <.divsi3_skip_div0_test+0xcc>
    35c0:	e311020e 	tst	r1, #-536870912	; 0xe0000000
    35c4:	01a01181 	lsleq	r1, r1, #3
    35c8:	03a02008 	moveq	r2, #8
    35cc:	13a02001 	movne	r2, #1
    35d0:	e3510201 	cmp	r1, #268435456	; 0x10000000
    35d4:	31510003 	cmpcc	r1, r3
    35d8:	31a01201 	lslcc	r1, r1, #4
    35dc:	31a02202 	lslcc	r2, r2, #4
    35e0:	3afffffa 	bcc	35d0 <.divsi3_skip_div0_test+0x38>
    35e4:	e3510102 	cmp	r1, #-2147483648	; 0x80000000
    35e8:	31510003 	cmpcc	r1, r3
    35ec:	31a01081 	lslcc	r1, r1, #1
    35f0:	31a02082 	lslcc	r2, r2, #1
    35f4:	3afffffa 	bcc	35e4 <.divsi3_skip_div0_test+0x4c>
    35f8:	e3a00000 	mov	r0, #0
    35fc:	e1530001 	cmp	r3, r1
    3600:	20433001 	subcs	r3, r3, r1
    3604:	21800002 	orrcs	r0, r0, r2
    3608:	e15300a1 	cmp	r3, r1, lsr #1
    360c:	204330a1 	subcs	r3, r3, r1, lsr #1
    3610:	218000a2 	orrcs	r0, r0, r2, lsr #1
    3614:	e1530121 	cmp	r3, r1, lsr #2
    3618:	20433121 	subcs	r3, r3, r1, lsr #2
    361c:	21800122 	orrcs	r0, r0, r2, lsr #2
    3620:	e15301a1 	cmp	r3, r1, lsr #3
    3624:	204331a1 	subcs	r3, r3, r1, lsr #3
    3628:	218001a2 	orrcs	r0, r0, r2, lsr #3
    362c:	e3530000 	cmp	r3, #0
    3630:	11b02222 	lsrsne	r2, r2, #4
    3634:	11a01221 	lsrne	r1, r1, #4
    3638:	1affffef 	bne	35fc <.divsi3_skip_div0_test+0x64>
    363c:	e35c0000 	cmp	r12, #0
    3640:	42600000 	rsbmi	r0, r0, #0
    3644:	e12fff1e 	bx	lr
    3648:	e13c0000 	teq	r12, r0
    364c:	42600000 	rsbmi	r0, r0, #0
    3650:	e12fff1e 	bx	lr
    3654:	33a00000 	movcc	r0, #0
    3658:	01a00fcc 	asreq	r0, r12, #31
    365c:	03800001 	orreq	r0, r0, #1
    3660:	e12fff1e 	bx	lr
    3664:	e3510801 	cmp	r1, #65536	; 0x10000
    3668:	21a01821 	lsrcs	r1, r1, #16
    366c:	23a02010 	movcs	r2, #16
    3670:	33a02000 	movcc	r2, #0
    3674:	e3510c01 	cmp	r1, #256	; 0x100
    3678:	21a01421 	lsrcs	r1, r1, #8
    367c:	22822008 	addcs	r2, r2, #8
    3680:	e3510010 	cmp	r1, #16
    3684:	21a01221 	lsrcs	r1, r1, #4
    3688:	22822004 	addcs	r2, r2, #4
    368c:	e3510004 	cmp	r1, #4
    3690:	82822003 	addhi	r2, r2, #3
    3694:	908220a1 	addls	r2, r2, r1, lsr #1
    3698:	e35c0000 	cmp	r12, #0
    369c:	e1a00233 	lsr	r0, r3, r2
    36a0:	42600000 	rsbmi	r0, r0, #0
    36a4:	e12fff1e 	bx	lr
    36a8:	e3500000 	cmp	r0, #0
    36ac:	c3e00102 	mvngt	r0, #-2147483648	; 0x80000000
    36b0:	b3a00102 	movlt	r0, #-2147483648	; 0x80000000
    36b4:	ea000007 	b	36d8 <__aeabi_idiv0>

000036b8 <__aeabi_idivmod>:
    36b8:	e3510000 	cmp	r1, #0
    36bc:	0afffff9 	beq	36a8 <.divsi3_skip_div0_test+0x110>
    36c0:	e92d4003 	push	{r0, r1, lr}
    36c4:	ebffffb3 	bl	3598 <.divsi3_skip_div0_test>
    36c8:	e8bd4006 	pop	{r1, r2, lr}
    36cc:	e0030092 	mul	r3, r2, r0
    36d0:	e0411003 	sub	r1, r1, r3
    36d4:	e12fff1e 	bx	lr

000036d8 <__aeabi_idiv0>:
    36d8:	e12fff1e 	bx	lr

000036dc <__aeabi_drsub>:
    36dc:	e2211102 	eor	r1, r1, #-2147483648	; 0x80000000
    36e0:	ea000000 	b	36e8 <__adddf3>

000036e4 <__aeabi_dsub>:
    36e4:	e2233102 	eor	r3, r3, #-2147483648	; 0x80000000

000036e8 <__adddf3>:
    36e8:	e92d4030 	push	{r4, r5, lr}
    36ec:	e1a04081 	lsl	r4, r1, #1
    36f0:	e1a05083 	lsl	r5, r3, #1
    36f4:	e1340005 	teq	r4, r5
    36f8:	01300002 	teqeq	r0, r2
    36fc:	1194c000 	orrsne	r12, r4, r0
    3700:	1195c002 	orrsne	r12, r5, r2
    3704:	11f0cac4 	mvnsne	r12, r4, asr #21
    3708:	11f0cac5 	mvnsne	r12, r5, asr #21
    370c:	0a00008c 	beq	3944 <__adddf3+0x25c>
    3710:	e1a04aa4 	lsr	r4, r4, #21
    3714:	e0745aa5 	rsbs	r5, r4, r5, lsr #21
    3718:	b2655000 	rsblt	r5, r5, #0
    371c:	da000006 	ble	373c <__adddf3+0x54>
    3720:	e0844005 	add	r4, r4, r5
    3724:	e0202002 	eor	r2, r0, r2
    3728:	e0213003 	eor	r3, r1, r3
    372c:	e0220000 	eor	r0, r2, r0
    3730:	e0231001 	eor	r1, r3, r1
    3734:	e0202002 	eor	r2, r0, r2
    3738:	e0213003 	eor	r3, r1, r3
    373c:	e3550036 	cmp	r5, #54	; 0x36
    3740:	88bd4030 	pophi	{r4, r5, lr}
    3744:	812fff1e 	bxhi	lr
    3748:	e3110102 	tst	r1, #-2147483648	; 0x80000000
    374c:	e1a01601 	lsl	r1, r1, #12
    3750:	e3a0c601 	mov	r12, #1048576	; 0x100000
    3754:	e18c1621 	orr	r1, r12, r1, lsr #12
    3758:	0a000001 	beq	3764 <__adddf3+0x7c>
    375c:	e2700000 	rsbs	r0, r0, #0
    3760:	e2e11000 	rsc	r1, r1, #0
    3764:	e3130102 	tst	r3, #-2147483648	; 0x80000000
    3768:	e1a03603 	lsl	r3, r3, #12
    376c:	e18c3623 	orr	r3, r12, r3, lsr #12
    3770:	0a000001 	beq	377c <__adddf3+0x94>
    3774:	e2722000 	rsbs	r2, r2, #0
    3778:	e2e33000 	rsc	r3, r3, #0
    377c:	e1340005 	teq	r4, r5
    3780:	0a000069 	beq	392c <__adddf3+0x244>
    3784:	e2444001 	sub	r4, r4, #1
    3788:	e275e020 	rsbs	lr, r5, #32
    378c:	ba000005 	blt	37a8 <__adddf3+0xc0>
    3790:	e1a0ce12 	lsl	r12, r2, lr
    3794:	e0900532 	adds	r0, r0, r2, lsr r5
    3798:	e2a11000 	adc	r1, r1, #0
    379c:	e0900e13 	adds	r0, r0, r3, lsl lr
    37a0:	e0b11553 	adcs	r1, r1, r3, asr r5
    37a4:	ea000006 	b	37c4 <__adddf3+0xdc>
    37a8:	e2455020 	sub	r5, r5, #32
    37ac:	e28ee020 	add	lr, lr, #32
    37b0:	e3520001 	cmp	r2, #1
    37b4:	e1a0ce13 	lsl	r12, r3, lr
    37b8:	238cc002 	orrcs	r12, r12, #2
    37bc:	e0900553 	adds	r0, r0, r3, asr r5
    37c0:	e0b11fc3 	adcs	r1, r1, r3, asr #31
    37c4:	e2015102 	and	r5, r1, #-2147483648	; 0x80000000
    37c8:	5a000002 	bpl	37d8 <__adddf3+0xf0>
    37cc:	e27cc000 	rsbs	r12, r12, #0
    37d0:	e2f00000 	rscs	r0, r0, #0
    37d4:	e2e11000 	rsc	r1, r1, #0
    37d8:	e3510601 	cmp	r1, #1048576	; 0x100000
    37dc:	3a00000f 	bcc	3820 <__adddf3+0x138>
    37e0:	e3510602 	cmp	r1, #2097152	; 0x200000
    37e4:	3a000006 	bcc	3804 <__adddf3+0x11c>
    37e8:	e1b010a1 	lsrs	r1, r1, #1
    37ec:	e1b00060 	rrxs	r0, r0
    37f0:	e1a0c06c 	rrx	r12, r12
    37f4:	e2844001 	add	r4, r4, #1
    37f8:	e1a02a84 	lsl	r2, r4, #21
    37fc:	e3720501 	cmn	r2, #4194304	; 0x400000
    3800:	2a00006b 	bcs	39b4 <__adddf3+0x2cc>
    3804:	e35c0102 	cmp	r12, #-2147483648	; 0x80000000
    3808:	01b0c0a0 	lsrseq	r12, r0, #1
    380c:	e2b00000 	adcs	r0, r0, #0
    3810:	e0a11a04 	adc	r1, r1, r4, lsl #20
    3814:	e1811005 	orr	r1, r1, r5
    3818:	e8bd4030 	pop	{r4, r5, lr}
    381c:	e12fff1e 	bx	lr
    3820:	e1b0c08c 	lsls	r12, r12, #1
    3824:	e0b00000 	adcs	r0, r0, r0
    3828:	e0a11001 	adc	r1, r1, r1
    382c:	e3110601 	tst	r1, #1048576	; 0x100000
    3830:	e2444001 	sub	r4, r4, #1
    3834:	1afffff2 	bne	3804 <__adddf3+0x11c>
    3838:	e3310000 	teq	r1, #0
    383c:	13a03014 	movne	r3, #20
    3840:	03a03034 	moveq	r3, #52	; 0x34
    3844:	01a01000 	moveq	r1, r0
    3848:	03a00000 	moveq	r0, #0
    384c:	e1a02001 	mov	r2, r1
    3850:	e3520801 	cmp	r2, #65536	; 0x10000
    3854:	21a02822 	lsrcs	r2, r2, #16
    3858:	22433010 	subcs	r3, r3, #16
    385c:	e3520c01 	cmp	r2, #256	; 0x100
    3860:	21a02422 	lsrcs	r2, r2, #8
    3864:	22433008 	subcs	r3, r3, #8
    3868:	e3520010 	cmp	r2, #16
    386c:	21a02222 	lsrcs	r2, r2, #4
    3870:	22433004 	subcs	r3, r3, #4
    3874:	e3520004 	cmp	r2, #4
    3878:	22433002 	subcs	r3, r3, #2
    387c:	304330a2 	subcc	r3, r3, r2, lsr #1
    3880:	e04331a2 	sub	r3, r3, r2, lsr #3
    3884:	e2532020 	subs	r2, r3, #32
    3888:	aa000007 	bge	38ac <__adddf3+0x1c4>
    388c:	e292200c 	adds	r2, r2, #12
    3890:	da000004 	ble	38a8 <__adddf3+0x1c0>
    3894:	e282c014 	add	r12, r2, #20
    3898:	e262200c 	rsb	r2, r2, #12
    389c:	e1a00c11 	lsl	r0, r1, r12
    38a0:	e1a01231 	lsr	r1, r1, r2
    38a4:	ea000004 	b	38bc <__adddf3+0x1d4>
    38a8:	e2822014 	add	r2, r2, #20
    38ac:	d262c020 	rsble	r12, r2, #32
    38b0:	e1a01211 	lsl	r1, r1, r2
    38b4:	d1811c30 	orrle	r1, r1, r0, lsr r12
    38b8:	d1a00210 	lslle	r0, r0, r2
    38bc:	e0544003 	subs	r4, r4, r3
    38c0:	a0811a04 	addge	r1, r1, r4, lsl #20
    38c4:	a1811005 	orrge	r1, r1, r5
    38c8:	a8bd4030 	popge	{r4, r5, lr}
    38cc:	a12fff1e 	bxge	lr
    38d0:	e1e04004 	mvn	r4, r4
    38d4:	e254401f 	subs	r4, r4, #31
    38d8:	aa00000f 	bge	391c <__adddf3+0x234>
    38dc:	e294400c 	adds	r4, r4, #12
    38e0:	ca000006 	bgt	3900 <__adddf3+0x218>
    38e4:	e2844014 	add	r4, r4, #20
    38e8:	e2642020 	rsb	r2, r4, #32
    38ec:	e1a00430 	lsr	r0, r0, r4
    38f0:	e1800211 	orr	r0, r0, r1, lsl r2
    38f4:	e1851431 	orr	r1, r5, r1, lsr r4
    38f8:	e8bd4030 	pop	{r4, r5, lr}
    38fc:	e12fff1e 	bx	lr
    3900:	e264400c 	rsb	r4, r4, #12
    3904:	e2642020 	rsb	r2, r4, #32
    3908:	e1a00230 	lsr	r0, r0, r2
    390c:	e1800411 	orr	r0, r0, r1, lsl r4
    3910:	e1a01005 	mov	r1, r5
    3914:	e8bd4030 	pop	{r4, r5, lr}
    3918:	e12fff1e 	bx	lr
    391c:	e1a00431 	lsr	r0, r1, r4
    3920:	e1a01005 	mov	r1, r5
    3924:	e8bd4030 	pop	{r4, r5, lr}
    3928:	e12fff1e 	bx	lr
    392c:	e3340000 	teq	r4, #0
    3930:	e2233601 	eor	r3, r3, #1048576	; 0x100000
    3934:	02211601 	eoreq	r1, r1, #1048576	; 0x100000
    3938:	02844001 	addeq	r4, r4, #1
    393c:	12455001 	subne	r5, r5, #1
    3940:	eaffff8f 	b	3784 <__adddf3+0x9c>
    3944:	e1f0cac4 	mvns	r12, r4, asr #21
    3948:	11f0cac5 	mvnsne	r12, r5, asr #21
    394c:	0a00001d 	beq	39c8 <__adddf3+0x2e0>
    3950:	e1340005 	teq	r4, r5
    3954:	01300002 	teqeq	r0, r2
    3958:	0a000004 	beq	3970 <__adddf3+0x288>
    395c:	e194c000 	orrs	r12, r4, r0
    3960:	01a01003 	moveq	r1, r3
    3964:	01a00002 	moveq	r0, r2
    3968:	e8bd4030 	pop	{r4, r5, lr}
    396c:	e12fff1e 	bx	lr
    3970:	e1310003 	teq	r1, r3
    3974:	13a01000 	movne	r1, #0
    3978:	13a00000 	movne	r0, #0
    397c:	18bd4030 	popne	{r4, r5, lr}
    3980:	112fff1e 	bxne	lr
    3984:	e1b0caa4 	lsrs	r12, r4, #21
    3988:	1a000004 	bne	39a0 <__adddf3+0x2b8>
    398c:	e1b00080 	lsls	r0, r0, #1
    3990:	e0b11001 	adcs	r1, r1, r1
    3994:	23811102 	orrcs	r1, r1, #-2147483648	; 0x80000000
    3998:	e8bd4030 	pop	{r4, r5, lr}
    399c:	e12fff1e 	bx	lr
    39a0:	e2944501 	adds	r4, r4, #4194304	; 0x400000
    39a4:	32811601 	addcc	r1, r1, #1048576	; 0x100000
    39a8:	38bd4030 	popcc	{r4, r5, lr}
    39ac:	312fff1e 	bxcc	lr
    39b0:	e2015102 	and	r5, r1, #-2147483648	; 0x80000000
    39b4:	e385147f 	orr	r1, r5, #2130706432	; 0x7f000000
    39b8:	e381160f 	orr	r1, r1, #15728640	; 0xf00000
    39bc:	e3a00000 	mov	r0, #0
    39c0:	e8bd4030 	pop	{r4, r5, lr}
    39c4:	e12fff1e 	bx	lr
    39c8:	e1f0cac4 	mvns	r12, r4, asr #21
    39cc:	11a01003 	movne	r1, r3
    39d0:	11a00002 	movne	r0, r2
    39d4:	01f0cac5 	mvnseq	r12, r5, asr #21
    39d8:	11a03001 	movne	r3, r1
    39dc:	11a02000 	movne	r2, r0
    39e0:	e1904601 	orrs	r4, r0, r1, lsl #12
    39e4:	01925603 	orrseq	r5, r2, r3, lsl #12
    39e8:	01310003 	teqeq	r1, r3
    39ec:	13811702 	orrne	r1, r1, #524288	; 0x80000
    39f0:	e8bd4030 	pop	{r4, r5, lr}
    39f4:	e12fff1e 	bx	lr

000039f8 <__aeabi_ui2d>:
    39f8:	e3300000 	teq	r0, #0
    39fc:	03a01000 	moveq	r1, #0
    3a00:	012fff1e 	bxeq	lr
    3a04:	e92d4030 	push	{r4, r5, lr}
    3a08:	e3a04b01 	mov	r4, #1024	; 0x400
    3a0c:	e2844032 	add	r4, r4, #50	; 0x32
    3a10:	e3a05000 	mov	r5, #0
    3a14:	e3a01000 	mov	r1, #0
    3a18:	eaffff86 	b	3838 <__adddf3+0x150>

00003a1c <__aeabi_i2d>:
    3a1c:	e3300000 	teq	r0, #0
    3a20:	03a01000 	moveq	r1, #0
    3a24:	012fff1e 	bxeq	lr
    3a28:	e92d4030 	push	{r4, r5, lr}
    3a2c:	e3a04b01 	mov	r4, #1024	; 0x400
    3a30:	e2844032 	add	r4, r4, #50	; 0x32
    3a34:	e2105102 	ands	r5, r0, #-2147483648	; 0x80000000
    3a38:	42600000 	rsbmi	r0, r0, #0
    3a3c:	e3a01000 	mov	r1, #0
    3a40:	eaffff7c 	b	3838 <__adddf3+0x150>

00003a44 <__aeabi_f2d>:
    3a44:	e1b02080 	lsls	r2, r0, #1
    3a48:	e1a011c2 	asr	r1, r2, #3
    3a4c:	e1a01061 	rrx	r1, r1
    3a50:	e1a00e02 	lsl	r0, r2, #28
    3a54:	121234ff 	andsne	r3, r2, #-16777216	; 0xff000000
    3a58:	133304ff 	teqne	r3, #-16777216	; 0xff000000
    3a5c:	1221130e 	eorne	r1, r1, #939524096	; 0x38000000
    3a60:	112fff1e 	bxne	lr
    3a64:	e3320000 	teq	r2, #0
    3a68:	133304ff 	teqne	r3, #-16777216	; 0xff000000
    3a6c:	012fff1e 	bxeq	lr
    3a70:	e92d4030 	push	{r4, r5, lr}
    3a74:	e3a04d0e 	mov	r4, #896	; 0x380
    3a78:	e2015102 	and	r5, r1, #-2147483648	; 0x80000000
    3a7c:	e3c11102 	bic	r1, r1, #-2147483648	; 0x80000000
    3a80:	eaffff6c 	b	3838 <__adddf3+0x150>

00003a84 <__aeabi_ul2d>:
    3a84:	e1902001 	orrs	r2, r0, r1
    3a88:	012fff1e 	bxeq	lr
    3a8c:	e92d4030 	push	{r4, r5, lr}
    3a90:	e3a05000 	mov	r5, #0
    3a94:	ea000006 	b	3ab4 <__aeabi_l2d+0x1c>

00003a98 <__aeabi_l2d>:
    3a98:	e1902001 	orrs	r2, r0, r1
    3a9c:	012fff1e 	bxeq	lr
    3aa0:	e92d4030 	push	{r4, r5, lr}
    3aa4:	e2115102 	ands	r5, r1, #-2147483648	; 0x80000000
    3aa8:	5a000001 	bpl	3ab4 <__aeabi_l2d+0x1c>
    3aac:	e2700000 	rsbs	r0, r0, #0
    3ab0:	e2e11000 	rsc	r1, r1, #0
    3ab4:	e3a04b01 	mov	r4, #1024	; 0x400
    3ab8:	e2844032 	add	r4, r4, #50	; 0x32
    3abc:	e1b0cb21 	lsrs	r12, r1, #22
    3ac0:	0affff44 	beq	37d8 <__adddf3+0xf0>
    3ac4:	e3a02003 	mov	r2, #3
    3ac8:	e1b0c1ac 	lsrs	r12, r12, #3
    3acc:	12822003 	addne	r2, r2, #3
    3ad0:	e1b0c1ac 	lsrs	r12, r12, #3
    3ad4:	12822003 	addne	r2, r2, #3
    3ad8:	e08221ac 	add	r2, r2, r12, lsr #3
    3adc:	e2623020 	rsb	r3, r2, #32
    3ae0:	e1a0c310 	lsl	r12, r0, r3
    3ae4:	e1a00230 	lsr	r0, r0, r2
    3ae8:	e1800311 	orr	r0, r0, r1, lsl r3
    3aec:	e1a01231 	lsr	r1, r1, r2
    3af0:	e0844002 	add	r4, r4, r2
    3af4:	eaffff37 	b	37d8 <__adddf3+0xf0>

00003af8 <__aeabi_dmul>:
    3af8:	e92d4070 	push	{r4, r5, r6, lr}
    3afc:	e3a0c0ff 	mov	r12, #255	; 0xff
    3b00:	e38ccc07 	orr	r12, r12, #1792	; 0x700
    3b04:	e01c4a21 	ands	r4, r12, r1, lsr #20
    3b08:	101c5a23 	andsne	r5, r12, r3, lsr #20
    3b0c:	1134000c 	teqne	r4, r12
    3b10:	1135000c 	teqne	r5, r12
    3b14:	0b000075 	bleq	3cf0 <__aeabi_dmul+0x1f8>
    3b18:	e0844005 	add	r4, r4, r5
    3b1c:	e0216003 	eor	r6, r1, r3
    3b20:	e1c11a8c 	bic	r1, r1, r12, lsl #21
    3b24:	e1c33a8c 	bic	r3, r3, r12, lsl #21
    3b28:	e1905601 	orrs	r5, r0, r1, lsl #12
    3b2c:	11925603 	orrsne	r5, r2, r3, lsl #12
    3b30:	e3811601 	orr	r1, r1, #1048576	; 0x100000
    3b34:	e3833601 	orr	r3, r3, #1048576	; 0x100000
    3b38:	0a00001d 	beq	3bb4 <__aeabi_dmul+0xbc>
    3b3c:	e08ec290 	umull	r12, lr, r0, r2
    3b40:	e3a05000 	mov	r5, #0
    3b44:	e0a5e291 	umlal	lr, r5, r1, r2
    3b48:	e2062102 	and	r2, r6, #-2147483648	; 0x80000000
    3b4c:	e0a5e390 	umlal	lr, r5, r0, r3
    3b50:	e3a06000 	mov	r6, #0
    3b54:	e0a65391 	umlal	r5, r6, r1, r3
    3b58:	e33c0000 	teq	r12, #0
    3b5c:	138ee001 	orrne	lr, lr, #1
    3b60:	e24440ff 	sub	r4, r4, #255	; 0xff
    3b64:	e3560c02 	cmp	r6, #512	; 0x200
    3b68:	e2c44c03 	sbc	r4, r4, #768	; 0x300
    3b6c:	2a000002 	bcs	3b7c <__aeabi_dmul+0x84>
    3b70:	e1b0e08e 	lsls	lr, lr, #1
    3b74:	e0b55005 	adcs	r5, r5, r5
    3b78:	e0a66006 	adc	r6, r6, r6
    3b7c:	e1821586 	orr	r1, r2, r6, lsl #11
    3b80:	e1811aa5 	orr	r1, r1, r5, lsr #21
    3b84:	e1a00585 	lsl	r0, r5, #11
    3b88:	e1800aae 	orr	r0, r0, lr, lsr #21
    3b8c:	e1a0e58e 	lsl	lr, lr, #11
    3b90:	e254c0fd 	subs	r12, r4, #253	; 0xfd
    3b94:	835c0c07 	cmphi	r12, #1792	; 0x700
    3b98:	8a000011 	bhi	3be4 <__aeabi_dmul+0xec>
    3b9c:	e35e0102 	cmp	lr, #-2147483648	; 0x80000000
    3ba0:	01b0e0a0 	lsrseq	lr, r0, #1
    3ba4:	e2b00000 	adcs	r0, r0, #0
    3ba8:	e0a11a04 	adc	r1, r1, r4, lsl #20
    3bac:	e8bd4070 	pop	{r4, r5, r6, lr}
    3bb0:	e12fff1e 	bx	lr
    3bb4:	e2066102 	and	r6, r6, #-2147483648	; 0x80000000
    3bb8:	e1861001 	orr	r1, r6, r1
    3bbc:	e1800002 	orr	r0, r0, r2
    3bc0:	e0211003 	eor	r1, r1, r3
    3bc4:	e05440ac 	subs	r4, r4, r12, lsr #1
    3bc8:	c074500c 	rsbsgt	r5, r4, r12
    3bcc:	c1811a04 	orrgt	r1, r1, r4, lsl #20
    3bd0:	c8bd4070 	popgt	{r4, r5, r6, lr}
    3bd4:	c12fff1e 	bxgt	lr
    3bd8:	e3811601 	orr	r1, r1, #1048576	; 0x100000
    3bdc:	e3a0e000 	mov	lr, #0
    3be0:	e2544001 	subs	r4, r4, #1
    3be4:	ca00005d 	bgt	3d60 <__aeabi_dmul+0x268>
    3be8:	e3740036 	cmn	r4, #54	; 0x36
    3bec:	d3a00000 	movle	r0, #0
    3bf0:	d2011102 	andle	r1, r1, #-2147483648	; 0x80000000
    3bf4:	d8bd4070 	pople	{r4, r5, r6, lr}
    3bf8:	d12fff1e 	bxle	lr
    3bfc:	e2644000 	rsb	r4, r4, #0
    3c00:	e2544020 	subs	r4, r4, #32
    3c04:	aa00001a 	bge	3c74 <__aeabi_dmul+0x17c>
    3c08:	e294400c 	adds	r4, r4, #12
    3c0c:	ca00000c 	bgt	3c44 <__aeabi_dmul+0x14c>
    3c10:	e2844014 	add	r4, r4, #20
    3c14:	e2645020 	rsb	r5, r4, #32
    3c18:	e1a03510 	lsl	r3, r0, r5
    3c1c:	e1a00430 	lsr	r0, r0, r4
    3c20:	e1800511 	orr	r0, r0, r1, lsl r5
    3c24:	e2012102 	and	r2, r1, #-2147483648	; 0x80000000
    3c28:	e3c11102 	bic	r1, r1, #-2147483648	; 0x80000000
    3c2c:	e0900fa3 	adds	r0, r0, r3, lsr #31
    3c30:	e0a21431 	adc	r1, r2, r1, lsr r4
    3c34:	e19ee083 	orrs	lr, lr, r3, lsl #1
    3c38:	01c00fa3 	biceq	r0, r0, r3, lsr #31
    3c3c:	e8bd4070 	pop	{r4, r5, r6, lr}
    3c40:	e12fff1e 	bx	lr
    3c44:	e264400c 	rsb	r4, r4, #12
    3c48:	e2645020 	rsb	r5, r4, #32
    3c4c:	e1a03410 	lsl	r3, r0, r4
    3c50:	e1a00530 	lsr	r0, r0, r5
    3c54:	e1800411 	orr	r0, r0, r1, lsl r4
    3c58:	e2011102 	and	r1, r1, #-2147483648	; 0x80000000
    3c5c:	e0900fa3 	adds	r0, r0, r3, lsr #31
    3c60:	e2a11000 	adc	r1, r1, #0
    3c64:	e19ee083 	orrs	lr, lr, r3, lsl #1
    3c68:	01c00fa3 	biceq	r0, r0, r3, lsr #31
    3c6c:	e8bd4070 	pop	{r4, r5, r6, lr}
    3c70:	e12fff1e 	bx	lr
    3c74:	e2645020 	rsb	r5, r4, #32
    3c78:	e18ee510 	orr	lr, lr, r0, lsl r5
    3c7c:	e1a03430 	lsr	r3, r0, r4
    3c80:	e1833511 	orr	r3, r3, r1, lsl r5
    3c84:	e1a00431 	lsr	r0, r1, r4
    3c88:	e2011102 	and	r1, r1, #-2147483648	; 0x80000000
    3c8c:	e1c00431 	bic	r0, r0, r1, lsr r4
    3c90:	e0800fa3 	add	r0, r0, r3, lsr #31
    3c94:	e19ee083 	orrs	lr, lr, r3, lsl #1
    3c98:	01c00fa3 	biceq	r0, r0, r3, lsr #31
    3c9c:	e8bd4070 	pop	{r4, r5, r6, lr}
    3ca0:	e12fff1e 	bx	lr
    3ca4:	e3340000 	teq	r4, #0
    3ca8:	1a000008 	bne	3cd0 <__aeabi_dmul+0x1d8>
    3cac:	e2016102 	and	r6, r1, #-2147483648	; 0x80000000
    3cb0:	e1b00080 	lsls	r0, r0, #1
    3cb4:	e0a11001 	adc	r1, r1, r1
    3cb8:	e3110601 	tst	r1, #1048576	; 0x100000
    3cbc:	02444001 	subeq	r4, r4, #1
    3cc0:	0afffffa 	beq	3cb0 <__aeabi_dmul+0x1b8>
    3cc4:	e1811006 	orr	r1, r1, r6
    3cc8:	e3350000 	teq	r5, #0
    3ccc:	112fff1e 	bxne	lr
    3cd0:	e2036102 	and	r6, r3, #-2147483648	; 0x80000000
    3cd4:	e1b02082 	lsls	r2, r2, #1
    3cd8:	e0a33003 	adc	r3, r3, r3
    3cdc:	e3130601 	tst	r3, #1048576	; 0x100000
    3ce0:	02455001 	subeq	r5, r5, #1
    3ce4:	0afffffa 	beq	3cd4 <__aeabi_dmul+0x1dc>
    3ce8:	e1833006 	orr	r3, r3, r6
    3cec:	e12fff1e 	bx	lr
    3cf0:	e134000c 	teq	r4, r12
    3cf4:	e00c5a23 	and	r5, r12, r3, lsr #20
    3cf8:	1135000c 	teqne	r5, r12
    3cfc:	0a000007 	beq	3d20 <__aeabi_dmul+0x228>
    3d00:	e1906081 	orrs	r6, r0, r1, lsl #1
    3d04:	11926083 	orrsne	r6, r2, r3, lsl #1
    3d08:	1affffe5 	bne	3ca4 <__aeabi_dmul+0x1ac>
    3d0c:	e0211003 	eor	r1, r1, r3
    3d10:	e2011102 	and	r1, r1, #-2147483648	; 0x80000000
    3d14:	e3a00000 	mov	r0, #0
    3d18:	e8bd4070 	pop	{r4, r5, r6, lr}
    3d1c:	e12fff1e 	bx	lr
    3d20:	e1906081 	orrs	r6, r0, r1, lsl #1
    3d24:	01a00002 	moveq	r0, r2
    3d28:	01a01003 	moveq	r1, r3
    3d2c:	11926083 	orrsne	r6, r2, r3, lsl #1
    3d30:	0a000010 	beq	3d78 <__aeabi_dmul+0x280>
    3d34:	e134000c 	teq	r4, r12
    3d38:	1a000001 	bne	3d44 <__aeabi_dmul+0x24c>
    3d3c:	e1906601 	orrs	r6, r0, r1, lsl #12
    3d40:	1a00000c 	bne	3d78 <__aeabi_dmul+0x280>
    3d44:	e135000c 	teq	r5, r12
    3d48:	1a000003 	bne	3d5c <__aeabi_dmul+0x264>
    3d4c:	e1926603 	orrs	r6, r2, r3, lsl #12
    3d50:	11a00002 	movne	r0, r2
    3d54:	11a01003 	movne	r1, r3
    3d58:	1a000006 	bne	3d78 <__aeabi_dmul+0x280>
    3d5c:	e0211003 	eor	r1, r1, r3
    3d60:	e2011102 	and	r1, r1, #-2147483648	; 0x80000000
    3d64:	e381147f 	orr	r1, r1, #2130706432	; 0x7f000000
    3d68:	e381160f 	orr	r1, r1, #15728640	; 0xf00000
    3d6c:	e3a00000 	mov	r0, #0
    3d70:	e8bd4070 	pop	{r4, r5, r6, lr}
    3d74:	e12fff1e 	bx	lr
    3d78:	e381147f 	orr	r1, r1, #2130706432	; 0x7f000000
    3d7c:	e381173e 	orr	r1, r1, #16252928	; 0xf80000
    3d80:	e8bd4070 	pop	{r4, r5, r6, lr}
    3d84:	e12fff1e 	bx	lr

00003d88 <__aeabi_ddiv>:
    3d88:	e92d4070 	push	{r4, r5, r6, lr}
    3d8c:	e3a0c0ff 	mov	r12, #255	; 0xff
    3d90:	e38ccc07 	orr	r12, r12, #1792	; 0x700
    3d94:	e01c4a21 	ands	r4, r12, r1, lsr #20
    3d98:	101c5a23 	andsne	r5, r12, r3, lsr #20
    3d9c:	1134000c 	teqne	r4, r12
    3da0:	1135000c 	teqne	r5, r12
    3da4:	0b00005e 	bleq	3f24 <__aeabi_ddiv+0x19c>
    3da8:	e0444005 	sub	r4, r4, r5
    3dac:	e021e003 	eor	lr, r1, r3
    3db0:	e1925603 	orrs	r5, r2, r3, lsl #12
    3db4:	e1a01601 	lsl	r1, r1, #12
    3db8:	0a00004c 	beq	3ef0 <__aeabi_ddiv+0x168>
    3dbc:	e1a03603 	lsl	r3, r3, #12
    3dc0:	e3a05201 	mov	r5, #268435456	; 0x10000000
    3dc4:	e1853223 	orr	r3, r5, r3, lsr #4
    3dc8:	e1833c22 	orr	r3, r3, r2, lsr #24
    3dcc:	e1a02402 	lsl	r2, r2, #8
    3dd0:	e1855221 	orr	r5, r5, r1, lsr #4
    3dd4:	e1855c20 	orr	r5, r5, r0, lsr #24
    3dd8:	e1a06400 	lsl	r6, r0, #8
    3ddc:	e20e1102 	and	r1, lr, #-2147483648	; 0x80000000
    3de0:	e1550003 	cmp	r5, r3
    3de4:	01560002 	cmpeq	r6, r2
    3de8:	e2a440fd 	adc	r4, r4, #253	; 0xfd
    3dec:	e2844c03 	add	r4, r4, #768	; 0x300
    3df0:	2a000001 	bcs	3dfc <__aeabi_ddiv+0x74>
    3df4:	e1b030a3 	lsrs	r3, r3, #1
    3df8:	e1a02062 	rrx	r2, r2
    3dfc:	e0566002 	subs	r6, r6, r2
    3e00:	e0c55003 	sbc	r5, r5, r3
    3e04:	e1b030a3 	lsrs	r3, r3, #1
    3e08:	e1a02062 	rrx	r2, r2
    3e0c:	e3a00601 	mov	r0, #1048576	; 0x100000
    3e10:	e3a0c702 	mov	r12, #524288	; 0x80000
    3e14:	e056e002 	subs	lr, r6, r2
    3e18:	e0d5e003 	sbcs	lr, r5, r3
    3e1c:	20466002 	subcs	r6, r6, r2
    3e20:	21a0500e 	movcs	r5, lr
    3e24:	2180000c 	orrcs	r0, r0, r12
    3e28:	e1b030a3 	lsrs	r3, r3, #1
    3e2c:	e1a02062 	rrx	r2, r2
    3e30:	e056e002 	subs	lr, r6, r2
    3e34:	e0d5e003 	sbcs	lr, r5, r3
    3e38:	20466002 	subcs	r6, r6, r2
    3e3c:	21a0500e 	movcs	r5, lr
    3e40:	218000ac 	orrcs	r0, r0, r12, lsr #1
    3e44:	e1b030a3 	lsrs	r3, r3, #1
    3e48:	e1a02062 	rrx	r2, r2
    3e4c:	e056e002 	subs	lr, r6, r2
    3e50:	e0d5e003 	sbcs	lr, r5, r3
    3e54:	20466002 	subcs	r6, r6, r2
    3e58:	21a0500e 	movcs	r5, lr
    3e5c:	2180012c 	orrcs	r0, r0, r12, lsr #2
    3e60:	e1b030a3 	lsrs	r3, r3, #1
    3e64:	e1a02062 	rrx	r2, r2
    3e68:	e056e002 	subs	lr, r6, r2
    3e6c:	e0d5e003 	sbcs	lr, r5, r3
    3e70:	20466002 	subcs	r6, r6, r2
    3e74:	21a0500e 	movcs	r5, lr
    3e78:	218001ac 	orrcs	r0, r0, r12, lsr #3
    3e7c:	e195e006 	orrs	lr, r5, r6
    3e80:	0a00000d 	beq	3ebc <__aeabi_ddiv+0x134>
    3e84:	e1a05205 	lsl	r5, r5, #4
    3e88:	e1855e26 	orr	r5, r5, r6, lsr #28
    3e8c:	e1a06206 	lsl	r6, r6, #4
    3e90:	e1a03183 	lsl	r3, r3, #3
    3e94:	e1833ea2 	orr	r3, r3, r2, lsr #29
    3e98:	e1a02182 	lsl	r2, r2, #3
    3e9c:	e1b0c22c 	lsrs	r12, r12, #4
    3ea0:	1affffdb 	bne	3e14 <__aeabi_ddiv+0x8c>
    3ea4:	e3110601 	tst	r1, #1048576	; 0x100000
    3ea8:	1a000006 	bne	3ec8 <__aeabi_ddiv+0x140>
    3eac:	e1811000 	orr	r1, r1, r0
    3eb0:	e3a00000 	mov	r0, #0
    3eb4:	e3a0c102 	mov	r12, #-2147483648	; 0x80000000
    3eb8:	eaffffd5 	b	3e14 <__aeabi_ddiv+0x8c>
    3ebc:	e3110601 	tst	r1, #1048576	; 0x100000
    3ec0:	01811000 	orreq	r1, r1, r0
    3ec4:	03a00000 	moveq	r0, #0
    3ec8:	e254c0fd 	subs	r12, r4, #253	; 0xfd
    3ecc:	835c0c07 	cmphi	r12, #1792	; 0x700
    3ed0:	8affff43 	bhi	3be4 <__aeabi_dmul+0xec>
    3ed4:	e055c003 	subs	r12, r5, r3
    3ed8:	0056c002 	subseq	r12, r6, r2
    3edc:	01b0c0a0 	lsrseq	r12, r0, #1
    3ee0:	e2b00000 	adcs	r0, r0, #0
    3ee4:	e0a11a04 	adc	r1, r1, r4, lsl #20
    3ee8:	e8bd4070 	pop	{r4, r5, r6, lr}
    3eec:	e12fff1e 	bx	lr
    3ef0:	e20ee102 	and	lr, lr, #-2147483648	; 0x80000000
    3ef4:	e18e1621 	orr	r1, lr, r1, lsr #12
    3ef8:	e09440ac 	adds	r4, r4, r12, lsr #1
    3efc:	c074500c 	rsbsgt	r5, r4, r12
    3f00:	c1811a04 	orrgt	r1, r1, r4, lsl #20
    3f04:	c8bd4070 	popgt	{r4, r5, r6, lr}
    3f08:	c12fff1e 	bxgt	lr
    3f0c:	e3811601 	orr	r1, r1, #1048576	; 0x100000
    3f10:	e3a0e000 	mov	lr, #0
    3f14:	e2544001 	subs	r4, r4, #1
    3f18:	eaffff31 	b	3be4 <__aeabi_dmul+0xec>
    3f1c:	e185e006 	orr	lr, r5, r6
    3f20:	eaffff2f 	b	3be4 <__aeabi_dmul+0xec>
    3f24:	e00c5a23 	and	r5, r12, r3, lsr #20
    3f28:	e134000c 	teq	r4, r12
    3f2c:	0135000c 	teqeq	r5, r12
    3f30:	0affff90 	beq	3d78 <__aeabi_dmul+0x280>
    3f34:	e134000c 	teq	r4, r12
    3f38:	1a000006 	bne	3f58 <__aeabi_ddiv+0x1d0>
    3f3c:	e1904601 	orrs	r4, r0, r1, lsl #12
    3f40:	1affff8c 	bne	3d78 <__aeabi_dmul+0x280>
    3f44:	e135000c 	teq	r5, r12
    3f48:	1affff83 	bne	3d5c <__aeabi_dmul+0x264>
    3f4c:	e1a00002 	mov	r0, r2
    3f50:	e1a01003 	mov	r1, r3
    3f54:	eaffff87 	b	3d78 <__aeabi_dmul+0x280>
    3f58:	e135000c 	teq	r5, r12
    3f5c:	1a000004 	bne	3f74 <__aeabi_ddiv+0x1ec>
    3f60:	e1925603 	orrs	r5, r2, r3, lsl #12
    3f64:	0affff68 	beq	3d0c <__aeabi_dmul+0x214>
    3f68:	e1a00002 	mov	r0, r2
    3f6c:	e1a01003 	mov	r1, r3
    3f70:	eaffff80 	b	3d78 <__aeabi_dmul+0x280>
    3f74:	e1906081 	orrs	r6, r0, r1, lsl #1
    3f78:	11926083 	orrsne	r6, r2, r3, lsl #1
    3f7c:	1affff48 	bne	3ca4 <__aeabi_dmul+0x1ac>
    3f80:	e1904081 	orrs	r4, r0, r1, lsl #1
    3f84:	1affff74 	bne	3d5c <__aeabi_dmul+0x264>
    3f88:	e1925083 	orrs	r5, r2, r3, lsl #1
    3f8c:	1affff5e 	bne	3d0c <__aeabi_dmul+0x214>
    3f90:	eaffff78 	b	3d78 <__aeabi_dmul+0x280>

00003f94 <__gedf2>:
    3f94:	e3e0c000 	mvn	r12, #0
    3f98:	ea000002 	b	3fa8 <__cmpdf2+0x4>

00003f9c <__ledf2>:
    3f9c:	e3a0c001 	mov	r12, #1
    3fa0:	ea000000 	b	3fa8 <__cmpdf2+0x4>

00003fa4 <__cmpdf2>:
    3fa4:	e3a0c001 	mov	r12, #1
    3fa8:	e52dc004 	push	{r12}		; (str r12, [sp, #-4]!)
    3fac:	e1a0c081 	lsl	r12, r1, #1
    3fb0:	e1f0cacc 	mvns	r12, r12, asr #21
    3fb4:	e1a0c083 	lsl	r12, r3, #1
    3fb8:	11f0cacc 	mvnsne	r12, r12, asr #21
    3fbc:	0a00000e 	beq	3ffc <__cmpdf2+0x58>
    3fc0:	e28dd004 	add	sp, sp, #4
    3fc4:	e190c081 	orrs	r12, r0, r1, lsl #1
    3fc8:	0192c083 	orrseq	r12, r2, r3, lsl #1
    3fcc:	11310003 	teqne	r1, r3
    3fd0:	01300002 	teqeq	r0, r2
    3fd4:	03a00000 	moveq	r0, #0
    3fd8:	012fff1e 	bxeq	lr
    3fdc:	e3700000 	cmn	r0, #0
    3fe0:	e1310003 	teq	r1, r3
    3fe4:	51510003 	cmppl	r1, r3
    3fe8:	01500002 	cmpeq	r0, r2
    3fec:	21a00fc3 	asrcs	r0, r3, #31
    3ff0:	31e00fc3 	mvncc	r0, r3, asr #31
    3ff4:	e3800001 	orr	r0, r0, #1
    3ff8:	e12fff1e 	bx	lr
    3ffc:	e1a0c081 	lsl	r12, r1, #1
    4000:	e1f0cacc 	mvns	r12, r12, asr #21
    4004:	1a000001 	bne	4010 <__cmpdf2+0x6c>
    4008:	e190c601 	orrs	r12, r0, r1, lsl #12
    400c:	1a000004 	bne	4024 <__cmpdf2+0x80>
    4010:	e1a0c083 	lsl	r12, r3, #1
    4014:	e1f0cacc 	mvns	r12, r12, asr #21
    4018:	1affffe8 	bne	3fc0 <__cmpdf2+0x1c>
    401c:	e192c603 	orrs	r12, r2, r3, lsl #12
    4020:	0affffe6 	beq	3fc0 <__cmpdf2+0x1c>
    4024:	e49d0004 	pop	{r0}		; (ldr r0, [sp], #4)
    4028:	e12fff1e 	bx	lr

0000402c <__aeabi_cdrcmple>:
    402c:	e1a0c000 	mov	r12, r0
    4030:	e1a00002 	mov	r0, r2
    4034:	e1a0200c 	mov	r2, r12
    4038:	e1a0c001 	mov	r12, r1
    403c:	e1a01003 	mov	r1, r3
    4040:	e1a0300c 	mov	r3, r12
    4044:	eaffffff 	b	4048 <__aeabi_cdcmpeq>

00004048 <__aeabi_cdcmpeq>:
    4048:	e92d4001 	push	{r0, lr}
    404c:	ebffffd4 	bl	3fa4 <__cmpdf2>
    4050:	e3500000 	cmp	r0, #0
    4054:	43700000 	cmnmi	r0, #0
    4058:	e8bd4001 	pop	{r0, lr}
    405c:	e12fff1e 	bx	lr

00004060 <__aeabi_dcmpeq>:
    4060:	e52de008 	str	lr, [sp, #-8]!
    4064:	ebfffff7 	bl	4048 <__aeabi_cdcmpeq>
    4068:	03a00001 	moveq	r0, #1
    406c:	13a00000 	movne	r0, #0
    4070:	e49de008 	ldr	lr, [sp], #8
    4074:	e12fff1e 	bx	lr

00004078 <__aeabi_dcmplt>:
    4078:	e52de008 	str	lr, [sp, #-8]!
    407c:	ebfffff1 	bl	4048 <__aeabi_cdcmpeq>
    4080:	33a00001 	movcc	r0, #1
    4084:	23a00000 	movcs	r0, #0
    4088:	e49de008 	ldr	lr, [sp], #8
    408c:	e12fff1e 	bx	lr

00004090 <__aeabi_dcmple>:
    4090:	e52de008 	str	lr, [sp, #-8]!
    4094:	ebffffeb 	bl	4048 <__aeabi_cdcmpeq>
    4098:	93a00001 	movls	r0, #1
    409c:	83a00000 	movhi	r0, #0
    40a0:	e49de008 	ldr	lr, [sp], #8
    40a4:	e12fff1e 	bx	lr

000040a8 <__aeabi_dcmpge>:
    40a8:	e52de008 	str	lr, [sp, #-8]!
    40ac:	ebffffde 	bl	402c <__aeabi_cdrcmple>
    40b0:	93a00001 	movls	r0, #1
    40b4:	83a00000 	movhi	r0, #0
    40b8:	e49de008 	ldr	lr, [sp], #8
    40bc:	e12fff1e 	bx	lr

000040c0 <__aeabi_dcmpgt>:
    40c0:	e52de008 	str	lr, [sp, #-8]!
    40c4:	ebffffd8 	bl	402c <__aeabi_cdrcmple>
    40c8:	33a00001 	movcc	r0, #1
    40cc:	23a00000 	movcs	r0, #0
    40d0:	e49de008 	ldr	lr, [sp], #8
    40d4:	e12fff1e 	bx	lr

000040d8 <__aeabi_d2iz>:
    40d8:	e1a02081 	lsl	r2, r1, #1
    40dc:	e2922602 	adds	r2, r2, #2097152	; 0x200000
    40e0:	2a00000c 	bcs	4118 <__aeabi_d2iz+0x40>
    40e4:	5a000009 	bpl	4110 <__aeabi_d2iz+0x38>
    40e8:	e3e03e3e 	mvn	r3, #992	; 0x3e0
    40ec:	e0532ac2 	subs	r2, r3, r2, asr #21
    40f0:	9a00000a 	bls	4120 <__aeabi_d2iz+0x48>
    40f4:	e1a03581 	lsl	r3, r1, #11
    40f8:	e3833102 	orr	r3, r3, #-2147483648	; 0x80000000
    40fc:	e1833aa0 	orr	r3, r3, r0, lsr #21
    4100:	e3110102 	tst	r1, #-2147483648	; 0x80000000
    4104:	e1a00233 	lsr	r0, r3, r2
    4108:	12600000 	rsbne	r0, r0, #0
    410c:	e12fff1e 	bx	lr
    4110:	e3a00000 	mov	r0, #0
    4114:	e12fff1e 	bx	lr
    4118:	e1900601 	orrs	r0, r0, r1, lsl #12
    411c:	1a000002 	bne	412c <__aeabi_d2iz+0x54>
    4120:	e2110102 	ands	r0, r1, #-2147483648	; 0x80000000
    4124:	03e00102 	mvneq	r0, #-2147483648	; 0x80000000
    4128:	e12fff1e 	bx	lr
    412c:	e3a00000 	mov	r0, #0
    4130:	e12fff1e 	bx	lr

00004134 <__aeabi_d2f>:
    4134:	e1a02081 	lsl	r2, r1, #1
    4138:	e2523207 	subs	r3, r2, #1879048192	; 0x70000000
    413c:	2253c602 	subscs	r12, r3, #2097152	; 0x200000
    4140:	227cc57f 	rsbscs	r12, r12, #532676608	; 0x1fc00000
    4144:	9a000006 	bls	4164 <__aeabi_d2f+0x30>
    4148:	e201c102 	and	r12, r1, #-2147483648	; 0x80000000
    414c:	e1a02180 	lsl	r2, r0, #3
    4150:	e18c0ea0 	orr	r0, r12, r0, lsr #29
    4154:	e3520102 	cmp	r2, #-2147483648	; 0x80000000
    4158:	e0a00103 	adc	r0, r0, r3, lsl #2
    415c:	03c00001 	biceq	r0, r0, #1
    4160:	e12fff1e 	bx	lr
    4164:	e3110101 	tst	r1, #1073741824	; 0x40000000
    4168:	1a00000f 	bne	41ac <__aeabi_d2f+0x78>
    416c:	e293262e 	adds	r2, r3, #48234496	; 0x2e00000
    4170:	b2010102 	andlt	r0, r1, #-2147483648	; 0x80000000
    4174:	b12fff1e 	bxlt	lr
    4178:	e3811601 	orr	r1, r1, #1048576	; 0x100000
    417c:	e1a02aa2 	lsr	r2, r2, #21
    4180:	e2622018 	rsb	r2, r2, #24
    4184:	e262c020 	rsb	r12, r2, #32
    4188:	e1b03c10 	lsls	r3, r0, r12
    418c:	e1a00230 	lsr	r0, r0, r2
    4190:	13800001 	orrne	r0, r0, #1
    4194:	e1a03581 	lsl	r3, r1, #11
    4198:	e1a035a3 	lsr	r3, r3, #11
    419c:	e1800c13 	orr	r0, r0, r3, lsl r12
    41a0:	e1a03233 	lsr	r3, r3, r2
    41a4:	e1a03083 	lsl	r3, r3, #1
    41a8:	eaffffe6 	b	4148 <__aeabi_d2f+0x14>
    41ac:	e1f03ac2 	mvns	r3, r2, asr #21
    41b0:	1a000003 	bne	41c4 <__aeabi_d2f+0x90>
    41b4:	e1903601 	orrs	r3, r0, r1, lsl #12
    41b8:	13a0047f 	movne	r0, #2130706432	; 0x7f000000
    41bc:	13800503 	orrne	r0, r0, #12582912	; 0xc00000
    41c0:	112fff1e 	bxne	lr
    41c4:	e2010102 	and	r0, r1, #-2147483648	; 0x80000000
    41c8:	e380047f 	orr	r0, r0, #2130706432	; 0x7f000000
    41cc:	e3800502 	orr	r0, r0, #8388608	; 0x800000
    41d0:	e12fff1e 	bx	lr

000041d4 <__aeabi_frsub>:
    41d4:	e2200102 	eor	r0, r0, #-2147483648	; 0x80000000
    41d8:	ea000000 	b	41e0 <__addsf3>

000041dc <__aeabi_fsub>:
    41dc:	e2211102 	eor	r1, r1, #-2147483648	; 0x80000000

000041e0 <__addsf3>:
    41e0:	e1b02080 	lsls	r2, r0, #1
    41e4:	11b03081 	lslsne	r3, r1, #1
    41e8:	11320003 	teqne	r2, r3
    41ec:	11f0cc42 	mvnsne	r12, r2, asr #24
    41f0:	11f0cc43 	mvnsne	r12, r3, asr #24
    41f4:	0a000047 	beq	4318 <__addsf3+0x138>
    41f8:	e1a02c22 	lsr	r2, r2, #24
    41fc:	e0723c23 	rsbs	r3, r2, r3, lsr #24
    4200:	c0822003 	addgt	r2, r2, r3
    4204:	c0201001 	eorgt	r1, r0, r1
    4208:	c0210000 	eorgt	r0, r1, r0
    420c:	c0201001 	eorgt	r1, r0, r1
    4210:	b2633000 	rsblt	r3, r3, #0
    4214:	e3530019 	cmp	r3, #25
    4218:	812fff1e 	bxhi	lr
    421c:	e3100102 	tst	r0, #-2147483648	; 0x80000000
    4220:	e3800502 	orr	r0, r0, #8388608	; 0x800000
    4224:	e3c004ff 	bic	r0, r0, #-16777216	; 0xff000000
    4228:	12600000 	rsbne	r0, r0, #0
    422c:	e3110102 	tst	r1, #-2147483648	; 0x80000000
    4230:	e3811502 	orr	r1, r1, #8388608	; 0x800000
    4234:	e3c114ff 	bic	r1, r1, #-16777216	; 0xff000000
    4238:	12611000 	rsbne	r1, r1, #0
    423c:	e1320003 	teq	r2, r3
    4240:	0a00002e 	beq	4300 <__addsf3+0x120>
    4244:	e2422001 	sub	r2, r2, #1
    4248:	e0900351 	adds	r0, r0, r1, asr r3
    424c:	e2633020 	rsb	r3, r3, #32
    4250:	e1a01311 	lsl	r1, r1, r3
    4254:	e2003102 	and	r3, r0, #-2147483648	; 0x80000000
    4258:	5a000001 	bpl	4264 <__addsf3+0x84>
    425c:	e2711000 	rsbs	r1, r1, #0
    4260:	e2e00000 	rsc	r0, r0, #0
    4264:	e3500502 	cmp	r0, #8388608	; 0x800000
    4268:	3a00000b 	bcc	429c <__addsf3+0xbc>
    426c:	e3500401 	cmp	r0, #16777216	; 0x1000000
    4270:	3a000004 	bcc	4288 <__addsf3+0xa8>
    4274:	e1b000a0 	lsrs	r0, r0, #1
    4278:	e1a01061 	rrx	r1, r1
    427c:	e2822001 	add	r2, r2, #1
    4280:	e35200fe 	cmp	r2, #254	; 0xfe
    4284:	2a000038 	bcs	436c <__addsf3+0x18c>
    4288:	e3510102 	cmp	r1, #-2147483648	; 0x80000000
    428c:	e0a00b82 	adc	r0, r0, r2, lsl #23
    4290:	03c00001 	biceq	r0, r0, #1
    4294:	e1800003 	orr	r0, r0, r3
    4298:	e12fff1e 	bx	lr
    429c:	e1b01081 	lsls	r1, r1, #1
    42a0:	e0a00000 	adc	r0, r0, r0
    42a4:	e3100502 	tst	r0, #8388608	; 0x800000
    42a8:	e2422001 	sub	r2, r2, #1
    42ac:	1afffff5 	bne	4288 <__addsf3+0xa8>
    42b0:	e1b0c620 	lsrs	r12, r0, #12
    42b4:	01a00600 	lsleq	r0, r0, #12
    42b8:	0242200c 	subeq	r2, r2, #12
    42bc:	e31008ff 	tst	r0, #16711680	; 0xff0000
    42c0:	01a00400 	lsleq	r0, r0, #8
    42c4:	02422008 	subeq	r2, r2, #8
    42c8:	e310060f 	tst	r0, #15728640	; 0xf00000
    42cc:	01a00200 	lsleq	r0, r0, #4
    42d0:	02422004 	subeq	r2, r2, #4
    42d4:	e3100503 	tst	r0, #12582912	; 0xc00000
    42d8:	01a00100 	lsleq	r0, r0, #2
    42dc:	02422002 	subeq	r2, r2, #2
    42e0:	e3500502 	cmp	r0, #8388608	; 0x800000
    42e4:	31a00080 	lslcc	r0, r0, #1
    42e8:	e2d22000 	sbcs	r2, r2, #0
    42ec:	a0800b82 	addge	r0, r0, r2, lsl #23
    42f0:	b2622000 	rsblt	r2, r2, #0
    42f4:	a1800003 	orrge	r0, r0, r3
    42f8:	b1830230 	orrlt	r0, r3, r0, lsr r2
    42fc:	e12fff1e 	bx	lr
    4300:	e3320000 	teq	r2, #0
    4304:	e2211502 	eor	r1, r1, #8388608	; 0x800000
    4308:	02200502 	eoreq	r0, r0, #8388608	; 0x800000
    430c:	02822001 	addeq	r2, r2, #1
    4310:	12433001 	subne	r3, r3, #1
    4314:	eaffffca 	b	4244 <__addsf3+0x64>
    4318:	e1a03081 	lsl	r3, r1, #1
    431c:	e1f0cc42 	mvns	r12, r2, asr #24
    4320:	11f0cc43 	mvnsne	r12, r3, asr #24
    4324:	0a000013 	beq	4378 <__addsf3+0x198>
    4328:	e1320003 	teq	r2, r3
    432c:	0a000002 	beq	433c <__addsf3+0x15c>
    4330:	e3320000 	teq	r2, #0
    4334:	01a00001 	moveq	r0, r1
    4338:	e12fff1e 	bx	lr
    433c:	e1300001 	teq	r0, r1
    4340:	13a00000 	movne	r0, #0
    4344:	112fff1e 	bxne	lr
    4348:	e31204ff 	tst	r2, #-16777216	; 0xff000000
    434c:	1a000002 	bne	435c <__addsf3+0x17c>
    4350:	e1b00080 	lsls	r0, r0, #1
    4354:	23800102 	orrcs	r0, r0, #-2147483648	; 0x80000000
    4358:	e12fff1e 	bx	lr
    435c:	e2922402 	adds	r2, r2, #33554432	; 0x2000000
    4360:	32800502 	addcc	r0, r0, #8388608	; 0x800000
    4364:	312fff1e 	bxcc	lr
    4368:	e2003102 	and	r3, r0, #-2147483648	; 0x80000000
    436c:	e383047f 	orr	r0, r3, #2130706432	; 0x7f000000
    4370:	e3800502 	orr	r0, r0, #8388608	; 0x800000
    4374:	e12fff1e 	bx	lr
    4378:	e1f02c42 	mvns	r2, r2, asr #24
    437c:	11a00001 	movne	r0, r1
    4380:	01f03c43 	mvnseq	r3, r3, asr #24
    4384:	11a01000 	movne	r1, r0
    4388:	e1b02480 	lsls	r2, r0, #9
    438c:	01b03481 	lslseq	r3, r1, #9
    4390:	01300001 	teqeq	r0, r1
    4394:	13800501 	orrne	r0, r0, #4194304	; 0x400000
    4398:	e12fff1e 	bx	lr

0000439c <__aeabi_ui2f>:
    439c:	e3a03000 	mov	r3, #0
    43a0:	ea000001 	b	43ac <__aeabi_i2f+0x8>

000043a4 <__aeabi_i2f>:
    43a4:	e2103102 	ands	r3, r0, #-2147483648	; 0x80000000
    43a8:	42600000 	rsbmi	r0, r0, #0
    43ac:	e1b0c000 	movs	r12, r0
    43b0:	012fff1e 	bxeq	lr
    43b4:	e383344b 	orr	r3, r3, #1258291200	; 0x4b000000
    43b8:	e1a01000 	mov	r1, r0
    43bc:	e3a00000 	mov	r0, #0
    43c0:	ea00000f 	b	4404 <__aeabi_l2f+0x30>

000043c4 <__aeabi_ul2f>:
    43c4:	e1902001 	orrs	r2, r0, r1
    43c8:	012fff1e 	bxeq	lr
    43cc:	e3a03000 	mov	r3, #0
    43d0:	ea000005 	b	43ec <__aeabi_l2f+0x18>

000043d4 <__aeabi_l2f>:
    43d4:	e1902001 	orrs	r2, r0, r1
    43d8:	012fff1e 	bxeq	lr
    43dc:	e2113102 	ands	r3, r1, #-2147483648	; 0x80000000
    43e0:	5a000001 	bpl	43ec <__aeabi_l2f+0x18>
    43e4:	e2700000 	rsbs	r0, r0, #0
    43e8:	e2e11000 	rsc	r1, r1, #0
    43ec:	e1b0c001 	movs	r12, r1
    43f0:	01a0c000 	moveq	r12, r0
    43f4:	01a01000 	moveq	r1, r0
    43f8:	03a00000 	moveq	r0, #0
    43fc:	e383345b 	orr	r3, r3, #1526726656	; 0x5b000000
    4400:	02433201 	subeq	r3, r3, #268435456	; 0x10000000
    4404:	e2433502 	sub	r3, r3, #8388608	; 0x800000
    4408:	e3a02017 	mov	r2, #23
    440c:	e35c0801 	cmp	r12, #65536	; 0x10000
    4410:	21a0c82c 	lsrcs	r12, r12, #16
    4414:	22422010 	subcs	r2, r2, #16
    4418:	e35c0c01 	cmp	r12, #256	; 0x100
    441c:	21a0c42c 	lsrcs	r12, r12, #8
    4420:	22422008 	subcs	r2, r2, #8
    4424:	e35c0010 	cmp	r12, #16
    4428:	21a0c22c 	lsrcs	r12, r12, #4
    442c:	22422004 	subcs	r2, r2, #4
    4430:	e35c0004 	cmp	r12, #4
    4434:	22422002 	subcs	r2, r2, #2
    4438:	304220ac 	subcc	r2, r2, r12, lsr #1
    443c:	e05221ac 	subs	r2, r2, r12, lsr #3
    4440:	e0433b82 	sub	r3, r3, r2, lsl #23
    4444:	ba000006 	blt	4464 <__aeabi_l2f+0x90>
    4448:	e0833211 	add	r3, r3, r1, lsl r2
    444c:	e1a0c210 	lsl	r12, r0, r2
    4450:	e2622020 	rsb	r2, r2, #32
    4454:	e35c0102 	cmp	r12, #-2147483648	; 0x80000000
    4458:	e0a30230 	adc	r0, r3, r0, lsr r2
    445c:	03c00001 	biceq	r0, r0, #1
    4460:	e12fff1e 	bx	lr
    4464:	e2822020 	add	r2, r2, #32
    4468:	e1a0c211 	lsl	r12, r1, r2
    446c:	e2622020 	rsb	r2, r2, #32
    4470:	e190008c 	orrs	r0, r0, r12, lsl #1
    4474:	e0a30231 	adc	r0, r3, r1, lsr r2
    4478:	01c00fac 	biceq	r0, r0, r12, lsr #31
    447c:	e12fff1e 	bx	lr

00004480 <__aeabi_fmul>:
    4480:	e3a0c0ff 	mov	r12, #255	; 0xff
    4484:	e01c2ba0 	ands	r2, r12, r0, lsr #23
    4488:	101c3ba1 	andsne	r3, r12, r1, lsr #23
    448c:	1132000c 	teqne	r2, r12
    4490:	1133000c 	teqne	r3, r12
    4494:	0a00003e 	beq	4594 <__aeabi_fmul+0x114>
    4498:	e0822003 	add	r2, r2, r3
    449c:	e020c001 	eor	r12, r0, r1
    44a0:	e1b00480 	lsls	r0, r0, #9
    44a4:	11b01481 	lslsne	r1, r1, #9
    44a8:	0a000010 	beq	44f0 <__aeabi_fmul+0x70>
    44ac:	e3a03302 	mov	r3, #134217728	; 0x8000000
    44b0:	e18302a0 	orr	r0, r3, r0, lsr #5
    44b4:	e18312a1 	orr	r1, r3, r1, lsr #5
    44b8:	e0813190 	umull	r3, r1, r0, r1
    44bc:	e20c0102 	and	r0, r12, #-2147483648	; 0x80000000
    44c0:	e3510502 	cmp	r1, #8388608	; 0x800000
    44c4:	31a01081 	lslcc	r1, r1, #1
    44c8:	31811fa3 	orrcc	r1, r1, r3, lsr #31
    44cc:	31a03083 	lslcc	r3, r3, #1
    44d0:	e1800001 	orr	r0, r0, r1
    44d4:	e2c2207f 	sbc	r2, r2, #127	; 0x7f
    44d8:	e35200fd 	cmp	r2, #253	; 0xfd
    44dc:	8a00000f 	bhi	4520 <__aeabi_fmul+0xa0>
    44e0:	e3530102 	cmp	r3, #-2147483648	; 0x80000000
    44e4:	e0a00b82 	adc	r0, r0, r2, lsl #23
    44e8:	03c00001 	biceq	r0, r0, #1
    44ec:	e12fff1e 	bx	lr
    44f0:	e3300000 	teq	r0, #0
    44f4:	e20cc102 	and	r12, r12, #-2147483648	; 0x80000000
    44f8:	01a01481 	lsleq	r1, r1, #9
    44fc:	e18c04a0 	orr	r0, r12, r0, lsr #9
    4500:	e18004a1 	orr	r0, r0, r1, lsr #9
    4504:	e252207f 	subs	r2, r2, #127	; 0x7f
    4508:	c27230ff 	rsbsgt	r3, r2, #255	; 0xff
    450c:	c1800b82 	orrgt	r0, r0, r2, lsl #23
    4510:	c12fff1e 	bxgt	lr
    4514:	e3800502 	orr	r0, r0, #8388608	; 0x800000
    4518:	e3a03000 	mov	r3, #0
    451c:	e2522001 	subs	r2, r2, #1
    4520:	ca000035 	bgt	45fc <__aeabi_fmul+0x17c>
    4524:	e3720019 	cmn	r2, #25
    4528:	d2000102 	andle	r0, r0, #-2147483648	; 0x80000000
    452c:	d12fff1e 	bxle	lr
    4530:	e2622000 	rsb	r2, r2, #0
    4534:	e1b01080 	lsls	r1, r0, #1
    4538:	e1a01231 	lsr	r1, r1, r2
    453c:	e2622020 	rsb	r2, r2, #32
    4540:	e1a0c210 	lsl	r12, r0, r2
    4544:	e1b00061 	rrxs	r0, r1
    4548:	e2a00000 	adc	r0, r0, #0
    454c:	e193308c 	orrs	r3, r3, r12, lsl #1
    4550:	01c00fac 	biceq	r0, r0, r12, lsr #31
    4554:	e12fff1e 	bx	lr
    4558:	e3320000 	teq	r2, #0
    455c:	e200c102 	and	r12, r0, #-2147483648	; 0x80000000
    4560:	01a00080 	lsleq	r0, r0, #1
    4564:	03100502 	tsteq	r0, #8388608	; 0x800000
    4568:	02422001 	subeq	r2, r2, #1
    456c:	0afffffb 	beq	4560 <__aeabi_fmul+0xe0>
    4570:	e180000c 	orr	r0, r0, r12
    4574:	e3330000 	teq	r3, #0
    4578:	e201c102 	and	r12, r1, #-2147483648	; 0x80000000
    457c:	01a01081 	lsleq	r1, r1, #1
    4580:	03110502 	tsteq	r1, #8388608	; 0x800000
    4584:	02433001 	subeq	r3, r3, #1
    4588:	0afffffb 	beq	457c <__aeabi_fmul+0xfc>
    458c:	e181100c 	orr	r1, r1, r12
    4590:	eaffffc0 	b	4498 <__aeabi_fmul+0x18>
    4594:	e00c3ba1 	and	r3, r12, r1, lsr #23
    4598:	e132000c 	teq	r2, r12
    459c:	1133000c 	teqne	r3, r12
    45a0:	0a000005 	beq	45bc <__aeabi_fmul+0x13c>
    45a4:	e3d0c102 	bics	r12, r0, #-2147483648	; 0x80000000
    45a8:	13d1c102 	bicsne	r12, r1, #-2147483648	; 0x80000000
    45ac:	1affffe9 	bne	4558 <__aeabi_fmul+0xd8>
    45b0:	e0200001 	eor	r0, r0, r1
    45b4:	e2000102 	and	r0, r0, #-2147483648	; 0x80000000
    45b8:	e12fff1e 	bx	lr
    45bc:	e3300000 	teq	r0, #0
    45c0:	13300102 	teqne	r0, #-2147483648	; 0x80000000
    45c4:	01a00001 	moveq	r0, r1
    45c8:	13310000 	teqne	r1, #0
    45cc:	13310102 	teqne	r1, #-2147483648	; 0x80000000
    45d0:	0a00000d 	beq	460c <__aeabi_fmul+0x18c>
    45d4:	e132000c 	teq	r2, r12
    45d8:	1a000001 	bne	45e4 <__aeabi_fmul+0x164>
    45dc:	e1b02480 	lsls	r2, r0, #9
    45e0:	1a000009 	bne	460c <__aeabi_fmul+0x18c>
    45e4:	e133000c 	teq	r3, r12
    45e8:	1a000002 	bne	45f8 <__aeabi_fmul+0x178>
    45ec:	e1b03481 	lsls	r3, r1, #9
    45f0:	11a00001 	movne	r0, r1
    45f4:	1a000004 	bne	460c <__aeabi_fmul+0x18c>
    45f8:	e0200001 	eor	r0, r0, r1
    45fc:	e2000102 	and	r0, r0, #-2147483648	; 0x80000000
    4600:	e380047f 	orr	r0, r0, #2130706432	; 0x7f000000
    4604:	e3800502 	orr	r0, r0, #8388608	; 0x800000
    4608:	e12fff1e 	bx	lr
    460c:	e380047f 	orr	r0, r0, #2130706432	; 0x7f000000
    4610:	e3800503 	orr	r0, r0, #12582912	; 0xc00000
    4614:	e12fff1e 	bx	lr

00004618 <__aeabi_fdiv>:
    4618:	e3a0c0ff 	mov	r12, #255	; 0xff
    461c:	e01c2ba0 	ands	r2, r12, r0, lsr #23
    4620:	101c3ba1 	andsne	r3, r12, r1, lsr #23
    4624:	1132000c 	teqne	r2, r12
    4628:	1133000c 	teqne	r3, r12
    462c:	0a00003a 	beq	471c <__aeabi_fdiv+0x104>
    4630:	e0422003 	sub	r2, r2, r3
    4634:	e020c001 	eor	r12, r0, r1
    4638:	e1b01481 	lsls	r1, r1, #9
    463c:	e1a00480 	lsl	r0, r0, #9
    4640:	0a00001c 	beq	46b8 <__aeabi_fdiv+0xa0>
    4644:	e3a03201 	mov	r3, #268435456	; 0x10000000
    4648:	e1831221 	orr	r1, r3, r1, lsr #4
    464c:	e1833220 	orr	r3, r3, r0, lsr #4
    4650:	e20c0102 	and	r0, r12, #-2147483648	; 0x80000000
    4654:	e1530001 	cmp	r3, r1
    4658:	31a03083 	lslcc	r3, r3, #1
    465c:	e2a2207d 	adc	r2, r2, #125	; 0x7d
    4660:	e3a0c502 	mov	r12, #8388608	; 0x800000
    4664:	e1530001 	cmp	r3, r1
    4668:	20433001 	subcs	r3, r3, r1
    466c:	2180000c 	orrcs	r0, r0, r12
    4670:	e15300a1 	cmp	r3, r1, lsr #1
    4674:	204330a1 	subcs	r3, r3, r1, lsr #1
    4678:	218000ac 	orrcs	r0, r0, r12, lsr #1
    467c:	e1530121 	cmp	r3, r1, lsr #2
    4680:	20433121 	subcs	r3, r3, r1, lsr #2
    4684:	2180012c 	orrcs	r0, r0, r12, lsr #2
    4688:	e15301a1 	cmp	r3, r1, lsr #3
    468c:	204331a1 	subcs	r3, r3, r1, lsr #3
    4690:	218001ac 	orrcs	r0, r0, r12, lsr #3
    4694:	e1b03203 	lsls	r3, r3, #4
    4698:	11b0c22c 	lsrsne	r12, r12, #4
    469c:	1afffff0 	bne	4664 <__aeabi_fdiv+0x4c>
    46a0:	e35200fd 	cmp	r2, #253	; 0xfd
    46a4:	8affff9d 	bhi	4520 <__aeabi_fmul+0xa0>
    46a8:	e1530001 	cmp	r3, r1
    46ac:	e0a00b82 	adc	r0, r0, r2, lsl #23
    46b0:	03c00001 	biceq	r0, r0, #1
    46b4:	e12fff1e 	bx	lr
    46b8:	e20cc102 	and	r12, r12, #-2147483648	; 0x80000000
    46bc:	e18c04a0 	orr	r0, r12, r0, lsr #9
    46c0:	e292207f 	adds	r2, r2, #127	; 0x7f
    46c4:	c27230ff 	rsbsgt	r3, r2, #255	; 0xff
    46c8:	c1800b82 	orrgt	r0, r0, r2, lsl #23
    46cc:	c12fff1e 	bxgt	lr
    46d0:	e3800502 	orr	r0, r0, #8388608	; 0x800000
    46d4:	e3a03000 	mov	r3, #0
    46d8:	e2522001 	subs	r2, r2, #1
    46dc:	eaffff8f 	b	4520 <__aeabi_fmul+0xa0>
    46e0:	e3320000 	teq	r2, #0
    46e4:	e200c102 	and	r12, r0, #-2147483648	; 0x80000000
    46e8:	01a00080 	lsleq	r0, r0, #1
    46ec:	03100502 	tsteq	r0, #8388608	; 0x800000
    46f0:	02422001 	subeq	r2, r2, #1
    46f4:	0afffffb 	beq	46e8 <__aeabi_fdiv+0xd0>
    46f8:	e180000c 	orr	r0, r0, r12
    46fc:	e3330000 	teq	r3, #0
    4700:	e201c102 	and	r12, r1, #-2147483648	; 0x80000000
    4704:	01a01081 	lsleq	r1, r1, #1
    4708:	03110502 	tsteq	r1, #8388608	; 0x800000
    470c:	02433001 	subeq	r3, r3, #1
    4710:	0afffffb 	beq	4704 <__aeabi_fdiv+0xec>
    4714:	e181100c 	orr	r1, r1, r12
    4718:	eaffffc4 	b	4630 <__aeabi_fdiv+0x18>
    471c:	e00c3ba1 	and	r3, r12, r1, lsr #23
    4720:	e132000c 	teq	r2, r12
    4724:	1a000005 	bne	4740 <__aeabi_fdiv+0x128>
    4728:	e1b02480 	lsls	r2, r0, #9
    472c:	1affffb6 	bne	460c <__aeabi_fmul+0x18c>
    4730:	e133000c 	teq	r3, r12
    4734:	1affffaf 	bne	45f8 <__aeabi_fmul+0x178>
    4738:	e1a00001 	mov	r0, r1
    473c:	eaffffb2 	b	460c <__aeabi_fmul+0x18c>
    4740:	e133000c 	teq	r3, r12
    4744:	1a000003 	bne	4758 <__aeabi_fdiv+0x140>
    4748:	e1b03481 	lsls	r3, r1, #9
    474c:	0affff97 	beq	45b0 <__aeabi_fmul+0x130>
    4750:	e1a00001 	mov	r0, r1
    4754:	eaffffac 	b	460c <__aeabi_fmul+0x18c>
    4758:	e3d0c102 	bics	r12, r0, #-2147483648	; 0x80000000
    475c:	13d1c102 	bicsne	r12, r1, #-2147483648	; 0x80000000
    4760:	1affffde 	bne	46e0 <__aeabi_fdiv+0xc8>
    4764:	e3d02102 	bics	r2, r0, #-2147483648	; 0x80000000
    4768:	1affffa2 	bne	45f8 <__aeabi_fmul+0x178>
    476c:	e3d13102 	bics	r3, r1, #-2147483648	; 0x80000000
    4770:	1affff8e 	bne	45b0 <__aeabi_fmul+0x130>
    4774:	eaffffa4 	b	460c <__aeabi_fmul+0x18c>

00004778 <__gesf2>:
    4778:	e3e0c000 	mvn	r12, #0
    477c:	ea000002 	b	478c <__cmpsf2+0x4>

00004780 <__lesf2>:
    4780:	e3a0c001 	mov	r12, #1
    4784:	ea000000 	b	478c <__cmpsf2+0x4>

00004788 <__cmpsf2>:
    4788:	e3a0c001 	mov	r12, #1
    478c:	e52dc004 	push	{r12}		; (str r12, [sp, #-4]!)
    4790:	e1a02080 	lsl	r2, r0, #1
    4794:	e1a03081 	lsl	r3, r1, #1
    4798:	e1f0cc42 	mvns	r12, r2, asr #24
    479c:	11f0cc43 	mvnsne	r12, r3, asr #24
    47a0:	0a000007 	beq	47c4 <__cmpsf2+0x3c>
    47a4:	e28dd004 	add	sp, sp, #4
    47a8:	e192c0a3 	orrs	r12, r2, r3, lsr #1
    47ac:	11300001 	teqne	r0, r1
    47b0:	50520003 	subspl	r0, r2, r3
    47b4:	81a00fc1 	asrhi	r0, r1, #31
    47b8:	31e00fc1 	mvncc	r0, r1, asr #31
    47bc:	13800001 	orrne	r0, r0, #1
    47c0:	e12fff1e 	bx	lr
    47c4:	e1f0cc42 	mvns	r12, r2, asr #24
    47c8:	1a000001 	bne	47d4 <__cmpsf2+0x4c>
    47cc:	e1b0c480 	lsls	r12, r0, #9
    47d0:	1a000003 	bne	47e4 <__cmpsf2+0x5c>
    47d4:	e1f0cc43 	mvns	r12, r3, asr #24
    47d8:	1afffff1 	bne	47a4 <__cmpsf2+0x1c>
    47dc:	e1b0c481 	lsls	r12, r1, #9
    47e0:	0affffef 	beq	47a4 <__cmpsf2+0x1c>
    47e4:	e49d0004 	pop	{r0}		; (ldr r0, [sp], #4)
    47e8:	e12fff1e 	bx	lr

000047ec <__aeabi_cfrcmple>:
    47ec:	e1a0c000 	mov	r12, r0
    47f0:	e1a00001 	mov	r0, r1
    47f4:	e1a0100c 	mov	r1, r12
    47f8:	eaffffff 	b	47fc <__aeabi_cfcmpeq>

000047fc <__aeabi_cfcmpeq>:
    47fc:	e92d400f 	push	{r0, r1, r2, r3, lr}
    4800:	ebffffe0 	bl	4788 <__cmpsf2>
    4804:	e3500000 	cmp	r0, #0
    4808:	43700000 	cmnmi	r0, #0
    480c:	e8bd400f 	pop	{r0, r1, r2, r3, lr}
    4810:	e12fff1e 	bx	lr

00004814 <__aeabi_fcmpeq>:
    4814:	e52de008 	str	lr, [sp, #-8]!
    4818:	ebfffff7 	bl	47fc <__aeabi_cfcmpeq>
    481c:	03a00001 	moveq	r0, #1
    4820:	13a00000 	movne	r0, #0
    4824:	e49de008 	ldr	lr, [sp], #8
    4828:	e12fff1e 	bx	lr

0000482c <__aeabi_fcmplt>:
    482c:	e52de008 	str	lr, [sp, #-8]!
    4830:	ebfffff1 	bl	47fc <__aeabi_cfcmpeq>
    4834:	33a00001 	movcc	r0, #1
    4838:	23a00000 	movcs	r0, #0
    483c:	e49de008 	ldr	lr, [sp], #8
    4840:	e12fff1e 	bx	lr

00004844 <__aeabi_fcmple>:
    4844:	e52de008 	str	lr, [sp, #-8]!
    4848:	ebffffeb 	bl	47fc <__aeabi_cfcmpeq>
    484c:	93a00001 	movls	r0, #1
    4850:	83a00000 	movhi	r0, #0
    4854:	e49de008 	ldr	lr, [sp], #8
    4858:	e12fff1e 	bx	lr

0000485c <__aeabi_fcmpge>:
    485c:	e52de008 	str	lr, [sp, #-8]!
    4860:	ebffffe1 	bl	47ec <__aeabi_cfrcmple>
    4864:	93a00001 	movls	r0, #1
    4868:	83a00000 	movhi	r0, #0
    486c:	e49de008 	ldr	lr, [sp], #8
    4870:	e12fff1e 	bx	lr

00004874 <__aeabi_fcmpgt>:
    4874:	e52de008 	str	lr, [sp, #-8]!
    4878:	ebffffdb 	bl	47ec <__aeabi_cfrcmple>
    487c:	33a00001 	movcc	r0, #1
    4880:	23a00000 	movcs	r0, #0
    4884:	e49de008 	ldr	lr, [sp], #8
    4888:	e12fff1e 	bx	lr

0000488c <__aeabi_f2iz>:
    488c:	e1a02080 	lsl	r2, r0, #1
    4890:	e352047f 	cmp	r2, #2130706432	; 0x7f000000
    4894:	3a000008 	bcc	48bc <__aeabi_f2iz+0x30>
    4898:	e3a0309e 	mov	r3, #158	; 0x9e
    489c:	e0532c22 	subs	r2, r3, r2, lsr #24
    48a0:	9a000007 	bls	48c4 <__aeabi_f2iz+0x38>
    48a4:	e1a03400 	lsl	r3, r0, #8
    48a8:	e3833102 	orr	r3, r3, #-2147483648	; 0x80000000
    48ac:	e3100102 	tst	r0, #-2147483648	; 0x80000000
    48b0:	e1a00233 	lsr	r0, r3, r2
    48b4:	12600000 	rsbne	r0, r0, #0
    48b8:	e12fff1e 	bx	lr
    48bc:	e3a00000 	mov	r0, #0
    48c0:	e12fff1e 	bx	lr
    48c4:	e3720061 	cmn	r2, #97	; 0x61
    48c8:	1a000001 	bne	48d4 <__aeabi_f2iz+0x48>
    48cc:	e1b02480 	lsls	r2, r0, #9
    48d0:	1a000002 	bne	48e0 <__aeabi_f2iz+0x54>
    48d4:	e2100102 	ands	r0, r0, #-2147483648	; 0x80000000
    48d8:	03e00102 	mvneq	r0, #-2147483648	; 0x80000000
    48dc:	e12fff1e 	bx	lr
    48e0:	e3a00000 	mov	r0, #0
    48e4:	e12fff1e 	bx	lr

000048e8 <atexit>:
    48e8:	e1a01000 	mov	r1, r0
    48ec:	e3a00000 	mov	r0, #0
    48f0:	e92d4008 	push	{r3, lr}
    48f4:	e1a02000 	mov	r2, r0
    48f8:	e1a03000 	mov	r3, r0
    48fc:	eb000012 	bl	494c <__register_exitproc>
    4900:	e8bd4008 	pop	{r3, lr}
    4904:	e12fff1e 	bx	lr

00004908 <__errno>:
    4908:	e59f3004 	ldr	r3, [pc, #4]	; 4914 <__errno+0xc>
    490c:	e5930000 	ldr	r0, [r3]
    4910:	e12fff1e 	bx	lr
    4914:	00004fa8 	.word	0x00004fa8

00004918 <exit>:
    4918:	e92d4008 	push	{r3, lr}
    491c:	e3a01000 	mov	r1, #0
    4920:	e1a04000 	mov	r4, r0
    4924:	eb000045 	bl	4a40 <__call_exitprocs>
    4928:	e59f3018 	ldr	r3, [pc, #24]	; 4948 <exit+0x30>
    492c:	e5930000 	ldr	r0, [r3]
    4930:	e590303c 	ldr	r3, [r0, #60]	; 0x3c
    4934:	e3530000 	cmp	r3, #0
    4938:	11a0e00f 	movne	lr, pc
    493c:	112fff13 	bxne	r3
    4940:	e1a00004 	mov	r0, r4
    4944:	eb0000c9 	bl	4c70 <_exit>
    4948:	00004f40 	.word	0x00004f40

0000494c <__register_exitproc>:
    494c:	e59fc0e4 	ldr	r12, [pc, #228]	; 4a38 <__register_exitproc+0xec>
    4950:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
    4954:	e59c4000 	ldr	r4, [r12]
    4958:	e594c148 	ldr	r12, [r4, #328]	; 0x148
    495c:	e35c0000 	cmp	r12, #0
    4960:	0284cf53 	addeq	r12, r4, #332	; 0x14c
    4964:	e59c5004 	ldr	r5, [r12, #4]
    4968:	0584c148 	streq	r12, [r4, #328]	; 0x148
    496c:	e355001f 	cmp	r5, #31
    4970:	e24dd010 	sub	sp, sp, #16
    4974:	e1a06000 	mov	r6, r0
    4978:	da000015 	ble	49d4 <__register_exitproc+0x88>
    497c:	e59f00b8 	ldr	r0, [pc, #184]	; 4a3c <__register_exitproc+0xf0>
    4980:	e3500000 	cmp	r0, #0
    4984:	1a000001 	bne	4990 <__register_exitproc+0x44>
    4988:	e3e00000 	mvn	r0, #0
    498c:	ea000018 	b	49f4 <__register_exitproc+0xa8>
    4990:	e3a00e19 	mov	r0, #400	; 0x190
    4994:	e58d100c 	str	r1, [sp, #12]
    4998:	e58d2008 	str	r2, [sp, #8]
    499c:	e58d3004 	str	r3, [sp, #4]
    49a0:	e320f000 	nop	{0}
    49a4:	e250c000 	subs	r12, r0, #0
    49a8:	e59d100c 	ldr	r1, [sp, #12]
    49ac:	e59d2008 	ldr	r2, [sp, #8]
    49b0:	e59d3004 	ldr	r3, [sp, #4]
    49b4:	0afffff3 	beq	4988 <__register_exitproc+0x3c>
    49b8:	e5945148 	ldr	r5, [r4, #328]	; 0x148
    49bc:	e3a00000 	mov	r0, #0
    49c0:	e58c0004 	str	r0, [r12, #4]
    49c4:	e58c5000 	str	r5, [r12]
    49c8:	e584c148 	str	r12, [r4, #328]	; 0x148
    49cc:	e58c0188 	str	r0, [r12, #392]	; 0x188
    49d0:	e58c018c 	str	r0, [r12, #396]	; 0x18c
    49d4:	e3560000 	cmp	r6, #0
    49d8:	e59c4004 	ldr	r4, [r12, #4]
    49dc:	1a000007 	bne	4a00 <__register_exitproc+0xb4>
    49e0:	e2843002 	add	r3, r4, #2
    49e4:	e2844001 	add	r4, r4, #1
    49e8:	e78c1103 	str	r1, [r12, r3, lsl #2]
    49ec:	e58c4004 	str	r4, [r12, #4]
    49f0:	e3a00000 	mov	r0, #0
    49f4:	e28dd010 	add	sp, sp, #16
    49f8:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
    49fc:	e12fff1e 	bx	lr
    4a00:	e3a00001 	mov	r0, #1
    4a04:	e1a00410 	lsl	r0, r0, r4
    4a08:	e08c8104 	add	r8, r12, r4, lsl #2
    4a0c:	e3560002 	cmp	r6, #2
    4a10:	e59c7188 	ldr	r7, [r12, #392]	; 0x188
    4a14:	e5883108 	str	r3, [r8, #264]	; 0x108
    4a18:	059c318c 	ldreq	r3, [r12, #396]	; 0x18c
    4a1c:	e1877000 	orr	r7, r7, r0
    4a20:	01830000 	orreq	r0, r3, r0
    4a24:	e1a05008 	mov	r5, r8
    4a28:	e5882088 	str	r2, [r8, #136]	; 0x88
    4a2c:	e58c7188 	str	r7, [r12, #392]	; 0x188
    4a30:	058c018c 	streq	r0, [r12, #396]	; 0x18c
    4a34:	eaffffe9 	b	49e0 <__register_exitproc+0x94>
    4a38:	00004f40 	.word	0x00004f40
    4a3c:	00000000 	.word	0x00000000

00004a40 <__call_exitprocs>:
    4a40:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
    4a44:	e59f3168 	ldr	r3, [pc, #360]	; 4bb4 <__call_exitprocs+0x174>
    4a48:	e5933000 	ldr	r3, [r3]
    4a4c:	e24dd014 	sub	sp, sp, #20
    4a50:	e58d3004 	str	r3, [sp, #4]
    4a54:	e2833f52 	add	r3, r3, #328	; 0x148
    4a58:	e58d0008 	str	r0, [sp, #8]
    4a5c:	e58d300c 	str	r3, [sp, #12]
    4a60:	e1a07001 	mov	r7, r1
    4a64:	e3a08001 	mov	r8, #1
    4a68:	e59d3004 	ldr	r3, [sp, #4]
    4a6c:	e5936148 	ldr	r6, [r3, #328]	; 0x148
    4a70:	e3560000 	cmp	r6, #0
    4a74:	e59db00c 	ldr	r11, [sp, #12]
    4a78:	0a000033 	beq	4b4c <__call_exitprocs+0x10c>
    4a7c:	e5965004 	ldr	r5, [r6, #4]
    4a80:	e2554001 	subs	r4, r5, #1
    4a84:	5286a088 	addpl	r10, r6, #136	; 0x88
    4a88:	5285501f 	addpl	r5, r5, #31
    4a8c:	508a5105 	addpl	r5, r10, r5, lsl #2
    4a90:	5a000007 	bpl	4ab4 <__call_exitprocs+0x74>
    4a94:	ea000029 	b	4b40 <__call_exitprocs+0x100>
    4a98:	e5953000 	ldr	r3, [r5]
    4a9c:	e1530007 	cmp	r3, r7
    4aa0:	0a000005 	beq	4abc <__call_exitprocs+0x7c>
    4aa4:	e2444001 	sub	r4, r4, #1
    4aa8:	e3740001 	cmn	r4, #1
    4aac:	e2455004 	sub	r5, r5, #4
    4ab0:	0a000022 	beq	4b40 <__call_exitprocs+0x100>
    4ab4:	e3570000 	cmp	r7, #0
    4ab8:	1afffff6 	bne	4a98 <__call_exitprocs+0x58>
    4abc:	e5963004 	ldr	r3, [r6, #4]
    4ac0:	e06a2005 	rsb	r2, r10, r5
    4ac4:	e2433001 	sub	r3, r3, #1
    4ac8:	e0862002 	add	r2, r6, r2
    4acc:	e1530004 	cmp	r3, r4
    4ad0:	e5123078 	ldr	r3, [r2, #-120]	; 0xffffff88
    4ad4:	13a01000 	movne	r1, #0
    4ad8:	05864004 	streq	r4, [r6, #4]
    4adc:	15021078 	strne	r1, [r2, #-120]	; 0xffffff88
    4ae0:	e3530000 	cmp	r3, #0
    4ae4:	0affffee 	beq	4aa4 <__call_exitprocs+0x64>
    4ae8:	e1a02418 	lsl	r2, r8, r4
    4aec:	e5961188 	ldr	r1, [r6, #392]	; 0x188
    4af0:	e1120001 	tst	r2, r1
    4af4:	e5969004 	ldr	r9, [r6, #4]
    4af8:	0a000016 	beq	4b58 <__call_exitprocs+0x118>
    4afc:	e596118c 	ldr	r1, [r6, #396]	; 0x18c
    4b00:	e1120001 	tst	r2, r1
    4b04:	1a000016 	bne	4b64 <__call_exitprocs+0x124>
    4b08:	e59d0008 	ldr	r0, [sp, #8]
    4b0c:	e5151080 	ldr	r1, [r5, #-128]	; 0xffffff80
    4b10:	e1a0e00f 	mov	lr, pc
    4b14:	e12fff13 	bx	r3
    4b18:	e5963004 	ldr	r3, [r6, #4]
    4b1c:	e1530009 	cmp	r3, r9
    4b20:	1affffd0 	bne	4a68 <__call_exitprocs+0x28>
    4b24:	e59b3000 	ldr	r3, [r11]
    4b28:	e1530006 	cmp	r3, r6
    4b2c:	1affffcd 	bne	4a68 <__call_exitprocs+0x28>
    4b30:	e2444001 	sub	r4, r4, #1
    4b34:	e3740001 	cmn	r4, #1
    4b38:	e2455004 	sub	r5, r5, #4
    4b3c:	1affffdc 	bne	4ab4 <__call_exitprocs+0x74>
    4b40:	e59f1070 	ldr	r1, [pc, #112]	; 4bb8 <__call_exitprocs+0x178>
    4b44:	e3510000 	cmp	r1, #0
    4b48:	1a000009 	bne	4b74 <__call_exitprocs+0x134>
    4b4c:	e28dd014 	add	sp, sp, #20
    4b50:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
    4b54:	e12fff1e 	bx	lr
    4b58:	e1a0e00f 	mov	lr, pc
    4b5c:	e12fff13 	bx	r3
    4b60:	eaffffec 	b	4b18 <__call_exitprocs+0xd8>
    4b64:	e5150080 	ldr	r0, [r5, #-128]	; 0xffffff80
    4b68:	e1a0e00f 	mov	lr, pc
    4b6c:	e12fff13 	bx	r3
    4b70:	eaffffe8 	b	4b18 <__call_exitprocs+0xd8>
    4b74:	e5963004 	ldr	r3, [r6, #4]
    4b78:	e3530000 	cmp	r3, #0
    4b7c:	e5963000 	ldr	r3, [r6]
    4b80:	1a000008 	bne	4ba8 <__call_exitprocs+0x168>
    4b84:	e3530000 	cmp	r3, #0
    4b88:	0a000006 	beq	4ba8 <__call_exitprocs+0x168>
    4b8c:	e1a00006 	mov	r0, r6
    4b90:	e58b3000 	str	r3, [r11]
    4b94:	e320f000 	nop	{0}
    4b98:	e59b6000 	ldr	r6, [r11]
    4b9c:	e3560000 	cmp	r6, #0
    4ba0:	1affffb5 	bne	4a7c <__call_exitprocs+0x3c>
    4ba4:	eaffffe8 	b	4b4c <__call_exitprocs+0x10c>
    4ba8:	e1a0b006 	mov	r11, r6
    4bac:	e1a06003 	mov	r6, r3
    4bb0:	eafffff9 	b	4b9c <__call_exitprocs+0x15c>
    4bb4:	00004f40 	.word	0x00004f40
    4bb8:	00000000 	.word	0x00000000

00004bbc <register_fini>:
    4bbc:	e92d4008 	push	{r3, lr}
    4bc0:	e59f3010 	ldr	r3, [pc, #16]	; 4bd8 <register_fini+0x1c>
    4bc4:	e3530000 	cmp	r3, #0
    4bc8:	159f000c 	ldrne	r0, [pc, #12]	; 4bdc <register_fini+0x20>
    4bcc:	1bffff45 	blne	48e8 <atexit>
    4bd0:	e8bd4008 	pop	{r3, lr}
    4bd4:	e12fff1e 	bx	lr
    4bd8:	00004f68 	.word	0x00004f68
    4bdc:	00004be0 	.word	0x00004be0

00004be0 <__libc_fini_array>:
    4be0:	e92d4038 	push	{r3, r4, r5, lr}
    4be4:	e59f5030 	ldr	r5, [pc, #48]	; 4c1c <__libc_fini_array+0x3c>
    4be8:	e59f4030 	ldr	r4, [pc, #48]	; 4c20 <__libc_fini_array+0x40>
    4bec:	e0654004 	rsb	r4, r5, r4
    4bf0:	e1b04144 	asrs	r4, r4, #2
    4bf4:	10855104 	addne	r5, r5, r4, lsl #2
    4bf8:	0a000004 	beq	4c10 <__libc_fini_array+0x30>
    4bfc:	e5353004 	ldr	r3, [r5, #-4]!
    4c00:	e1a0e00f 	mov	lr, pc
    4c04:	e12fff13 	bx	r3
    4c08:	e2544001 	subs	r4, r4, #1
    4c0c:	1afffffa 	bne	4bfc <__libc_fini_array+0x1c>
    4c10:	eb0000d4 	bl	4f68 <__libc_fini>
    4c14:	e8bd4038 	pop	{r3, r4, r5, lr}
    4c18:	e12fff1e 	bx	lr
    4c1c:	00004f80 	.word	0x00004f80
    4c20:	00004f84 	.word	0x00004f84

00004c24 <__cs3_premain>:
    4c24:	e92d4008 	push	{r3, lr}
    4c28:	eb00001d 	bl	4ca4 <__libc_init_array>
    4c2c:	e59f3030 	ldr	r3, [pc, #48]	; 4c64 <__cs3_premain+0x40>
    4c30:	e3530000 	cmp	r3, #0
    4c34:	15930000 	ldrne	r0, [r3]
    4c38:	01a00003 	moveq	r0, r3
    4c3c:	e59f3024 	ldr	r3, [pc, #36]	; 4c68 <__cs3_premain+0x44>
    4c40:	e3530000 	cmp	r3, #0
    4c44:	15931000 	ldrne	r1, [r3]
    4c48:	01a01003 	moveq	r1, r3
    4c4c:	e3a02000 	mov	r2, #0
    4c50:	ebfff12d 	bl	110c <main>
    4c54:	e59f3010 	ldr	r3, [pc, #16]	; 4c6c <__cs3_premain+0x48>
    4c58:	e3530000 	cmp	r3, #0
    4c5c:	1bffff2d 	blne	4918 <exit>
    4c60:	eafffffe 	b	4c60 <__cs3_premain+0x3c>
	...
    4c6c:	00004918 	.word	0x00004918

00004c70 <_exit>:
    4c70:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    4c74:	e3a00018 	mov	r0, #24
    4c78:	e59f1004 	ldr	r1, [pc, #4]	; 4c84 <_exit+0x14>
    4c7c:	ef123456 	svc	0x00123456
    4c80:	eafffffe 	b	4c80 <_exit+0x10>
    4c84:	00020026 	.word	0x00020026

00004c88 <__cs3_isr_interrupt>:
    4c88:	eafffffe 	b	4c88 <__cs3_isr_interrupt>

00004c8c <__cs3_isr_undef>:
    4c8c:	eafffffe 	b	4c8c <__cs3_isr_undef>

00004c90 <__cs3_isr_swi>:
    4c90:	eafffffe 	b	4c90 <__cs3_isr_swi>

00004c94 <__cs3_isr_pabort>:
    4c94:	eafffffe 	b	4c94 <__cs3_isr_pabort>

00004c98 <__cs3_isr_dabort>:
    4c98:	eafffffe 	b	4c98 <__cs3_isr_dabort>

00004c9c <__cs3_isr_irq>:
    4c9c:	eafffffe 	b	4c9c <__cs3_isr_irq>

00004ca0 <__cs3_isr_fiq>:
    4ca0:	eafffffe 	b	4ca0 <__cs3_isr_fiq>

00004ca4 <__libc_init_array>:
    4ca4:	e92d4070 	push	{r4, r5, r6, lr}
    4ca8:	e59f506c 	ldr	r5, [pc, #108]	; 4d1c <__libc_init_array+0x78>
    4cac:	e59f606c 	ldr	r6, [pc, #108]	; 4d20 <__libc_init_array+0x7c>
    4cb0:	e0656006 	rsb	r6, r5, r6
    4cb4:	e1b06146 	asrs	r6, r6, #2
    4cb8:	12455004 	subne	r5, r5, #4
    4cbc:	13a04000 	movne	r4, #0
    4cc0:	0a000005 	beq	4cdc <__libc_init_array+0x38>
    4cc4:	e5b53004 	ldr	r3, [r5, #4]!
    4cc8:	e2844001 	add	r4, r4, #1
    4ccc:	e1a0e00f 	mov	lr, pc
    4cd0:	e12fff13 	bx	r3
    4cd4:	e1560004 	cmp	r6, r4
    4cd8:	1afffff9 	bne	4cc4 <__libc_init_array+0x20>
    4cdc:	e59f5040 	ldr	r5, [pc, #64]	; 4d24 <__libc_init_array+0x80>
    4ce0:	e59f6040 	ldr	r6, [pc, #64]	; 4d28 <__libc_init_array+0x84>
    4ce4:	e0656006 	rsb	r6, r5, r6
    4ce8:	eb000096 	bl	4f48 <_init>
    4cec:	e1b06146 	asrs	r6, r6, #2
    4cf0:	12455004 	subne	r5, r5, #4
    4cf4:	13a04000 	movne	r4, #0
    4cf8:	0a000005 	beq	4d14 <__libc_init_array+0x70>
    4cfc:	e5b53004 	ldr	r3, [r5, #4]!
    4d00:	e2844001 	add	r4, r4, #1
    4d04:	e1a0e00f 	mov	lr, pc
    4d08:	e12fff13 	bx	r3
    4d0c:	e1560004 	cmp	r6, r4
    4d10:	1afffff9 	bne	4cfc <__libc_init_array+0x58>
    4d14:	e8bd4070 	pop	{r4, r5, r6, lr}
    4d18:	e12fff1e 	bx	lr
    4d1c:	00004f60 	.word	0x00004f60
    4d20:	00004f60 	.word	0x00004f60
    4d24:	00004f60 	.word	0x00004f60
    4d28:	00004f68 	.word	0x00004f68

Disassembly of section .rodata:

00004d30 <ln2HI-0x8>:
    4d30:	00707865 	.word	0x00707865
    4d34:	00000000 	.word	0x00000000

00004d38 <ln2HI>:
    4d38:	fee00000 3fe62e42 fee00000 bfe62e42     ....B..?....B...

00004d48 <ln2LO>:
    4d48:	35793c76 3dea39ef 35793c76 bdea39ef     v<y5.9.=v<y5.9..

00004d58 <halF>:
    4d58:	00000000 3fe00000 00000000 bfe00000     .......?........

00004d68 <npio2_hw>:
    4d68:	3ff921fb 400921fb 4012d97c 401921fb     .!.?.!.@|..@.!.@
    4d78:	401f6a7a 4022d97c 4025fdbb 402921fb     zj.@|."@..%@.!)@
    4d88:	402c463a 402f6a7a 4031475c 4032d97c     :F,@zj/@\G1@|.2@
    4d98:	40346b9c 4035fdbb 40378fdb 403921fb     .k4@..5@..7@.!9@
    4da8:	403ab41b 403c463a 403dd85a 403f6a7a     ..:@:F<@Z.=@zj?@
    4db8:	40407e4c 4041475c 4042106c 4042d97c     L~@@\GA@l.B@|.B@
    4dc8:	4043a28c 40446b9c 404534ac 4045fdbb     ..C@.kD@.4E@..E@
    4dd8:	4046c6cb 40478fdb 404858eb 404921fb     ..F@..G@.XH@.!I@

00004de8 <two_over_pi>:
    4de8:	00a2f983 006e4e44 001529fc 002757d1     ....DNn..)...W'.
    4df8:	00f534dd 00c0db62 0095993c 00439041     .4..b...<...A.C.
    4e08:	00fe5163 00abdebb 00c561b7 00246e3a     cQ.......a..:n$.
    4e18:	00424dd2 00e00649 002eea09 00d1921c     .MB.I...........
    4e28:	00fe1deb 001cb129 00a73ee8 008235f5     ....)....>...5..
    4e38:	002ebb44 0084e99c 007026b4 005f7e41     D........&p.A~_.
    4e48:	003991d6 00398353 0039f49c 00845f8b     ..9.S.9...9.._..
    4e58:	00bdf928 003b1ff8 0097ffde 0005980f     (.....;.........
    4e68:	00ef2f11 008b5a0a 006d1f6d 00367ecf     ./...Z..m.m..~6.
    4e78:	0027cb09 00b74f46 003f669e 005fea2d     ..'.FO...f?.-._.
    4e88:	007527ba 00c7ebe5 00f17b3d 000739f7     .'u.....={...9..
    4e98:	008a5292 00ea6bfb 005fb11f 008d5d08     .R...k...._..]..
    4ea8:	00560330 0046fc7b 006babf0 00cfbc20     0.V.{.F...k. ...
    4eb8:	009af436 001da9e3 0091615e 00e61b08     6.......^a......
    4ec8:	00659985 005f14a0 0068408d 00ffd880     ..e..._..@h.....
    4ed8:	004d7327 00310606 001556ca 0073a8c9     'sM...1..V....s.
    4ee8:	0060e27b 00c08c6b                       {.`.k...

00004ef0 <init_jk>:
    4ef0:	00000002 00000003 00000004 00000006     ................

00004f00 <PIo2>:
    4f00:	40000000 3ff921fb 00000000 3e74442d     ...@.!.?....-Dt>
    4f10:	80000000 3cf84698 60000000 3b78cc51     .....F.<...`Q.x;
    4f20:	80000000 39f01b83 40000000 387a2520     .......9...@ %z8
    4f30:	80000000 36e38222 00000000 3569f31d     ...."..6......i5

00004f40 <_global_impure_ptr>:
    4f40:	00004fb0 00000043                       .O..C...

00004f48 <_init>:
    4f48:	e1a0c00d 	mov	r12, sp
    4f4c:	e92ddff8 	push	{r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, lr, pc}
    4f50:	e24cb004 	sub	r11, r12, #4
    4f54:	e24bd028 	sub	sp, r11, #40	; 0x28
    4f58:	e89d6ff0 	ldm	sp, {r4, r5, r6, r7, r8, r9, r10, r11, sp, lr}
    4f5c:	e12fff1e 	bx	lr

00004f60 <__init_array_start>:
    4f60:	00004bbc 	.word	0x00004bbc

00004f64 <__frame_dummy_init_array_entry>:
    4f64:	00000208                                ....

00004f68 <__libc_fini>:
    4f68:	e1a0c00d 	mov	r12, sp
    4f6c:	e92ddff8 	push	{r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, lr, pc}
    4f70:	e24cb004 	sub	r11, r12, #4
    4f74:	e24bd028 	sub	sp, r11, #40	; 0x28
    4f78:	e89d6ff0 	ldm	sp, {r4, r5, r6, r7, r8, r9, r10, r11, sp, lr}
    4f7c:	e12fff1e 	bx	lr

00004f80 <__fini_array_start>:
    4f80:	000001c4 	.word	0x000001c4

00004f84 <__cs3_regions>:
    4f84:	00000000 	.word	0x00000000
    4f88:	00000040 	.word	0x00000040
    4f8c:	00000040 	.word	0x00000040
    4f90:	000053a0 	.word	0x000053a0
    4f94:	00000020 	.word	0x00000020
